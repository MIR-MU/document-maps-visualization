var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.583,1,1.236]],["body/components/AppComponent.html",[0,1.021,1,2.071,2,1.599,3,0.276,4,0.276,5,1.617,6,1.617,7,1.617,8,1.617,9,0.19,10,3.005,11,0.695,12,2.968,13,2.873,14,3.606,15,3.251,16,4.715,17,1.417,18,2.732,19,2.196,20,4.095,21,1.177,22,2.764,23,2.595,24,2.968,25,1.926,26,5.453,27,1.926,28,4.802,29,0.748,30,1.334,31,4.634,32,5.198,33,5.198,34,4.095,35,1.334,36,4.393,37,2.53,38,3.005,39,3.988,40,1.458,41,4.802,42,0.924,43,0.024,44,1.261,45,0.669,46,0.817,47,2.732,48,4.081,49,2.196,50,3.536,51,0.675,52,1.926,53,1.255,54,1.372,55,2.353,56,3.536,57,5.361,58,4.081,59,1.181,60,3.536,61,2.353,62,2.196,63,2.203,64,4.393,65,0.732,66,4.081,67,4.081,68,1.425,69,4.081,70,3.536,71,0.417,72,0.439,73,3.536,74,0.276,75,0.307,76,4.634,77,0.632,78,2.185,79,3.536,80,4.802,81,3.536,82,4.802,83,3.536,84,4.802,85,2.589,86,4.802,87,2.732,88,3.005,89,2.655,90,3.536,91,2.011,92,2.394,93,1.418,94,1.334,95,1.863,96,3.328,97,2.53,98,2.873,99,3.082,100,3.102,101,2.494,102,3.899,103,3.692,104,2.873,105,2.011,106,1.863,107,2.394,108,3.005,109,2.011,110,3.536,111,2.732,112,2.011,113,2.011,114,2.394,115,2.655,116,3.536,117,2.011,118,2.655,119,2.011,120,2.011,121,1.108,122,2.055,123,2.196,124,1.617,125,2.675,126,1.617,127,1.617,128,1.252,129,1.617,130,1.252,131,1.418,132,1.617,133,1.252,134,1.617,135,1.252,136,1.617,137,1.332,138,1.617,139,1.252,140,1.617,141,1.177,142,1.617,143,1.177,144,1.617,145,1.177,146,1.617,147,1.252,148,1.252,149,0.59,150,1.617,151,1.617,152,0.012,153,0.016,154,0.012]],["title/modules/AppModule.html",[155,1.163,156,2.364]],["body/modules/AppModule.html",[1,2.535,3,0.379,4,0.379,9,0.26,43,0.024,71,0.608,72,0.603,74,0.379,75,0.421,121,1.522,152,0.016,153,0.019,154,0.016,155,1.617,156,4.828,157,1.719,158,2.559,159,3.607,160,3.918,161,3.64,162,2.221,163,4.128,164,4.128,165,4.128,166,4.128,167,4.242,168,3.616,169,3.103,170,2.763,171,1.617,172,4.857,173,2.887,174,2.887,175,5.891,176,5.006,177,3.647,178,4.857,179,3.647,180,5.891,181,4.857,182,5.891,183,5.891,184,4.128,185,3.647,186,3.988,187,2.559,188,4.857]],["title/modules/AppRouter.html",[155,1.163,167,2.158]],["body/modules/AppRouter.html",[3,0.405,4,0.405,9,0.278,18,3.708,43,0.024,71,0.566,72,0.644,74,0.405,75,0.45,152,0.017,153,0.02,154,0.017,157,1.835,162,2.371,167,3.785,173,2.54,174,3.001,186,4.146,187,2.731,189,5.184,190,5.205,191,4.146,192,5.184,193,3.509,194,5.184,195,1.439,196,4.895,197,6.125,198,5.184,199,5.184,200,1.529,201,5.184,202,5.184,203,5.184,204,5.184]],["title/interfaces/AppSettings.html",[149,0.583,205,2.158]],["body/interfaces/AppSettings.html",[0,1.039,3,0.363,4,0.363,9,0.249,11,0.673,22,1.865,23,2.446,25,1.865,27,1.865,29,0.724,30,1.593,43,0.024,45,0.743,52,1.865,54,1.323,59,1.67,63,1.751,65,0.835,71,0.403,72,0.577,74,0.448,75,0.403,77,1.025,143,1.548,148,1.646,149,1.084,152,0.015,153,0.019,154,0.015,205,4.013,206,2.45,207,3.148,208,3.492,209,2.071,210,4.66,211,5.518,212,5.518,213,5.518,214,5.518,215,2.907,216,3.022,217,2.454,218,2.16,219,3.492,220,3.952,221,3.952,222,1.751,223,2.874,224,2.645,225,3.492,226,1.143,227,2.874,228,2.874,229,4.67,230,2.126,231,2.605,232,3.952,233,3.952,234,3.492,235,2.126,236,3.952,237,3.952,238,3.952]],["title/classes/Color.html",[75,0.303,239,1.597]],["body/classes/Color.html",[0,0.637,2,1.886,3,0.2,4,0.2,9,0.137,11,0.66,17,1.49,29,0.398,35,1.059,37,1.348,40,1.357,42,1.32,43,0.024,44,1.168,45,0.578,46,1.168,49,1.17,51,1.152,54,0.929,59,1.713,62,2.31,65,0.843,74,0.422,75,0.469,77,1.013,94,1.63,149,0.637,152,0.008,153,0.013,154,0.008,195,1.81,209,1.27,226,1.328,228,1.581,230,1.744,239,3.287,240,1.921,241,1.732,242,2.357,243,4.293,244,3.086,245,3.813,246,4.988,247,3.813,248,5.126,249,4.293,250,4.591,251,4.293,252,4.293,253,2.559,254,5.801,255,5.825,256,2.559,257,5.636,258,3.241,259,5.774,260,2.559,261,1.671,262,4.988,263,5.239,264,3.241,265,4.293,266,3.241,267,2.559,268,2.559,269,2.559,270,1.63,271,4.815,272,4.988,273,3.81,274,3.241,275,2.559,276,3.241,277,2.582,278,3.241,279,3.241,280,3.241,281,2.559,282,3.423,283,2.559,284,3.241,285,2.863,286,1.921,287,3.423,288,2.283,289,1.603,290,2.174,291,1.921,292,2.424,293,2.863,294,3.423,295,1.921,296,2.174,297,2.863,298,1.921,299,2.174,300,2.174,301,2.582,302,2.174,303,1.17,304,2.174,305,2.174,306,2.174,307,3.874,308,3.874,309,3.241,310,2.174,311,1.35,312,2.174,313,2.174,314,1.455,315,2.174,316,1.455,317,3.431,318,2.846,319,3.241,320,2.169,321,2.174,322,2.174,323,3.874,324,2.174,325,2.174,326,4.293,327,2.009,328,2.169,329,2.174,330,2.174,331,1.455,332,4.293,333,2.174,334,4.293,335,2.174,336,4.293,337,2.174,338,3.241,339,5.59,340,2.863,341,3.241,342,3.874,343,2.174,344,4.815,345,4.815,346,4.815,347,4.815,348,2.174,349,2.174,350,3.874,351,2.174,352,2.174,353,2.174,354,0.852,355,2.174,356,2.174,357,2.174,358,2.174,359,2.174,360,2.174,361,3.874,362,2.174,363,2.174,364,0.71,365,2.174,366,1.921,367,2.174,368,2.174,369,2.174,370,2.174,371,1.732,372,3.423,373,2.174,374,2.174,375,2.174,376,2.174,377,2.174,378,2.174]],["title/components/ComparisonComponent.html",[0,0.583,128,1.236]],["body/components/ComparisonComponent.html",[0,0.874,1,0.74,2,1.088,3,0.163,4,0.163,5,1.84,6,0.956,7,0.956,8,0.956,9,0.112,11,0.715,13,1.101,15,2.212,17,0.964,19,1.494,20,3.021,21,0.696,22,2.505,23,2.38,25,1.311,27,1.311,29,0.325,30,0.907,35,0.907,36,3.416,37,1.101,40,1.541,42,1.29,43,0.024,44,1.264,45,0.773,46,1.141,51,1.111,52,2.606,53,1.052,54,0.82,59,0.989,65,0.734,66,1.777,68,0.546,71,0.395,72,0.26,74,0.314,75,0.181,77,0.813,85,1.311,87,2.588,91,2.289,92,2.212,93,0.839,94,1.371,95,1.722,96,1.859,97,2.6,98,2.12,99,2.6,104,2.397,105,1.859,106,1.722,109,2.289,111,1.859,112,2.289,113,3.219,117,1.859,119,1.859,120,1.189,121,0.655,122,2.545,123,2.772,124,0.956,125,2.08,126,0.956,127,0.956,128,1.61,129,0.956,130,0.74,131,2.099,132,0.956,133,0.74,134,0.956,135,0.74,136,0.956,137,0.787,138,0.956,139,0.74,140,0.956,141,0.696,142,0.956,143,0.696,144,0.956,145,0.696,146,0.956,147,0.74,148,2.106,149,0.672,150,0.956,151,0.956,152,0.007,153,0.011,154,0.007,170,1.189,185,1.57,195,1.518,200,1.342,215,0.894,216,2.6,217,1.398,218,1.515,222,2.427,223,2.811,224,2.289,226,1.214,227,2.02,231,1.825,239,1.494,242,2.02,261,1.456,277,1.415,288,0.74,289,0.804,292,1.398,311,2.371,314,1.189,316,1.189,364,0.581,379,1.415,380,1.311,381,5.233,382,2.003,383,2.02,384,3.419,385,4.023,386,3.268,387,4.023,388,4.942,389,2.486,390,4.936,391,4.023,392,4.936,393,4.936,394,2.486,395,3.268,396,4.549,397,4.549,398,4.549,399,4.549,400,3.268,401,3.268,402,2.777,403,1.722,404,3.021,405,2.02,406,4.023,407,4.023,408,1.57,409,3.448,410,3.268,411,2.12,412,1.747,413,2.289,414,2.091,415,2.6,416,2.915,417,1.936,418,2.091,419,3.866,420,4.549,421,2.397,422,2.451,423,2.091,424,3.268,425,4.023,426,2.091,427,3.268,428,2.419,429,1.494,430,3.268,431,2.091,432,2.454,433,2.091,434,4.549,435,3.866,436,2.333,437,2.091,438,2.18,439,2.091,440,3.268,441,2.131,442,3.268,443,2.091,444,3.379,445,2.12,446,3.419,447,2.091,448,2.811,449,2.091,450,1.292,451,1.189,452,2.091,453,1.57,454,2.091,455,2.777,456,3.866,457,2.091,458,2.091,459,2.091,460,1.601,461,2.777,462,2.777,463,3.268,464,2.212,465,3.866,466,2.091,467,2.091,468,3.676,469,2.02,470,2.289,471,2.091,472,3.268,473,3.268,474,2.091,475,4.549,476,2.091,477,2.091,478,2.419,479,2.777,480,1.722,481,1.57,482,1.777,483,1.777,484,1.415,485,1.398,486,1.57,487,1.415,488,1.777,489,1.777,490,2.091,491,2.091,492,1.777,493,2.091,494,3.268,495,1.101,496,2.091,497,1.722,498,3.268,499,2.091,500,2.091,501,2.091,502,2.091,503,2.091,504,2.091,505,2.091,506,1.101,507,2.091,508,2.091,509,4.023,510,2.091,511,2.091,512,2.091,513,2.091,514,2.02,515,2.08,516,2.091,517,2.091,518,3.268,519,1.231,520,3.268,521,3.268,522,2.811,523,2.091,524,2.091,525,2.091,526,2.091,527,2.091,528,2.091,529,1.777,530,2.091,531,1.189,532,2.091,533,2.091,534,2.091,535,1.777,536,2.091,537,2.091,538,2.091,539,2.091,540,1.777,541,3.08,542,1.777,543,2.091,544,2.091,545,2.212,546,2.091,547,2.091,548,2.454,549,3.268,550,2.091,551,2.091,552,2.091,553,3.268,554,3.707,555,1.57,556,1.777,557,2.091,558,2.091,559,3.268,560,3.08,561,2.212,562,3.051,563,1.415,564,2.091,565,1.57,566,1.292,567,1.292,568,1.415,569,1.415,570,1.57,571,2.777,572,3.268,573,2.091,574,2.091,575,2.091,576,2.091,577,2.454,578,1.777,579,0.787,580,2.091,581,2.091,582,1.415,583,2.091,584,2.091,585,1.415,586,1.57,587,1.415,588,1.415,589,1.777,590,2.091,591,1.57]],["title/components/ComparisonEntryComponent.html",[0,0.583,130,1.236]],["body/components/ComparisonEntryComponent.html",[0,0.891,1,1.2,2,1.554,3,0.265,4,0.265,5,1.55,6,1.55,7,1.55,8,1.55,9,0.182,11,0.676,13,2.458,21,1.129,22,2.746,23,2.579,25,1.872,27,1.872,29,0.528,35,1.296,40,1.475,42,0.886,43,0.024,44,1.233,45,0.712,46,0.784,51,0.891,52,1.872,59,1.532,62,2.134,63,1.757,65,0.772,68,1.394,71,0.463,72,0.421,74,0.265,75,0.294,77,0.606,85,1.872,87,2.654,91,1.928,93,1.36,94,1.596,96,3.27,97,2.811,98,2.458,99,2.811,100,1.928,101,1.55,102,2.095,103,2.295,104,1.786,109,1.928,111,2.654,113,3.035,114,2.295,115,2.546,119,3.035,121,1.062,122,1.996,123,2.134,124,1.55,125,2.628,126,1.55,127,1.55,128,1.2,129,1.55,130,2.035,131,2.705,132,1.55,133,1.2,134,1.55,135,1.2,136,1.55,137,1.277,138,1.55,139,1.2,140,1.55,141,1.129,142,1.55,143,1.129,144,1.55,145,1.129,146,1.55,147,1.2,148,1.889,149,0.566,150,1.55,151,1.55,152,0.011,153,0.015,154,0.011,200,1,209,1.554,216,2.811,217,2.579,218,1.757,222,2.346,226,0.833,239,1.55,261,1.376,288,1.2,289,0.833,314,3.27,318,2.458,364,1.296,403,2.458,405,2.884,416,2.286,417,1.652,419,3.965,422,2.49,438,1.652,445,3.362,450,2.884,451,2.654,453,4.006,460,2.286,480,3.175,562,2.095,568,2.295,569,2.295,577,3.504,582,2.295,585,2.295,592,5.525,593,4.882,594,2.881,595,3.965,596,4.666,597,5.336,598,4.666,599,6.502,600,4.666,601,5.336,602,5.748,603,5.336,604,3.39,605,4.666,606,2.286,607,4.666,608,3.39,609,3.39,610,3.39,611,2.654,612,3.39,613,3.965,614,3.39,615,2.458,616,3.891,617,4.666,618,5.748,619,3.39,620,3.159,621,4.666,622,2.881,623,3.39,624,3.39,625,3.39,626,3.39,627,3.39,628,3.39,629,4.666,630,4.666,631,2.295,632,2.881,633,3.39,634,2.881,635,2.881,636,3.39,637,3.39,638,2.881,639,3.39,640,2.546,641,2.881,642,2.546,643,3.39,644,3.39,645,3.39,646,2.546,647,3.39,648,2.546,649,4.666]],["title/interfaces/Corpus.html",[149,0.583,412,1.236]],["body/interfaces/Corpus.html",[3,0.241,4,0.241,9,0.104,11,0.281,12,1.905,17,1.288,29,0.742,30,0.856,43,0.024,45,0.726,51,1.112,53,0.507,54,0.781,59,1.664,61,2.14,62,1.754,63,1.444,65,0.923,68,1.485,71,0.268,74,0.496,77,1.218,85,1.237,93,1.538,94,1.323,149,0.949,152,0.006,153,0.01,154,0.017,171,0.646,195,1.929,200,1.288,206,1.023,209,1.586,218,1.444,226,1.307,231,2.461,261,1.568,270,1.704,288,1.546,289,1.599,292,0.831,303,0.888,311,1.546,317,1.754,318,1.624,327,2.02,328,1.754,331,1.754,354,1.688,364,0.539,380,1.237,382,2.248,394,2.37,411,1.023,412,2.52,417,1.546,421,2.905,422,2.367,429,1.41,436,0.779,438,1.091,441,2.341,445,1.624,448,3.597,460,2.962,468,1.2,469,1.905,478,1.879,480,1.624,485,1.319,495,2.905,497,3.067,506,2.02,514,1.2,515,1.997,519,1.91,531,1.754,579,1.794,606,2.852,611,1.104,615,1.624,650,1.104,651,2.702,652,2.702,653,2.484,654,2.885,655,2.484,656,2.087,657,3.13,658,2.087,659,1.624,660,2.596,661,2.087,662,2.944,663,2.087,664,2.087,665,2.509,666,2.605,667,0.951,668,0.779,669,1.314,670,3.024,671,2.37,672,2.37,673,2.087,674,2.087,675,1.314,676,2.509,677,3.316,678,3.225,679,1.314,680,2.911,681,1.2,682,1.314,683,1.314,684,1.314,685,1.314,686,2.087,687,1.314,688,1.314,689,2.181,690,2.087,691,2.087,692,1.314,693,1.104,694,1.104,695,1.905,696,1.905,697,1.314,698,1.023,699,3.067,700,0.888,701,2.699,702,3.408,703,1.104,704,1.2,705,1.314,706,1.314,707,1.104,708,1.314,709,2.3,710,1.104,711,2.956,712,1.314,713,1.314,714,1.314,715,1.314,716,1.314,717,2.956,718,1.754,719,2.181,720,1.104,721,1.314,722,1.314,723,2.087,724,1.314,725,1.314,726,1.511,727,1.754,728,1.104,729,2.087,730,2.087,731,2.087,732,2.087,733,1.314,734,1.314,735,1.2,736,1.314,737,2.087,738,2.087,739,2.087,740,1.314,741,1.104,742,2.699,743,1.314,744,2.37,745,1.314,746,2.671,747,2.37,748,1.2,749,1.314,750,1.314,751,1.237,752,2.596,753,1.314,754,1.314,755,1.754,756,3.408,757,1.104,758,2.37,759,2.944,760,1.314,761,1.905,762,1.104,763,2.087,764,1.104,765,2.087,766,2.087,767,1.314,768,1.314,769,1.314,770,1.314,771,1.2,772,3.225,773,1.314,774,2.087,775,2.087,776,2.087,777,1.314,778,2.087,779,1.314,780,1.314,781,1.314,782,1.2,783,1.314,784,1.314,785,1.314,786,1.538,787,1.2,788,1.314,789,1.314,790,2.17,791,1.314,792,2.087,793,1.905,794,2.699,795,1.905,796,1.511,797,1.2,798,2.3,799,2.087,800,2.087,801,2.087,802,2.087,803,2.087,804,1.314,805,2.087,806,1.2,807,2.087,808,1.314,809,1.314,810,1.023,811,1.2,812,2.37,813,1.2,814,2.699,815,1.023,816,2.181,817,1.2,818,1.2,819,1.314,820,1.905,821,1.2,822,1.2,823,2.087,824,2.087,825,1.905,826,2.484,827,2.087,828,1.314,829,1.2,830,2.087,831,1.314,832,1.314,833,2.087,834,1.314,835,1.314,836,1.314,837,1.314,838,2.087,839,1.314,840,1.314,841,1.2,842,1.314,843,1.314,844,1.2,845,1.2]],["title/guards/CorpusLoadedGuard.html",[191,2.364,846,2.622]],["body/guards/CorpusLoadedGuard.html",[3,0.355,4,0.355,9,0.243,11,0.818,19,2.077,24,2.807,29,0.707,35,1.57,37,2.978,40,1.307,42,1.187,43,0.024,44,1.05,45,0.519,46,1.05,47,3.216,51,1.265,55,2.225,68,1.477,71,0.575,72,0.564,74,0.355,75,0.394,77,1.01,78,3.493,152,0.015,153,0.019,154,0.015,187,2.393,190,5.739,191,3.827,193,4.637,200,1.34,215,2.419,289,1.513,316,2.584,408,3.41,409,4.02,412,2.424,428,2.77,481,3.41,666,3.246,667,2.225,680,2.77,847,4.542,848,5.23,849,3.86,850,5.653,851,5.653,852,5.653,853,5.653,854,3.827,855,5.972,856,4.542,857,5.653,858,3.827,859,4.804,860,5.653,861,4.542,862,5.653,863,2.77,864,3.86,865,3.075,866,4.542,867,4.542,868,3.41,869,4.542]],["title/classes/DefaultColors.html",[75,0.303,371,2.364]],["body/classes/DefaultColors.html",[0,0.677,2,1.944,3,0.217,4,0.217,9,0.149,11,0.403,17,1.196,29,0.433,30,1.126,40,1.106,43,0.024,49,1.272,51,0.775,53,1.251,54,1.14,59,1.664,62,1.855,65,0.784,74,0.437,75,0.485,77,1.044,94,1.674,149,0.464,152,0.009,153,0.013,154,0.009,195,1.839,209,0.926,226,1.375,228,1.719,230,1.272,239,3.205,240,2.089,241,1.883,242,1.719,243,3.446,244,3.24,246,5.574,248,4.47,249,2.364,250,3.446,251,2.364,252,2.364,254,5.813,255,5.839,257,5.674,258,2.364,259,5.627,261,1.412,262,4.752,263,4.961,264,2.364,265,3.446,266,2.364,270,1.553,271,4.067,272,4.752,273,3.725,274,2.364,276,2.364,277,1.883,278,2.364,279,2.364,280,2.364,282,3.045,284,2.364,285,2.089,286,2.089,287,3.594,288,2.322,289,1.642,290,2.364,291,2.089,292,2.498,293,3.045,294,3.594,295,2.089,296,2.364,297,3.045,298,2.089,299,2.364,300,2.364,301,2.745,302,2.364,303,1.272,304,2.364,305,2.364,306,2.364,307,4.067,308,4.067,309,3.446,310,2.364,311,1.436,312,2.364,313,2.364,314,1.582,315,2.364,316,1.582,317,3.514,318,2.946,319,3.446,320,2.307,321,2.364,322,2.364,323,4.067,324,2.364,325,2.364,326,4.47,327,2.136,328,2.307,329,2.364,330,2.364,331,1.582,332,4.47,333,2.364,334,4.47,335,2.364,336,4.47,337,2.364,338,3.446,339,5.674,340,3.045,341,3.446,342,4.067,343,2.364,344,4.961,345,4.961,346,4.961,347,4.961,348,2.364,349,2.364,350,4.067,351,2.364,352,2.364,353,2.364,354,0.926,355,2.364,356,2.364,357,2.364,358,2.364,359,2.364,360,2.364,361,4.067,362,2.364,363,2.364,364,0.772,365,2.364,366,2.089,367,2.364,368,2.364,369,2.364,370,3.446,371,2.745,372,4.73,373,4.067,374,2.364,375,4.067,376,2.364,377,4.067,378,2.364,870,2.781,871,2.781,872,2.781]],["title/components/DocumentComponent.html",[0,0.583,133,1.236]],["body/components/DocumentComponent.html",[0,1.114,1,1.432,2,1.749,3,0.316,4,0.316,5,1.85,6,1.85,7,1.85,8,1.85,9,0.217,11,0.586,21,1.347,22,2.817,23,2.645,25,2.107,27,2.107,29,0.908,40,1.515,43,0.024,44,1.214,45,0.75,59,1.291,63,1.978,65,0.705,68,1.802,71,0.506,72,0.502,74,0.316,75,0.351,121,1.268,122,2.247,123,2.402,124,1.85,125,2.822,126,1.85,127,1.85,128,1.432,129,1.85,130,1.432,131,1.623,132,1.85,133,2.185,134,1.85,135,1.432,136,1.85,137,1.524,138,1.85,139,1.432,140,1.85,141,1.347,142,1.85,143,1.347,144,1.85,145,1.347,146,1.85,147,1.432,148,1.432,149,0.676,150,1.85,151,1.85,152,0.013,153,0.017,154,0.013,209,1.749,217,2.855,235,2.997,311,2.32,383,3.814,389,3.604,403,2.767,413,3.317,415,3.453,416,2.573,417,2.185,422,1.859,436,2.107,438,1.859,444,3.246,470,3.638,482,3.438,515,2.402,579,1.978,611,2.988,700,2.822,873,3.438,874,3.555,875,5.831,876,5.252,877,4.955,878,3.948,879,3.948,880,3.948,881,4.046,882,4.046,883,4.046,884,4.046,885,4.046,886,4.463,887,4.046,888,2.739,889,5.252,890,5.252]],["title/components/DocumentContentComponent.html",[0,0.583,135,1.236]],["body/components/DocumentContentComponent.html",[0,0.687,1,0.766,2,1.117,3,0.169,4,0.169,5,0.989,6,0.989,7,0.989,8,0.989,9,0.116,11,0.671,19,1.534,20,3.087,21,0.72,22,2.524,23,2.37,25,1.346,27,1.346,29,0.64,30,0.932,35,0.932,36,3.479,37,1.768,40,1.499,42,1.211,43,0.024,44,1.227,45,0.735,46,1.071,51,1.014,52,1.858,55,1.06,59,0.825,63,1.264,65,0.895,67,2.851,68,1.731,71,0.48,72,0.268,74,0.169,75,0.188,76,4.51,77,1.023,91,2.636,94,0.601,97,1.139,101,2.91,114,1.464,121,0.678,122,2.514,123,1.534,124,0.989,125,2.119,126,0.989,127,0.989,128,0.766,129,0.989,130,0.766,131,0.867,132,0.989,133,0.766,134,0.989,135,1.64,136,0.989,137,0.814,138,0.989,139,0.766,140,0.989,141,0.72,142,0.989,143,0.72,144,0.989,145,0.72,146,0.989,147,0.766,148,0.766,149,0.361,150,0.989,151,0.989,152,0.007,153,0.011,154,0.007,171,1.543,195,1.724,200,1.733,209,1.543,215,1.436,217,2.369,226,1.233,227,2.074,231,0.867,234,3.479,235,2.91,239,1.88,288,1.188,289,1.361,301,1.464,311,1.96,314,3.343,327,1.139,364,1.142,380,1.649,382,2.345,383,3.099,384,3.494,389,3.632,402,2.851,403,1.768,415,3.015,416,2.457,417,1.188,421,1.768,422,2.465,428,2.27,429,1.534,436,2.296,438,2.296,441,1.548,444,3.711,445,1.139,455,2.851,456,3.937,462,2.851,470,3.719,478,2.27,515,1.534,531,1.909,540,1.838,541,3.593,545,2.272,563,1.464,566,2.863,567,2.863,579,2.262,582,1.464,587,3.137,588,3.137,631,1.464,638,3.494,640,4.908,668,0.867,704,1.336,742,2.074,744,2.074,746,2.166,748,1.336,751,1.858,786,0.867,790,1.436,815,1.139,874,2.272,877,3.494,878,2.783,879,2.783,880,2.783,886,2.851,888,1.464,891,5.555,892,4.908,893,1.838,894,2.851,895,3.355,896,3.355,897,4.111,898,3.355,899,4.111,900,4.262,901,2.796,902,4.633,903,4.633,904,3.355,905,3.355,906,2.163,907,2.853,908,3.355,909,1.879,910,4.111,911,5.015,912,4.111,913,2.163,914,2.163,915,2.163,916,2.163,917,2.163,918,2.163,919,2.163,920,3.494,921,2.851,922,3.355,923,3.355,924,2.163,925,3.355,926,5.307,927,3.355,928,4.705,929,3.355,930,5.876,931,2.163,932,3.937,933,5.307,934,2.52,935,3.355,936,3.355,937,2.163,938,3.355,939,3.355,940,3.355,941,3.355,942,3.355,943,5.015,944,2.163,945,2.163,946,2.163,947,2.163,948,2.163,949,2.163,950,1.838,951,2.163,952,3.087,953,1.838,954,1.624,955,1.336,956,2.163,957,1.838,958,3.355,959,3.355,960,2.163,961,2.163,962,2.163,963,2.163,964,2.163,965,2.163,966,2.163,967,2.163,968,2.163,969,2.163,970,2.163,971,2.163,972,2.52,973,2.163,974,2.074,975,2.163,976,3.494,977,2.163,978,2.163,979,2.163,980,2.163,981,2.163,982,2.163,983,1.838,984,3.355,985,2.163,986,1.624,987,2.163,988,2.163,989,3.494,990,2.163,991,2.163,992,2.163,993,2.163,994,2.163,995,1.838,996,2.163,997,2.163,998,2.851,999,2.163,1000,2.163,1001,2.163,1002,2.163,1003,2.163,1004,5.463,1005,2.163,1006,2.163,1007,5.307,1008,2.163,1009,2.163,1010,2.163,1011,2.163,1012,2.163,1013,2.163,1014,6.485,1015,2.163,1016,2.163,1017,2.163,1018,2.163,1019,1.838]],["title/pipes/EscapeHtmlPipe.html",[907,1.987,909,1.236]],["body/pipes/EscapeHtmlPipe.html",[3,0.392,4,0.392,9,0.269,11,0.87,19,2.297,21,1.672,35,1.395,40,1.161,42,1.313,43,0.024,44,1.487,45,0.574,46,1.161,51,0.959,65,0.915,71,0.436,72,0.624,74,0.392,75,0.436,77,0.898,122,2.572,152,0.016,153,0.02,154,0.016,270,1.669,289,1.235,579,2.567,900,5.108,907,3.419,909,2.449,989,5.108,1020,2.857,1021,5.108,1022,4.268,1023,6.01,1024,6.01,1025,3.975,1026,6.01,1027,5.022,1028,6.01,1029,3.714,1030,5.022,1031,5.022,1032,5.022,1033,5.022,1034,5.022,1035,5.022,1036,5.022,1037,5.022]],["title/interfaces/GraphData.html",[149,0.583,698,1.84]],["body/interfaces/GraphData.html",[3,0.306,4,0.247,9,0.107,11,0.29,12,1.237,17,1.154,29,0.753,30,0.877,43,0.024,45,0.361,51,1.122,53,0.523,54,0.797,59,1.67,61,2.176,62,1.789,63,1.473,65,0.921,68,1.457,71,0.274,74,0.499,77,1.222,85,1.267,93,1.267,94,1.342,149,0.958,152,0.007,153,0.01,154,0.013,171,0.666,195,1.935,200,0.932,206,1.054,209,1.479,218,1.473,226,1.322,231,2.479,261,1.515,270,1.716,288,1.572,289,1.608,292,0.856,303,1.444,311,1.572,317,1.796,318,1.054,327,2.061,328,1.796,331,1.796,354,1.711,364,0.556,380,1.267,382,2.215,394,2.417,411,1.664,412,2.519,417,1.572,421,2.937,422,2.355,429,1.444,436,0.803,438,1.118,441,2.357,445,1.664,460,2.985,468,1.237,469,1.952,478,1.917,480,1.664,485,1.351,495,2.937,497,3.094,506,2.061,514,1.237,515,1.789,519,1.935,531,1.138,579,1.821,606,2.811,611,1.138,615,1.664,650,1.138,651,2.369,652,1.917,653,1.138,654,1.796,655,1.138,656,1.355,657,3.022,658,1.355,659,1.054,660,2.138,661,1.355,662,2.745,663,1.355,664,1.355,665,2.547,666,2.635,667,0.981,668,0.803,669,1.355,670,3.06,671,2.745,672,2.745,673,2.138,674,2.138,675,1.355,676,2.833,677,3.329,678,3.273,679,1.355,680,2.936,681,1.237,682,1.355,683,1.355,684,1.355,685,1.355,686,2.138,687,1.355,688,1.355,689,2.75,690,2.138,691,2.138,692,1.355,693,1.138,694,1.796,695,2.417,696,2.417,697,2.138,698,1.664,699,3.333,700,1.444,701,3.445,702,3.445,703,1.138,704,1.237,705,1.355,706,1.355,707,1.138,708,1.355,709,2.34,710,1.138,711,3.007,712,1.355,713,1.355,714,1.355,715,1.355,716,1.355,717,3.007,718,1.796,719,2.225,720,1.138,721,1.355,722,1.355,723,2.138,724,1.355,725,1.355,726,1.547,727,1.796,728,1.138,729,2.138,730,2.138,731,2.138,732,2.138,733,1.355,734,1.355,735,1.237,736,1.355,737,2.138,738,2.138,739,2.138,740,1.355,741,1.138,742,2.745,743,1.355,744,2.417,745,1.355,746,2.706,747,2.417,748,1.237,749,1.355,750,1.355,751,1.267,752,2.648,753,1.355,754,1.355,755,1.796,756,3.445,757,1.138,758,2.417,759,2.988,760,1.355,761,1.952,762,1.138,763,2.138,764,1.138,765,2.138,766,2.138,767,1.355,768,1.355,769,1.355,770,1.355,771,1.237,772,3.273,773,1.355,774,2.138,775,2.138,776,2.138,777,1.355,778,2.138,779,1.355,780,1.355,781,1.355,782,1.237,783,1.355,784,1.355,785,1.355,786,1.569,787,1.237,788,1.355,789,1.355,790,2.198,791,1.355,792,2.138,793,1.952,794,2.745,795,1.952,796,1.547,797,1.237,798,2.34,799,2.138,800,2.138,801,2.138,802,2.138,803,2.138,804,1.355,805,2.138,806,1.237,807,2.138,808,1.355,809,1.355,810,1.054,811,1.237,812,2.417,813,1.237,814,2.745,815,1.054,816,2.225,817,1.237,818,1.237,819,1.355,820,1.952,821,1.237,822,1.237,823,2.138,824,2.138,825,1.952,826,2.527,827,2.138,828,1.355,829,1.237,830,2.138,831,1.355,832,1.355,833,2.138,834,1.355,835,1.355,836,1.355,837,1.355,838,2.138,839,1.355,840,1.355,841,1.237,842,1.355,843,1.355,844,1.237,845,1.237]],["title/interfaces/GraphLink.html",[149,0.583,689,1.987]],["body/interfaces/GraphLink.html",[3,0.244,4,0.376,9,0.106,11,0.286,12,1.222,17,1.302,29,0.864,30,0.869,43,0.024,45,0.505,46,0.723,51,1.118,53,0.517,54,1.042,59,1.688,61,2.162,62,1.775,63,1.462,65,0.929,68,1.451,71,0.271,74,0.498,77,1.22,85,1.255,93,1.255,94,1.335,149,0.954,152,0.006,153,0.01,154,0.013,171,0.659,195,1.932,200,0.923,206,1.042,209,1.292,218,1.462,226,1.316,231,2.472,261,1.579,270,1.711,288,1.562,289,1.605,292,0.846,303,0.904,311,1.562,317,1.78,318,1.042,327,2.045,328,1.78,331,1.78,354,1.783,364,0.549,380,1.255,382,2.209,394,2.399,411,1.042,412,2.517,417,1.702,421,2.924,422,2.351,429,1.431,436,0.793,438,1.107,441,2.351,445,1.648,460,2.976,468,1.222,469,2.399,478,1.902,480,1.648,485,1.661,495,2.924,497,3.084,506,2.045,514,1.222,515,1.775,519,2.016,531,1.125,579,1.81,606,2.868,611,1.125,615,1.648,650,1.125,651,2.355,652,1.902,653,1.125,654,1.78,655,1.125,656,1.339,657,3.011,658,1.339,659,1.042,660,2.118,661,1.339,662,2.727,663,1.339,664,1.339,665,2.324,666,2.623,667,0.969,668,0.793,669,1.339,670,3.158,671,2.727,672,2.727,673,2.628,674,2.628,675,1.339,676,2.532,677,3.345,678,3.254,679,1.339,680,2.926,681,1.222,682,1.339,683,1.339,684,1.339,685,1.339,686,2.118,687,1.339,688,2.118,689,2.51,690,2.987,691,2.987,692,2.987,693,1.78,694,1.125,695,1.933,696,1.933,697,1.339,698,1.042,699,3.084,700,0.904,701,2.727,702,3.431,703,1.125,704,1.222,705,1.339,706,1.339,707,1.125,708,1.339,709,2.324,710,1.125,711,2.987,712,1.339,713,1.339,714,1.339,715,1.339,716,1.339,717,2.987,718,1.78,719,2.208,720,1.125,721,1.339,722,1.339,723,2.118,724,1.339,725,1.339,726,1.533,727,1.78,728,1.125,729,2.118,730,2.118,731,2.118,732,2.118,733,1.339,734,1.339,735,1.222,736,1.339,737,2.118,738,2.118,739,2.118,740,1.339,741,1.125,742,2.727,743,1.339,744,2.399,745,1.339,746,2.693,747,2.399,748,1.222,749,1.339,750,1.339,751,1.255,752,2.628,753,1.339,754,1.339,755,1.78,756,3.431,757,1.125,758,2.399,759,2.971,760,1.339,761,1.933,762,1.125,763,2.118,764,1.125,765,2.118,766,2.118,767,1.339,768,1.339,769,1.339,770,1.339,771,1.222,772,3.254,773,1.339,774,2.118,775,2.118,776,2.118,777,1.339,778,2.118,779,1.339,780,1.339,781,1.339,782,1.222,783,1.339,784,1.339,785,1.339,786,1.557,787,1.222,788,1.339,789,1.339,790,2.187,791,1.339,792,2.118,793,1.933,794,2.727,795,1.933,796,1.533,797,1.222,798,2.324,799,2.118,800,2.118,801,2.118,802,2.118,803,2.118,804,1.339,805,2.118,806,1.222,807,2.118,808,1.339,809,1.339,810,1.042,811,1.222,812,2.399,813,1.222,814,2.727,815,1.042,816,2.208,817,1.222,818,1.222,819,1.339,820,1.933,821,1.222,822,1.222,823,2.118,824,2.118,825,1.933,826,2.51,827,2.118,828,1.339,829,1.222,830,2.118,831,1.339,832,1.339,833,2.118,834,1.339,835,1.339,836,1.339,837,1.339,838,2.118,839,1.339,840,1.339,841,1.222,842,1.339,843,1.339,844,1.222,845,1.222]],["title/interfaces/GraphNode.html",[149,0.583,676,1.84]],["body/interfaces/GraphNode.html",[3,0.239,4,0.239,9,0.103,11,0.279,12,1.189,17,1.125,29,0.856,30,0.85,43,0.024,45,0.648,46,1.434,51,1.109,53,0.503,54,0.777,59,1.724,61,2.129,62,1.743,63,1.436,65,0.922,68,1.517,71,0.266,74,0.495,77,1.216,85,1.228,93,1.228,94,1.317,149,0.946,152,0.006,153,0.01,154,0.013,171,0.641,195,1.927,200,0.903,206,1.014,209,1.269,218,1.436,226,1.302,231,2.456,261,1.49,270,1.7,288,1.538,289,1.597,292,0.823,303,0.88,311,1.538,317,1.742,318,1.014,327,2.008,328,1.742,331,1.742,354,1.682,364,0.534,380,1.228,382,2.196,394,2.356,411,1.014,412,2.512,417,1.538,421,2.896,422,2.341,429,1.4,436,0.772,438,1.084,441,2.336,445,1.613,460,2.955,468,1.189,469,2.356,478,1.868,480,1.613,485,1.631,495,2.896,497,3.058,506,2.008,514,1.189,515,1.743,519,1.902,531,1.095,579,1.786,606,2.776,611,1.742,615,1.613,650,1.095,651,2.324,652,1.868,653,1.095,654,1.742,655,1.095,656,1.303,657,2.984,658,1.303,659,1.014,660,2.073,661,1.303,662,2.685,663,1.303,664,1.303,665,2.289,666,2.596,667,0.943,668,0.772,669,1.303,670,3.303,671,2.685,672,2.685,673,2.581,674,2.581,675,2.073,676,2.661,677,3.354,678,3.835,679,2.073,680,2.955,681,2.685,682,2.942,683,2.942,684,2.942,685,2.942,686,3.42,687,2.942,688,1.303,689,2.169,690,2.073,691,2.073,692,1.303,693,1.095,694,1.095,695,1.892,696,1.892,697,1.303,698,1.014,699,3.058,700,0.88,701,2.685,702,3.398,703,1.095,704,1.189,705,1.303,706,1.303,707,1.095,708,1.303,709,2.289,710,1.095,711,2.942,712,1.303,713,1.303,714,1.303,715,1.303,716,1.303,717,2.942,718,1.742,719,2.169,720,1.095,721,1.303,722,1.303,723,2.073,724,1.303,725,1.303,726,1.5,727,1.742,728,1.095,729,2.073,730,2.073,731,2.073,732,2.073,733,1.303,734,1.303,735,1.189,736,1.303,737,2.073,738,2.073,739,2.073,740,1.303,741,1.095,742,2.685,743,1.303,744,2.356,745,1.303,746,2.661,747,2.356,748,1.189,749,1.303,750,1.303,751,1.228,752,2.581,753,1.303,754,1.303,755,1.742,756,3.398,757,1.095,758,2.356,759,2.931,760,1.303,761,1.892,762,1.095,763,2.073,764,1.095,765,2.073,766,2.073,767,1.303,768,1.303,769,1.303,770,1.303,771,1.189,772,3.211,773,1.303,774,2.073,775,2.073,776,2.073,777,1.303,778,2.073,779,1.303,780,1.303,781,1.303,782,1.189,783,1.303,784,1.303,785,1.303,786,1.529,787,1.189,788,1.303,789,1.303,790,2.161,791,1.303,792,2.073,793,1.892,794,2.685,795,1.892,796,1.5,797,1.189,798,2.289,799,2.073,800,2.073,801,2.073,802,2.073,803,2.073,804,1.303,805,2.073,806,1.189,807,2.073,808,1.303,809,1.303,810,1.014,811,1.189,812,2.356,813,1.189,814,2.685,815,1.014,816,2.169,817,1.189,818,1.189,819,1.303,820,1.892,821,1.189,822,1.189,823,2.073,824,2.073,825,1.892,826,2.472,827,2.073,828,1.303,829,1.189,830,2.073,831,1.303,832,1.303,833,2.073,834,1.303,835,1.303,836,1.303,837,1.303,838,2.073,839,1.303,840,1.303,841,1.189,842,1.303,843,1.303,844,1.189,845,1.189]],["title/modules/HomeModule.html",[155,1.163,1038,2.364]],["body/modules/HomeModule.html",[3,0.336,4,0.336,9,0.23,43,0.024,71,0.621,72,0.534,74,0.336,75,0.373,121,1.347,128,2.358,130,2.358,133,2.358,135,2.358,137,2.508,139,2.358,143,2.218,145,2.218,147,2.358,148,1.933,152,0.014,153,0.018,154,0.014,155,1.432,157,1.522,158,2.265,159,3.414,160,2.657,161,2.657,162,1.966,168,3.509,169,2.877,170,2.446,171,1.432,173,2.676,174,2.676,179,3.228,222,1.619,593,3.228,892,3.228,1038,4.925,1039,3.653,1040,3.653,1041,3.653,1042,4.116,1043,4.299,1044,4.1,1045,2.91,1046,3.653,1047,4.641,1048,5.461,1049,3.228,1050,4.299,1051,4.299,1052,4.299,1053,4.299,1054,4.299,1055,4.299,1056,4.299,1057,5.461,1058,2.91,1059,3.653,1060,4.299,1061,4.299,1062,4.299,1063,3.375,1064,4.299,1065,3.228,1066,4.299]],["title/modules/HomeRoutes.html",[155,1.163,1042,2.158]],["body/modules/HomeRoutes.html",[0,0.9,3,0.421,4,0.421,9,0.289,18,3.768,43,0.024,71,0.575,72,0.669,74,0.421,75,0.467,139,2.218,152,0.018,153,0.021,154,0.018,157,1.907,162,2.464,173,2.64,174,3.07,186,4.241,187,2.838,195,1.496,196,4.045,1042,3.871,1046,4.578,1067,5.387,1068,4.578]],["title/components/InitComponent.html",[0,0.583,141,1.163]],["body/components/InitComponent.html",[0,0.807,1,0.708,2,1.052,3,0.156,4,0.378,5,0.915,6,0.915,7,0.915,8,0.915,9,0.351,11,0.779,13,2.34,14,2.371,16,1.355,17,0.59,21,0.666,22,2.479,23,2.328,25,1.267,27,1.267,29,0.492,30,0.877,35,0.877,37,1.664,40,1.447,42,1.263,43,0.024,44,1.243,45,0.656,46,1.118,47,3.06,51,1.065,52,2.444,53,0.523,54,0.797,55,2.369,61,0.981,65,0.77,68,1.406,69,2.684,71,0.498,72,0.248,74,0.156,75,0.174,77,1.05,78,2.745,85,2.236,87,2.75,89,1.503,91,2.75,92,2.138,93,1.267,94,1.493,95,1.054,96,3.264,97,3.022,98,2.937,99,3.094,100,3.06,101,2.549,102,3.91,103,3.641,104,2.833,105,2.225,106,2.061,107,1.355,108,1.701,109,1.796,111,2.225,112,1.796,113,2.527,114,1.355,115,4.038,117,2.527,118,2.371,120,1.138,121,0.627,122,1.351,123,1.444,124,0.915,125,2.031,126,0.915,127,0.915,128,0.708,129,0.915,130,0.708,131,0.803,132,0.915,133,0.708,134,0.915,135,0.708,136,0.915,137,0.754,138,0.915,139,0.708,140,0.915,141,1.479,142,0.915,143,0.666,144,0.915,145,0.666,146,0.915,147,0.708,148,0.708,149,0.334,150,0.915,151,0.915,152,0.007,153,0.01,154,0.007,187,1.054,193,2.138,195,1.086,200,0.59,209,1.052,215,1.351,217,1.351,222,1.935,226,0.962,229,2.371,235,2.459,239,0.915,270,1.631,273,1.237,282,1.503,285,2.371,288,1.118,289,0.962,303,1.444,316,1.138,340,1.503,364,0.556,380,2.356,382,1.118,408,1.503,409,3.408,411,1.664,412,2.42,415,1.664,416,1.547,417,1.118,428,2.176,429,1.444,450,2.745,451,2.225,464,2.648,481,1.503,484,1.355,485,1.351,487,3.007,522,1.952,542,1.701,560,1.355,561,1.355,562,1.952,566,1.952,567,1.952,568,1.355,569,1.355,570,1.503,579,2.518,582,1.355,585,2.138,586,1.503,587,1.355,588,1.355,589,1.701,591,1.503,616,1.355,641,1.701,642,2.371,646,1.503,648,1.503,665,1.664,680,1.917,700,1.444,735,1.952,782,1.952,786,0.803,826,2.527,855,4.992,858,3.007,868,2.371,874,3.007,920,2.684,934,3.335,1069,1.701,1070,2.684,1071,3.158,1072,3.158,1073,6.389,1074,5.574,1075,3.912,1076,3.158,1077,3.912,1078,3.912,1079,3.912,1080,3.912,1081,5.252,1082,3.158,1083,3.158,1084,4.441,1085,4.441,1086,3.158,1087,3.158,1088,4.441,1089,4.441,1090,3.774,1091,5.874,1092,4.441,1093,3.158,1094,2.684,1095,4.366,1096,3.858,1097,4.441,1098,3.774,1099,3.158,1100,3.158,1101,3.158,1102,2.001,1103,2.371,1104,4.834,1105,3.912,1106,3.158,1107,2.001,1108,3.158,1109,1.796,1110,2.001,1111,2.001,1112,3.158,1113,4.571,1114,3.158,1115,2.001,1116,2.684,1117,3.158,1118,5.137,1119,5.874,1120,2.001,1121,3.158,1122,2.684,1123,4.441,1124,3.158,1125,3.158,1126,2.001,1127,5.574,1128,2.001,1129,2.001,1130,2.001,1131,4.441,1132,3.158,1133,4.184,1134,2.001,1135,3.158,1136,2.001,1137,3.158,1138,3.158,1139,3.912,1140,3.158,1141,2.001,1142,2.001,1143,2.001,1144,2.001,1145,1.701,1146,2.001,1147,2.001,1148,4.834,1149,3.158,1150,2.001,1151,3.158,1152,3.158,1153,3.158,1154,3.912,1155,2.937,1156,1.701,1157,2.001,1158,2.001,1159,3.158,1160,2.001,1161,2.001,1162,1.701,1163,2.001,1164,2.001,1165,1.701,1166,2.001,1167,2.001,1168,3.158,1169,2.001,1170,3.912,1171,2.001,1172,3.158,1173,2.001,1174,2.001,1175,2.001,1176,1.701,1177,2.371,1178,2.001,1179,2.001,1180,2.001,1181,2.001,1182,1.701,1183,2.001,1184,2.001,1185,2.001,1186,1.355,1187,2.001,1188,2.001,1189,2.001,1190,3.158,1191,4.992,1192,3.158,1193,3.158,1194,3.158,1195,3.774,1196,3.158,1197,3.158,1198,2.001,1199,3.158,1200,3.158,1201,3.158,1202,2.371,1203,3.774,1204,3.158,1205,2.371,1206,3.158,1207,3.158,1208,3.158,1209,2.001,1210,3.158,1211,3.324,1212,3.158,1213,1.701,1214,2.001,1215,2.001,1216,2.001,1217,2.001,1218,2.001,1219,2.001,1220,1.952,1221,2.001,1222,2.001,1223,2.001,1224,2.001,1225,3.158,1226,2.001,1227,2.684,1228,3.158,1229,1.701,1230,2.001,1231,2.001,1232,2.001,1233,2.001,1234,2.001,1235,2.001]],["title/modules/InitModule.html",[155,1.163,1236,2.364]],["body/modules/InitModule.html",[3,0.393,4,0.393,9,0.27,43,0.024,71,0.6,72,0.624,74,0.393,75,0.436,121,1.576,141,2.304,152,0.017,153,0.02,154,0.017,155,1.675,157,1.78,158,2.649,159,3.661,160,3.108,161,3.108,162,2.3,168,3.645,169,3.169,170,2.861,171,1.675,173,2.947,174,2.947,179,3.776,1044,4.517,1045,3.405,1047,5.112,1049,3.776,1236,4.83,1237,4.274,1238,4.274,1239,4.274,1240,4.276,1241,5.029,1242,4.274,1243,5.029]],["title/modules/InitRoutes.html",[155,1.163,1240,2.158]],["body/modules/InitRoutes.html",[0,0.9,3,0.421,4,0.421,9,0.289,18,3.768,43,0.024,71,0.575,72,0.669,74,0.421,75,0.467,141,2.086,152,0.018,153,0.021,154,0.018,157,1.907,162,2.464,173,2.64,174,3.07,186,4.241,187,2.838,195,1.496,196,4.045,1068,4.578,1240,3.871,1242,4.578,1244,5.387]],["title/injectables/JsonValidateService.html",[863,1.711,1090,2.364]],["body/injectables/JsonValidateService.html",[3,0.324,4,0.324,9,0.316,11,0.772,24,2.562,29,0.645,30,1.151,35,1.481,40,0.958,42,1.083,43,0.024,44,0.958,45,0.821,46,0.958,47,3.035,51,0.792,55,2.614,59,1.312,65,0.836,71,0.512,72,0.515,74,0.324,75,0.36,77,0.741,104,2.81,152,0.014,153,0.018,154,0.019,195,1.638,215,2.283,226,1.019,270,1.481,289,1.312,303,1.896,412,2.407,448,3.297,451,2.358,484,2.806,515,2.44,651,2.614,652,2.614,653,3.035,654,3.035,655,3.035,659,3.618,790,1.774,858,2.806,863,2.614,865,2.806,976,3.523,1081,4.534,1090,3.612,1095,5.293,1096,4.006,1122,4.534,1133,3.994,1155,3.113,1176,3.523,1177,4.43,1182,3.523,1245,2.806,1246,4.006,1247,3.113,1248,5.335,1249,5.335,1250,4.145,1251,5.293,1252,4.534,1253,3.523,1254,4.145,1255,4.145,1256,3.113,1257,5.703,1258,3.523,1259,3.523,1260,4.145,1261,4.145,1262,4.145,1263,4.145]],["title/injectables/LoadingService.html",[39,2.158,863,1.711]],["body/injectables/LoadingService.html",[2,1.685,3,0.299,4,0.299,9,0.205,11,0.874,16,4.088,24,2.363,29,0.595,30,1.405,31,5.338,32,5.338,33,5.338,35,1.405,39,3.128,40,1.564,42,1.483,43,0.024,44,1.311,45,0.649,46,1.311,47,2.879,48,4.301,51,1.084,52,2.589,53,1.687,54,1.478,59,1.395,61,2.959,62,2.315,63,2.274,64,3.801,65,0.762,71,0.439,72,0.475,74,0.299,75,0.332,77,1.014,78,4.283,152,0.013,153,0.017,154,0.013,215,2.428,226,1.587,235,2.951,270,1.405,366,3.801,380,2.03,415,2.666,666,3.162,667,1.874,863,2.48,865,2.589,1245,2.589,1264,3.25,1265,6.281,1266,6.281,1267,6.281,1268,5.061,1269,5.061,1270,5.061,1271,5.061,1272,3.824,1273,5.484,1274,5.061,1275,3.824,1276,5.061,1277,3.824,1278,5.061,1279,3.824,1280,5.484,1281,5.061,1282,3.824,1283,4.846,1284,6.454,1285,5.061,1286,5.061,1287,3.824,1288,5.061,1289,3.824,1290,5.061,1291,3.824,1292,4.821,1293,3.824,1294,3.824,1295,3.824,1296,3.824]],["title/modules/MaterialModule.html",[155,1.163,168,1.84]],["body/modules/MaterialModule.html",[3,0.36,4,0.36,9,0.247,43,0.023,71,0.636,72,0.572,74,0.36,75,0.4,118,3.461,152,0.015,153,0.019,154,0.015,157,2.292,159,2.622,162,2.108,168,3.005,173,2.259,174,2.795,195,1.28,461,3.917,616,3.862,622,3.917,1145,3.917,1297,3.461,1298,4.848,1299,4.61,1300,4.848,1301,4.61,1302,4.848,1303,4.61,1304,4.848,1305,4.61,1306,4.848,1307,5.705,1308,4.848,1309,4.61,1310,4.848,1311,4.61,1312,4.848,1313,4.61,1314,4.848,1315,4.848,1316,4.61,1317,4.848,1318,4.61,1319,4.848,1320,4.61,1321,4.848,1322,4.61,1323,5.705,1324,4.848,1325,4.61,1326,4.848,1327,4.61,1328,4.61,1329,4.848,1330,4.61,1331,4.848,1332,4.61,1333,4.848,1334,4.61,1335,4.848,1336,4.848,1337,5.705,1338,4.848,1339,4.848,1340,4.61,1341,4.848,1342,4.61,1343,4.848,1344,4.848,1345,4.61,1346,4.848,1347,4.61,1348,4.848,1349,4.61,1350,4.848,1351,4.61,1352,4.848,1353,4.61,1354,4.848,1355,4.61]],["title/pipes/PairSplitFirstPipe.html",[909,1.236,1356,1.711]],["body/pipes/PairSplitFirstPipe.html",[3,0.316,4,0.316,9,0.217,11,0.76,17,1.193,19,2.822,21,1.347,35,1.123,40,0.935,42,1.057,43,0.024,44,1.515,45,0.463,46,0.935,49,2.402,51,0.773,53,1.057,54,1.303,65,0.966,71,0.456,72,0.502,74,0.482,75,0.536,77,1.222,152,0.013,153,0.017,154,0.013,230,2.822,261,1.72,270,1.776,289,1.517,320,2.301,354,2.13,364,1.619,441,1.524,519,2.196,668,2.629,751,2.566,786,2.879,901,1.85,909,2.507,955,2.5,974,3.953,1020,2.301,1025,4.051,1029,3.953,1356,2.573,1357,3.246,1358,2.5,1359,4.178,1360,3.948,1361,4.178,1362,4.046,1363,3.948,1364,2.739,1365,1.982,1366,2.739,1367,2.739,1368,1.982,1369,2.739,1370,3.555,1371,3.555,1372,2.739,1373,2.739,1374,2.739,1375,2.739,1376,2.739,1377,2.739]],["title/pipes/PairSplitSecondPipe.html",[909,1.236,1365,1.711]],["body/pipes/PairSplitSecondPipe.html",[3,0.316,4,0.316,9,0.217,11,0.76,17,1.193,19,2.822,21,1.347,35,1.123,40,0.935,42,1.057,43,0.024,44,1.515,45,0.463,46,0.935,49,2.402,51,0.773,53,1.057,54,1.303,65,0.966,71,0.456,72,0.502,74,0.482,75,0.536,77,1.222,152,0.013,153,0.017,154,0.013,230,2.822,261,1.72,270,1.776,289,1.517,320,2.301,354,1.942,364,1.619,441,1.524,519,2.409,668,2.629,751,2.566,786,2.879,901,1.85,909,2.507,955,2.5,974,3.953,1020,2.301,1025,4.051,1029,3.953,1356,1.982,1357,3.246,1358,2.5,1359,4.178,1360,3.948,1361,4.178,1363,3.948,1364,2.739,1365,2.573,1366,2.739,1367,2.739,1368,1.982,1369,2.739,1370,3.555,1371,3.555,1372,2.739,1373,2.739,1374,2.739,1375,2.739,1376,2.739,1377,2.739,1378,4.046]],["title/pipes/PairUpPipe.html",[909,1.236,1368,1.711]],["body/pipes/PairUpPipe.html",[3,0.312,4,0.312,9,0.214,11,0.753,17,1.535,19,2.807,21,1.328,35,1.108,40,0.922,42,1.042,43,0.024,44,1.509,45,0.456,46,0.922,49,2.649,51,0.762,53,1.042,54,1.251,65,0.968,71,0.452,72,0.495,74,0.48,75,0.533,77,1.219,152,0.013,153,0.017,154,0.013,230,2.807,261,1.878,270,1.768,289,1.509,320,2.96,354,2.044,364,1.445,441,1.96,519,2.312,668,2.619,751,2.705,786,2.876,901,1.824,909,2.503,955,2.465,974,3.794,1020,2.269,1025,4.035,1029,3.935,1356,1.955,1357,3.216,1358,2.465,1359,3.921,1360,3.523,1361,3.921,1363,3.921,1364,2.7,1365,1.955,1366,2.7,1367,3.523,1368,2.55,1369,3.523,1370,4.156,1371,4.156,1372,3.523,1373,3.523,1374,2.7,1375,2.7,1376,2.7,1377,2.7,1379,3.989]],["title/modules/PipesModule.html",[155,1.163,1063,2.158]],["body/modules/PipesModule.html",[3,0.361,4,0.361,9,0.248,43,0.024,71,0.562,72,0.574,74,0.361,75,0.401,121,1.448,152,0.015,153,0.019,154,0.015,155,1.539,157,1.636,158,2.434,159,3.528,160,2.856,161,3.531,162,2.836,169,3.01,170,2.629,171,1.539,173,2.264,174,2.8,746,2.434,901,3.266,907,4.063,950,3.927,952,3.47,957,3.927,1044,4.29,1045,3.128,1063,4.478,1356,3.5,1365,3.5,1368,3.5,1380,3.927,1381,3.927,1382,3.927,1383,4.621]],["title/injectables/QueryService.html",[409,1.987,863,1.711]],["body/injectables/QueryService.html",[3,0.152,4,0.152,9,0.104,11,0.91,16,3.732,24,1.199,29,0.302,30,0.855,35,0.855,37,2.019,38,1.648,39,3.284,40,1.493,42,1.624,43,0.024,44,1.436,45,0.733,46,1.602,47,3.136,51,1.309,52,1.236,53,1.244,54,0.97,59,1.508,61,1.878,64,1.456,65,0.938,68,0.805,71,0.44,72,0.241,74,0.152,75,0.168,77,1.221,78,3.735,152,0.006,153,0.01,154,0.006,155,0.646,195,0.539,200,0.572,218,0.73,226,1.171,231,0.778,235,1.752,242,1.904,261,1.717,270,0.855,289,1.561,303,2.43,316,2.18,354,2.069,364,1.891,372,2.877,380,1.751,382,1.09,409,1.752,412,2.591,422,2.367,429,1.996,438,1.545,441,1.16,448,1.199,453,2.313,460,2.483,464,2.085,483,1.648,484,2.085,489,1.648,495,3.066,497,3.537,506,2.299,519,2.276,522,1.199,529,1.648,545,2.955,555,1.456,579,2.494,606,2.961,615,2.299,620,2.085,651,1.509,652,1.509,657,2.67,665,1.623,666,2.852,667,0.95,677,3.422,680,1.509,693,1.752,698,2.508,703,1.752,707,1.752,709,2.904,710,1.752,718,1.752,719,2.708,720,1.752,726,2.139,727,2.483,728,1.752,741,1.752,747,1.199,755,1.752,757,1.752,762,1.752,764,1.752,787,4.093,790,1.318,796,0.95,825,1.904,826,3.231,829,1.904,841,1.199,863,1.509,864,1.648,865,1.313,909,0.687,998,3.709,1070,2.618,1109,1.103,1116,1.648,1245,1.313,1273,2.618,1280,2.618,1283,3.575,1292,1.648,1384,1.648,1385,3.08,1386,3.08,1387,4.761,1388,3.832,1389,6.457,1390,3.832,1391,2.313,1392,2.313,1393,2.313,1394,2.313,1395,2.313,1396,2.313,1397,2.313,1398,3.08,1399,2.313,1400,2.313,1401,3.08,1402,2.313,1403,3.08,1404,3.08,1405,3.08,1406,3.08,1407,2.618,1408,1.939,1409,5.939,1410,6.686,1411,1.939,1412,3.08,1413,1.939,1414,1.939,1415,2.618,1416,1.939,1417,1.939,1418,1.939,1419,3.08,1420,1.939,1421,3.08,1422,2.618,1423,3.08,1424,2.618,1425,3.08,1426,1.939,1427,1.939,1428,3.08,1429,1.939,1430,1.939,1431,3.08,1432,1.939,1433,3.08,1434,3.08,1435,3.08,1436,3.08,1437,1.939,1438,3.08,1439,1.939,1440,1.939,1441,3.08,1442,3.08,1443,1.939,1444,1.939,1445,4.364,1446,1.939,1447,1.939,1448,1.939,1449,1.939,1450,1.939,1451,1.939,1452,1.939,1453,1.939,1454,3.08,1455,1.939,1456,5.939,1457,1.939,1458,1.939,1459,1.939,1460,1.939,1461,1.939,1462,1.939,1463,1.939,1464,1.939,1465,1.939,1466,3.832,1467,1.939,1468,1.939,1469,1.939,1470,1.939,1471,1.939,1472,1.939,1473,1.939,1474,1.939,1475,1.939,1476,1.939,1477,1.939,1478,1.939,1479,3.08,1480,1.939,1481,1.939,1482,1.939,1483,1.648,1484,1.939,1485,1.939]],["title/interfaces/SelectedDocument.html",[149,0.583,413,1.987]],["body/interfaces/SelectedDocument.html",[0,0.912,2,1.181,3,0.277,4,0.277,9,0.19,11,0.513,15,3.257,22,1.422,23,1.335,25,1.422,27,1.422,29,0.552,30,1.336,34,4.398,43,0.024,45,0.67,49,1.622,52,2.456,54,0.723,55,1.737,65,0.931,68,1.531,71,0.417,72,0.44,74,0.376,75,0.308,77,1.047,95,1.868,101,2.678,119,2.017,131,2.456,145,1.181,148,1.933,149,0.912,152,0.012,153,0.016,154,0.012,171,1.602,195,1.626,200,1.728,206,1.868,209,1.95,216,2.877,217,2.337,218,2.057,222,2.475,223,2.974,224,2.017,226,1.705,235,3.08,311,2.326,382,1.703,383,3.784,389,2.191,404,2.662,413,3.107,415,3.085,416,1.737,417,1.703,422,2.235,428,1.737,432,2.662,436,1.93,438,1.933,444,3.375,450,3.62,451,2.737,470,3.592,485,1.517,522,2.191,541,3.257,548,3.613,554,2.662,620,2.4,677,2.87,694,2.017,700,2.678,790,1.517,796,2.358,798,2.535,854,3.257,878,2.4,879,2.4,880,2.4,888,2.4,972,2.662,986,3.613,1058,2.4,1103,2.662,1109,2.017,1186,2.4,1202,2.662,1220,3.375,1486,2.662,1487,4.977,1488,3.013,1489,2.662,1490,4.977,1491,3.013,1492,3.013,1493,2.662,1494,3.013,1495,3.013,1496,3.013,1497,3.013,1498,3.013,1499,4.089,1500,3.013,1501,4.089,1502,4.089,1503,3.613,1504,3.013,1505,4.089,1506,3.013,1507,4.089,1508,2.662,1509,3.013,1510,3.013,1511,3.013,1512,3.013,1513,3.013,1514,3.013,1515,3.013,1516,3.013,1517,3.013,1518,3.013,1519,2.662,1520,3.013,1521,4.089,1522,4.641,1523,4.089,1524,4.089,1525,4.089,1526,3.013,1527,3.013,1528,4.089,1529,4.089,1530,3.013,1531,3.013]],["title/components/SettingsComponent.html",[0,0.583,143,1.163]],["body/components/SettingsComponent.html",[0,1.048,1,1.351,2,1.683,3,0.298,4,0.298,5,1.745,6,1.745,7,1.745,8,1.745,9,0.205,11,0.732,13,2.01,17,1.126,21,1.271,22,2.795,23,2.658,25,2.028,27,2.028,29,0.594,35,1.404,40,1.31,42,0.997,43,0.024,44,1.31,45,0.648,46,0.882,51,0.729,52,2.028,54,1.341,59,1.243,63,1.904,65,0.884,68,0.997,71,0.331,72,0.474,74,0.395,75,0.331,77,0.904,93,1.531,94,1.574,98,2.663,99,2.986,100,2.171,101,1.745,105,2.171,106,2.01,111,3.224,112,2.171,117,2.171,120,2.171,121,1.196,122,2.163,123,2.311,124,1.745,125,2.759,126,1.745,127,1.745,128,1.351,129,1.745,130,1.351,131,1.531,132,1.745,133,1.351,134,1.745,135,1.351,136,1.745,137,1.437,138,1.745,139,1.351,140,1.745,141,1.271,142,1.745,143,2.009,144,1.745,145,1.271,146,1.745,147,1.351,148,2.006,149,1.048,150,1.745,151,1.745,152,0.013,153,0.017,154,0.013,205,3.879,207,4.085,208,2.866,209,1.887,210,4.717,211,3.243,212,3.243,213,3.243,214,3.243,215,2.163,216,2.986,217,2.163,218,1.904,219,4.256,220,4.295,221,4.816,222,1.904,223,3.124,224,2.875,225,4.256,226,0.938,227,3.124,228,3.124,229,4.843,230,2.311,231,2.68,232,4.295,233,4.295,234,3.795,235,2.311,236,4.295,237,3.243,238,3.243,273,2.358,354,1.271,403,2.663,405,3.124,578,3.243,810,2.663,816,2.875,928,4.295,1162,4.295,1532,5.055,1533,3.816,1534,3.816,1535,3.816,1536,5.055,1537,5.055,1538,5.055,1539,5.055,1540,5.055,1541,3.816]],["title/components/SidenavComponent.html",[0,0.583,145,1.163]],["body/components/SidenavComponent.html",[0,0.896,1,0.891,2,1.669,3,0.197,4,0.197,5,2.291,6,1.151,7,1.151,8,1.151,9,0.135,11,0.777,13,1.326,15,3.392,17,0.742,21,0.838,22,2.606,23,2.47,25,1.511,27,1.511,29,0.392,30,1.046,34,1.89,35,1.046,40,1.502,42,1.31,43,0.024,44,1.302,45,0.715,46,1.158,49,1.151,51,1.025,52,2.507,53,1.402,54,1.19,55,1.846,65,0.824,68,1.402,71,0.327,72,0.312,74,0.294,75,0.218,77,0.896,85,2.259,87,1.432,94,0.699,95,1.326,96,2.851,97,2.966,98,2.378,99,2.64,100,1.432,101,2.064,105,1.432,106,1.984,107,1.704,109,1.432,112,1.432,113,2.568,117,2.568,119,2.143,120,1.432,121,0.789,122,1.612,123,1.723,124,1.151,125,2.291,126,1.151,127,1.151,128,0.891,129,1.151,130,0.891,131,2.578,132,1.151,133,0.891,134,1.151,135,0.891,136,1.151,137,0.948,138,1.151,139,0.891,140,1.151,141,0.838,142,1.151,143,0.838,144,1.151,145,1.669,146,1.151,147,0.891,148,2.066,149,0.754,150,1.151,151,1.151,152,0.008,153,0.012,154,0.008,171,1.254,195,1.391,200,1.661,209,1.944,216,2.826,217,1.931,218,1.7,222,2.509,223,3.097,224,2.143,226,1.667,235,3.066,273,1.555,311,2.3,382,1.774,383,3.862,389,2.79,403,1.984,404,3.389,405,2.328,413,2.568,415,3.162,416,1.846,417,1.774,422,2.212,428,1.846,432,2.828,436,1.811,438,1.774,444,3.48,450,3.709,451,2.851,470,3.609,485,1.612,522,1.555,541,2.55,548,2.828,554,1.89,560,2.55,561,1.704,562,2.79,563,2.55,565,2.828,566,2.328,567,2.328,620,2.55,634,2.139,677,1.233,681,1.555,694,1.432,700,2.064,726,1.233,790,1.077,796,1.846,798,1.984,854,3.392,878,3.056,879,3.056,880,3.056,888,1.704,972,2.828,986,2.828,1058,2.55,1103,2.828,1109,2.143,1186,2.55,1202,2.828,1220,3.48,1486,1.89,1487,2.139,1488,3.201,1489,2.828,1490,5.461,1491,3.201,1492,3.836,1493,3.389,1494,3.201,1495,3.836,1496,3.201,1497,3.201,1498,3.836,1499,4.258,1500,3.836,1501,4.258,1502,4.258,1503,3.763,1504,3.201,1505,4.785,1506,2.139,1507,3.201,1508,2.828,1509,3.201,1510,2.139,1511,3.201,1512,3.201,1513,2.139,1514,2.139,1515,2.139,1516,2.139,1517,2.139,1518,2.139,1519,1.89,1520,2.139,1521,3.201,1522,3.836,1523,3.201,1524,3.201,1525,3.201,1526,2.139,1527,2.139,1528,3.201,1529,3.201,1530,4.258,1531,3.201,1542,3.767,1543,3.767,1544,3.767,1545,3.767,1546,2.517,1547,2.517,1548,2.517,1549,2.517,1550,2.517,1551,2.517,1552,2.517,1553,2.517,1554,2.517,1555,2.517,1556,2.517,1557,2.517,1558,2.517,1559,3.201,1560,3.767,1561,2.517,1562,2.517,1563,2.517,1564,5.837,1565,3.201,1566,5.011,1567,3.767,1568,3.201,1569,2.517,1570,2.517,1571,3.767,1572,2.517,1573,3.767]],["title/pipes/SplitUpPipe.html",[901,1.597,909,1.236]],["body/pipes/SplitUpPipe.html",[3,0.316,4,0.316,9,0.217,11,0.76,17,1.192,19,2.821,21,1.346,35,1.122,40,0.934,42,1.056,43,0.024,44,1.515,45,0.462,46,0.934,49,2.665,51,0.772,53,1.056,54,1.303,65,0.964,71,0.455,72,0.502,74,0.482,75,0.535,77,1.222,152,0.013,153,0.017,154,0.013,230,2.665,261,1.82,270,1.775,289,1.517,320,2.299,354,1.941,364,1.457,441,1.522,519,2.195,668,2.628,751,2.676,786,2.879,901,2.4,909,2.506,955,2.497,974,4.049,1020,2.299,1025,4.049,1029,3.951,1356,1.98,1357,3.243,1358,2.497,1359,4.176,1360,3.553,1361,4.176,1363,3.946,1364,2.736,1365,1.98,1366,2.736,1367,2.736,1368,1.98,1369,2.736,1370,3.553,1371,3.553,1372,2.736,1373,2.736,1374,2.736,1375,3.553,1376,3.553,1377,2.736,1574,4.041]],["title/components/UserInterfaceComponent.html",[0,0.583,147,1.236]],["body/components/UserInterfaceComponent.html",[0,0.885,1,0.866,2,1.228,3,0.191,4,0.191,5,1.119,6,1.119,7,1.119,8,1.119,9,0.131,11,0.354,13,2.793,21,0.815,22,2.591,23,2.497,25,1.479,27,1.479,29,0.574,30,1.024,40,1.493,43,0.024,44,0.853,45,0.73,53,1.16,54,0.904,57,4.735,59,1.463,63,1.861,65,0.495,68,0.64,71,0.32,72,0.304,74,0.191,75,0.212,85,0.982,87,3.386,88,2.079,89,1.837,91,3.016,92,3.005,93,2.489,94,1.884,95,3.208,96,3.17,97,3.269,98,3.135,99,3.493,100,2.098,101,1.686,102,3.053,103,1.657,104,1.289,105,3.17,106,2.935,107,2.497,109,2.098,111,3.17,112,3.386,113,3.711,117,2.525,120,2.098,121,1.391,122,1.578,123,1.686,124,1.119,125,2.259,126,1.119,127,1.119,128,0.866,129,1.119,130,0.866,131,0.982,132,1.119,133,0.866,134,1.119,135,0.866,136,1.119,137,0.922,138,1.119,139,0.866,140,1.119,141,0.815,142,1.119,143,0.815,144,1.119,145,0.815,146,1.119,147,1.749,148,2.377,149,0.885,150,1.119,151,1.119,152,0.008,153,0.012,154,0.008,169,3.516,171,1.645,200,1.309,205,2.743,207,4.416,210,4.416,215,1.578,216,3.321,217,2.547,218,2.098,219,2.769,222,2.337,225,3.333,226,1.303,239,1.119,288,0.866,292,1.047,380,1.479,403,1.943,405,2.279,416,1.807,428,1.807,560,3.005,561,3.005,562,3.053,563,2.497,565,1.837,566,1.512,567,1.512,568,3.772,569,3.005,570,1.837,571,2.079,585,3.589,586,2.769,587,3.005,588,3.005,591,1.837,595,3.772,613,5.274,616,1.657,632,2.079,635,2.079,640,4.342,642,3.71,646,1.837,648,1.837,657,1.943,699,1.943,726,1.199,751,0.982,815,1.289,874,2.497,995,2.079,1019,3.772,1065,4.899,1098,3.134,1109,2.811,1220,2.279,1227,2.079,1483,3.134,1559,4.199,1568,2.079,1575,2.079,1576,4.438,1577,3.688,1578,5.301,1579,4.438,1580,4.438,1581,4.438,1582,4.438,1583,4.438,1584,4.438,1585,4.438,1586,4.438,1587,4.438,1588,4.438,1589,2.447,1590,4.941,1591,3.688,1592,2.447,1593,5.544,1594,3.688,1595,3.688,1596,2.447,1597,3.688,1598,3.688,1599,3.688,1600,3.772,1601,2.447,1602,3.688,1603,2.447,1604,3.688,1605,2.447,1606,2.447,1607,2.447,1608,5.572,1609,2.447,1610,3.688,1611,5.301,1612,2.447,1613,2.447,1614,2.447,1615,2.447,1616,4.438,1617,2.447,1618,3.688,1619,3.688,1620,3.688,1621,3.688,1622,3.688,1623,5.572,1624,2.447,1625,2.447,1626,3.688,1627,4.438,1628,4.438,1629,5.301,1630,4.438,1631,2.447,1632,2.447,1633,2.447,1634,2.447,1635,2.447,1636,2.447,1637,2.447,1638,2.447,1639,3.688,1640,2.447,1641,2.447,1642,4.438,1643,4.438,1644,2.447,1645,2.447,1646,2.447,1647,3.688,1648,4.941,1649,4.438,1650,3.688,1651,2.447,1652,3.688,1653,2.447,1654,3.688,1655,3.688,1656,2.079,1657,2.447,1658,2.447]],["title/coverage.html",[1659,4.047]],["body/coverage.html",[0,1.144,1,1.312,9,0.199,10,3.149,39,2.29,43,0.024,45,0.424,75,0.43,85,2.923,94,1.551,128,1.312,130,1.312,133,1.312,135,1.312,137,1.396,139,1.312,141,1.234,143,1.234,145,1.234,147,1.312,149,1.068,152,0.012,153,0.016,154,0.012,157,1.312,191,2.509,193,2.509,205,2.29,207,3.781,208,3.722,226,0.911,239,1.695,241,4.208,270,1.982,371,2.509,379,2.509,409,2.108,412,1.312,413,2.108,435,5.282,592,3.149,593,2.782,594,3.149,650,4.05,668,1.486,676,1.952,689,2.108,698,1.952,846,2.782,848,3.149,849,3.149,863,2.737,873,3.149,891,3.149,892,2.782,893,3.149,901,1.695,907,2.108,909,2.2,954,2.782,1021,3.149,1022,3.149,1065,2.782,1069,3.149,1090,2.509,1205,2.782,1246,3.722,1247,3.722,1256,2.782,1264,3.149,1297,2.782,1356,1.816,1357,3.685,1358,3.685,1365,1.816,1368,1.816,1384,3.149,1391,2.782,1392,2.782,1393,2.782,1394,2.782,1395,2.782,1396,2.782,1397,2.782,1399,2.782,1400,2.782,1402,2.782,1486,3.722,1575,3.149,1659,3.149,1660,3.705,1661,3.705,1662,3.705,1663,3.705,1664,3.705,1665,3.705,1666,3.705,1667,3.705,1668,3.705,1669,3.705,1670,3.705,1671,3.705,1672,3.705,1673,3.705,1674,3.705,1675,3.705,1676,3.705,1677,4.956,1678,4.956,1679,4.956,1680,4.956,1681,3.705,1682,3.705,1683,3.705,1684,5.585,1685,7.22,1686,3.705,1687,3.705,1688,3.705,1689,3.705,1690,3.705,1691,3.705,1692,3.705,1693,3.149,1694,3.149,1695,3.149,1696,3.705,1697,3.705,1698,3.705,1699,3.705,1700,3.705,1701,3.149,1702,3.149,1703,3.149,1704,3.149,1705,3.149,1706,3.149,1707,4.194,1708,3.149,1709,3.149,1710,4.212,1711,3.149,1712,3.705,1713,3.705]],["title/dependencies.html",[158,2.212,1714,2.919]],["body/dependencies.html",[43,0.024,65,0.687,72,0.635,152,0.017,153,0.02,154,0.017,158,2.693,176,5.162,177,4.561,184,4.344,185,3.839,187,2.693,222,1.925,667,2.505,671,3.754,952,3.839,953,4.344,1045,3.461,1049,3.839,1058,3.461,1059,4.344,1251,4.344,1489,3.839,1715,5.112,1716,7.073,1717,5.112,1718,6.074,1719,5.112,1720,5.112,1721,5.112,1722,5.112,1723,5.112,1724,5.112,1725,5.112,1726,5.112,1727,5.112,1728,5.112,1729,5.112,1730,5.112,1731,5.112,1732,5.112,1733,5.112,1734,5.112,1735,5.112,1736,5.112,1737,5.112,1738,5.112]],["title/miscellaneous/enumerations.html",[1739,1.43,1740,3.569]],["body/miscellaneous/enumerations.html",[29,0.869,43,0.021,45,0.638,152,0.018,153,0.021,154,0.018,222,2.102,379,3.779,388,5.434,446,4.744,465,4.744,485,2.389,486,4.192,487,3.779,1739,2.735,1740,4.744,1741,4.744]],["title/miscellaneous/functions.html",[244,2.843,1739,1.43]],["body/miscellaneous/functions.html",[11,1.011,17,1.256,29,0.463,42,1.824,43,0.024,44,1.613,45,0.657,46,1.613,51,1.368,54,1.254,59,1.66,65,0.729,68,1.608,152,0.01,153,0.014,154,0.01,215,1.273,224,1.693,227,1.839,228,1.839,231,1.708,241,2.015,242,1.839,244,2.015,261,1.762,270,1.381,277,2.015,286,2.235,287,3.197,288,1.507,289,1.047,291,2.235,292,2.128,293,3.197,294,3.197,295,2.235,297,3.197,298,2.235,301,2.015,311,1.507,354,2.095,364,0.826,380,1.708,382,1.053,412,2.547,417,1.053,422,2.406,429,1.947,436,1.194,438,1.76,441,2.37,448,2.632,460,2.814,480,1.568,495,3.026,497,3.423,506,2.243,519,2.317,579,2.477,606,3.138,615,2.243,650,1.693,651,1.458,652,1.458,657,2.62,659,1.568,662,2.632,665,1.568,666,2.66,670,2.422,676,1.568,677,3.449,680,3.223,693,1.693,695,1.839,696,1.839,699,2.62,701,1.839,702,4.065,703,1.693,707,1.693,709,2.859,710,1.693,718,1.693,719,2.422,720,1.693,726,2.087,727,2.422,728,1.693,741,1.693,755,2.829,756,3.354,757,1.693,758,1.839,759,2.632,761,1.839,762,2.422,764,1.693,771,1.839,790,2.128,793,2.632,794,3.354,795,2.632,796,2.087,797,1.839,806,1.839,810,1.568,811,1.839,812,3.073,813,1.839,814,3.073,815,1.568,816,2.422,817,1.839,818,1.839,820,2.632,821,1.839,822,1.839,844,1.839,845,1.839,932,2.529,954,3.197,1391,3.197,1392,3.197,1393,3.197,1394,3.197,1395,3.197,1396,3.197,1397,3.197,1399,3.197,1400,3.197,1402,3.197,1407,2.529,1415,2.529,1693,3.619,1694,3.619,1695,3.619,1701,3.619,1702,3.619,1703,3.619,1704,3.619,1705,3.619,1706,3.619,1707,2.235,1708,3.619,1739,1.458,1742,6.836,1743,3.619,1744,4.973,1745,2.976,1746,4.258,1747,2.976,1748,2.976,1749,2.976,1750,2.976,1751,2.976,1752,2.976,1753,2.976,1754,2.976,1755,2.976,1756,2.976,1757,2.976]],["title/index.html",[29,0.454,555,2.191,1758,2.919]],["body/index.html",[9,0.206,14,2.883,43,0.021,53,1.004,58,3.263,68,1.326,71,0.333,93,2.036,95,2.023,101,1.756,102,2.373,106,2.674,119,3.234,121,1.59,131,1.54,148,1.797,149,0.641,152,0.013,153,0.017,154,0.013,169,3.186,171,2.014,200,1.784,210,3.849,222,1.446,230,1.756,231,1.54,261,1.133,311,1.359,314,2.887,354,1.279,364,1.066,382,2.012,411,2.023,412,2.419,417,2.287,421,2.674,422,2.141,428,1.882,436,1.54,438,1.359,464,4.258,478,1.882,479,3.263,486,2.883,487,2.6,492,3.263,519,1.446,535,3.263,545,2.6,556,3.263,577,2.883,579,1.911,606,1.882,670,2.887,699,3.186,700,1.756,709,2.995,751,1.54,798,2.674,810,2.023,859,3.263,894,4.313,921,3.263,934,4.269,983,3.263,1004,3.263,1094,3.263,1109,2.184,1113,4.313,1133,3.436,1155,3.811,1156,3.263,1165,3.263,1186,3.849,1191,4.313,1195,3.263,1205,3.811,1211,4.313,1213,3.263,1220,3.513,1229,3.263,1283,2.883,1424,3.263,1493,2.883,1503,2.883,1508,3.811,1519,2.883,1565,3.263,1593,3.263,1600,3.263,1759,3.84,1760,3.84,1761,5.075,1762,3.84,1763,3.84,1764,3.84,1765,3.84,1766,6.289,1767,6.461,1768,3.84,1769,5.075,1770,5.075,1771,3.84,1772,5.075,1773,5.075,1774,3.84,1775,6.048,1776,3.84,1777,3.84,1778,6.048,1779,3.84,1780,3.84,1781,5.075,1782,3.84,1783,3.84,1784,3.84,1785,3.84,1786,3.84,1787,3.84,1788,5.685,1789,3.84,1790,5.685,1791,3.84,1792,3.84,1793,5.075,1794,5.075,1795,5.075,1796,3.84,1797,5.075,1798,3.84,1799,3.84,1800,5.075,1801,3.84,1802,3.84,1803,5.685,1804,5.075,1805,3.84,1806,3.84,1807,3.84,1808,3.84,1809,3.84,1810,3.84,1811,3.84,1812,5.685,1813,3.84,1814,3.84,1815,3.84,1816,5.075,1817,3.84,1818,3.84,1819,3.84,1820,3.84,1821,3.84,1822,3.84,1823,5.075,1824,6.769,1825,3.84,1826,3.84,1827,5.075,1828,3.84,1829,3.84,1830,3.84,1831,3.84,1832,3.84,1833,3.84,1834,3.84,1835,3.84,1836,5.075,1837,3.84,1838,3.84,1839,3.84,1840,3.84,1841,3.84,1842,5.075,1843,5.075,1844,3.84,1845,3.84,1846,3.84,1847,3.84,1848,3.84,1849,3.84,1850,3.84,1851,3.84,1852,3.84,1853,3.84,1854,3.84,1855,3.84,1856,3.84,1857,3.84,1858,3.84,1859,3.84,1860,3.84,1861,3.84,1862,3.84,1863,3.84,1864,3.84,1865,3.84,1866,3.84,1867,3.84,1868,3.84,1869,3.84]],["title/modules.html",[157,1.686]],["body/modules.html",[43,0.021,152,0.018,153,0.021,154,0.018,156,3.653,157,1.91,167,3.334,168,2.842,177,5.123,672,4.216,1038,3.653,1042,3.334,1063,3.334,1203,5.798,1236,3.653,1240,3.334,1870,6.823,1871,6.823,1872,7.137]],["title/overview.html",[1873,4.047]],["body/overview.html",[1,2.395,2,1.432,43,0.024,94,1.194,121,1.347,128,2.124,130,2.124,133,2.124,135,2.124,137,2.26,139,2.124,141,1.998,143,1.998,145,1.998,147,2.124,152,0.014,153,0.018,154,0.014,155,1.432,156,4.681,157,1.522,158,2.265,159,2.446,160,2.657,161,2.657,162,1.966,163,3.653,164,3.653,165,3.653,166,3.653,167,3.709,168,3.433,169,2.877,170,2.446,171,1.432,206,2.265,240,3.228,288,1.522,292,1.839,846,3.228,901,3.094,907,3.849,1020,2.446,1038,4.914,1039,3.653,1040,3.653,1041,3.653,1042,3.709,1063,4.431,1236,4.637,1237,3.653,1238,3.653,1239,3.653,1240,3.709,1245,2.91,1356,3.316,1365,3.316,1368,3.316,1380,3.653,1381,3.653,1382,3.653,1656,3.653,1873,3.653,1874,4.299,1875,4.299,1876,4.299,1877,4.299]],["title/routes.html",[18,2.709]],["body/routes.html",[18,3.239,43,0.021,152,0.019,153,0.021,154,0.019]],["title/miscellaneous/typealiases.html",[1739,1.43,1878,4.199]],["body/miscellaneous/typealiases.html",[29,0.868,43,0.021,45,0.731,152,0.018,153,0.021,154,0.018,200,1.644,261,1.644,379,3.774,382,1.973,470,3.634,478,2.731,485,2.385,488,4.737,1739,2.731,1741,4.737,1879,5.574]],["title/miscellaneous/variables.html",[631,2.843,1739,1.43]],["body/miscellaneous/variables.html",[9,0.227,23,1.591,29,0.658,30,1.173,43,0.024,45,0.825,53,1.733,54,1.321,55,2.647,59,1.328,65,0.89,94,1.173,104,2.845,152,0.014,153,0.018,154,0.02,157,1.912,515,2.47,631,2.861,651,2.647,652,2.647,653,3.073,654,3.073,655,3.073,659,3.66,668,2.167,746,2.226,786,1.695,854,2.861,858,3.656,868,3.173,1096,3.173,1133,2.861,1177,3.173,1246,3.173,1247,4.056,1252,3.591,1253,3.591,1256,4.056,1257,5.728,1258,3.591,1259,3.591,1297,3.173,1298,3.591,1300,3.591,1302,3.591,1304,3.591,1306,3.591,1308,3.591,1310,3.591,1312,3.591,1314,3.591,1315,3.591,1317,3.591,1319,3.591,1321,3.591,1324,3.591,1326,3.591,1329,3.591,1331,3.591,1333,3.591,1335,3.591,1336,3.591,1338,3.591,1339,3.591,1341,3.591,1343,3.591,1344,3.591,1346,3.591,1348,3.591,1350,3.591,1352,3.591,1354,3.591,1422,3.591,1707,3.173,1709,3.591,1710,5.331,1711,3.591,1739,2.071,1743,3.591,1880,4.226,1881,4.226,1882,4.226,1883,4.226,1884,5.401,1885,4.226,1886,4.226,1887,4.226,1888,4.226,1889,4.226]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0).tostring(16",{"_index":361,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.0",{"_index":717,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["0.0031308",{"_index":350,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.04045",{"_index":342,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.05",{"_index":1216,"title":{},"body":{"components/InitComponent.html":{}}}],["0.055",{"_index":344,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.1",{"_index":1628,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["0.11.3",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1633,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["0.25",{"_index":1224,"title":{},"body":{"components/InitComponent.html":{}}}],["0.25em",{"_index":632,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["0.4em",{"_index":647,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.5.5",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["0.5em",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["0.7",{"_index":643,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.95",{"_index":1645,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["0.9em",{"_index":645,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0/1",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["039",{"_index":1037,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["0px",{"_index":1014,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1",{"_index":288,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["1.0",{"_index":712,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["1.055",{"_index":345,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["1.4",{"_index":583,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["1.65",{"_index":1013,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1.65em",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1572,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1/4",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["10/10",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["100px",{"_index":581,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["10em",{"_index":1221,"title":{},"body":{"components/InitComponent.html":{}}}],["11",{"_index":1875,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["11.2.11",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["11.2.12",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["12.92",{"_index":347,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["120px",{"_index":635,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["128px",{"_index":1630,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["12em",{"_index":1234,"title":{},"body":{"components/InitComponent.html":{}}}],["12px",{"_index":591,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["14/14",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["140px",{"_index":1228,"title":{},"body":{"components/InitComponent.html":{}}}],["15px",{"_index":590,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["16",{"_index":323,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["170px",{"_index":1634,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["176",{"_index":1639,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["19/19",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["19/22",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["19px",{"_index":1631,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["1em",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["1fr",{"_index":1566,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1px",{"_index":571,"title":{},"body":{"components/ComparisonComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["2",{"_index":292,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["2.0.8",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["2.4",{"_index":346,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["2.5em",{"_index":1643,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["2/2",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":1813,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1231,"title":{},"body":{"components/InitComponent.html":{}}}],["25",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":339,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["2em",{"_index":586,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["2px",{"_index":640,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["3",{"_index":1656,"title":{},"body":{"components/UserInterfaceComponent.html":{},"overview.html":{}}}],["3/10",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["33/35",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["372px",{"_index":1657,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["393px",{"_index":1232,"title":{},"body":{"components/InitComponent.html":{}}}],["3em",{"_index":637,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4/4",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1563,"title":{},"body":{"components/SidenavComponent.html":{}}}],["40px",{"_index":1568,"title":{},"body":{"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["43/47",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1018,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["4em",{"_index":644,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4px",{"_index":589,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["5",{"_index":1876,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":563,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["5000",{"_index":1167,"title":{},"body":{"components/InitComponent.html":{}}}],["540px",{"_index":1653,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["55",{"_index":1019,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["57",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":1640,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["5px",{"_index":570,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["6",{"_index":1877,"title":{},"body":{"overview.html":{}}}],["6.6.7",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["66",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1627,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["7/7",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1648,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["8",{"_index":1874,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1629,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["91",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["96px",{"_index":1223,"title":{},"body":{"components/InitComponent.html":{}}}],["9a",{"_index":307,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["a.concat([...c",{"_index":1520,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["above",{"_index":1788,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":585,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["according",{"_index":340,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{}}}],["action",{"_index":1864,"title":{},"body":{"index.html":{}}}],["active",{"_index":491,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["actual",{"_index":531,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["actual_component",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["add",{"_index":327,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["add_circle_outline",{"_index":1621,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["adding",{"_index":329,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["additionalproperties",{"_index":1259,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["adjust",{"_index":1620,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["again",{"_index":961,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["ajv",{"_index":1251,"title":{},"body":{"injectables/JsonValidateService.html":{},"dependencies.html":{}}}],["ajv.compile(searchqueryschema",{"_index":1262,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["aliases",{"_index":1879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["allow",{"_index":1194,"title":{},"body":{"components/InitComponent.html":{}}}],["allwords",{"_index":984,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["already",{"_index":748,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["amp",{"_index":1031,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["and/or",{"_index":1834,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1058,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1045,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1049,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1316,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1330,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":622,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1355,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1318,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":1340,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1334,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1320,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1327,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1345,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":1337,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1347,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1349,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":1322,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1351,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":1145,"title":{},"body":{"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1311,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":1332,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1353,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1342,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"guards/CorpusLoadedGuard.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"dependencies.html":{}}}],["angularresizedeventmodule",{"_index":1057,"title":{},"body":{"modules/HomeModule.html":{}}}],["any).default",{"_index":1189,"title":{},"body":{"components/InitComponent.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appears",{"_index":1784,"title":{},"body":{"index.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["appmodule",{"_index":156,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":923,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["approuter",{"_index":167,"title":{"modules/AppRouter.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":205,"title":{"interfaces/AppSettings.html":{}},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["aren't",{"_index":781,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["arising",{"_index":1867,"title":{},"body":{"index.html":{}}}],["around",{"_index":1772,"title":{},"body":{"index.html":{}}}],["array",{"_index":515,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["array.from(wordmap.keys",{"_index":1515,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["array.from(wordmap.values",{"_index":1517,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["arrays",{"_index":694,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["arrow",{"_index":1776,"title":{},"body":{"index.html":{}}}],["arrow_backback",{"_index":1210,"title":{},"body":{"components/InitComponent.html":{}}}],["asking",{"_index":1072,"title":{},"body":{"components/InitComponent.html":{}}}],["assets/example.json",{"_index":1147,"title":{},"body":{"components/InitComponent.html":{}}}],["associated",{"_index":479,"title":{},"body":{"components/ComparisonComponent.html":{},"index.html":{}}}],["attached",{"_index":1201,"title":{},"body":{"components/InitComponent.html":{}}}],["attr(data",{"_index":1009,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["authors",{"_index":1858,"title":{},"body":{"index.html":{}}}],["auto",{"_index":565,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["available",{"_index":1203,"title":{},"body":{"components/InitComponent.html":{},"modules.html":{}}}],["away",{"_index":824,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["b",{"_index":255,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["back",{"_index":282,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{}}}],["background",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["bag",{"_index":662,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["bar",{"_index":616,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{},"components/UserInterfaceComponent.html":{}}}],["base",{"_index":291,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":331,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["becomes",{"_index":490,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["before",{"_index":995,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["behaviorsubject",{"_index":1292,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["behaviorsubject(0",{"_index":1288,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(false",{"_index":1281,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(undefined",{"_index":1436,"title":{},"body":{"injectables/QueryService.html":{}}}],["being",{"_index":234,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["belongs",{"_index":679,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["beta.33",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["binding",{"_index":656,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["black",{"_index":1651,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["block",{"_index":648,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":568,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["both",{"_index":933,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["bottom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["bound",{"_index":611,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["bowentries1",{"_index":758,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["bowentries2",{"_index":759,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":587,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["browse",{"_index":1872,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":1220,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["buttons",{"_index":1219,"title":{},"body":{"components/InitComponent.html":{}}}],["c",{"_index":1519,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["c1",{"_index":355,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["c1.mix(c2",{"_index":359,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["c2",{"_index":357,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["calc",{"_index":1646,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calc(100vh",{"_index":1233,"title":{},"body":{"components/InitComponent.html":{}}}],["calc(1em",{"_index":1647,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calc(2em",{"_index":1635,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calc(50",{"_index":646,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["calc(8px",{"_index":1642,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calculate",{"_index":777,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["calculatecosinedistance",{"_index":1701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatecosinedistance(weight",{"_index":818,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["calculated",{"_index":1782,"title":{},"body":{"index.html":{}}}],["calculates",{"_index":615,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["calculating",{"_index":844,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["calculation",{"_index":811,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1123,"title":{},"body":{"components/InitComponent.html":{}}}],["camera",{"_index":1593,"title":{},"body":{"components/UserInterfaceComponent.html":{},"index.html":{}}}],["canactivate",{"_index":190,"title":{},"body":{"modules/AppRouter.html":{},"guards/CorpusLoadedGuard.html":{}}}],["card",{"_index":1573,"title":{},"body":{"components/SidenavComponent.html":{}}}],["catch",{"_index":1182,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["catch(err",{"_index":1152,"title":{},"body":{"components/InitComponent.html":{}}}],["center",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["centercamera",{"_index":1585,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["change",{"_index":1109,"title":{},"body":{"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["changecamerazoom",{"_index":1586,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["changed",{"_index":224,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["changedetection",{"_index":895,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy",{"_index":948,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":896,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changes",{"_index":227,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["changes.selecteddocuments",{"_index":503,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changes.selecteddocuments.currentvalue.length",{"_index":504,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changesetting",{"_index":1532,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changesetting(setting",{"_index":236,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["changesvalue",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["changing",{"_index":1807,"title":{},"body":{"index.html":{}}}],["character",{"_index":365,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["characters",{"_index":989,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{}}}],["charge",{"_index":1820,"title":{},"body":{"index.html":{}}}],["check",{"_index":1753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkbox",{"_index":577,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"index.html":{}}}],["checked",{"_index":453,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{}}}],["checking",{"_index":1433,"title":{},"body":{"injectables/QueryService.html":{}}}],["checkmark",{"_index":621,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["checkoverflow",{"_index":395,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checkoverflow(element",{"_index":424,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checks",{"_index":427,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child",{"_index":928,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["child(even",{"_index":575,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child(odd",{"_index":573,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["children",{"_index":964,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["circle",{"_index":1225,"title":{},"body":{"components/InitComponent.html":{}}}],["claim",{"_index":1861,"title":{},"body":{"index.html":{}}}],["class",{"_index":75,"title":{"classes/Color.html":{},"classes/DefaultColors.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["classes",{"_index":240,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"overview.html":{}}}],["clearhighlightedwords",{"_index":1530,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clears",{"_index":432,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clearwordselection",{"_index":396,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["click",{"_index":1766,"title":{},"body":{"index.html":{}}}],["clickedcompare",{"_index":1542,"title":{},"body":{"components/SidenavComponent.html":{}}}],["clickedcompare(e",{"_index":1509,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicking",{"_index":1508,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["clicks",{"_index":1499,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["close",{"_index":1559,"title":{},"body":{"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["closed",{"_index":1502,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closes",{"_index":1497,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closesidenav",{"_index":1543,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closesidenav(e",{"_index":1504,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closest",{"_index":1602,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["clumping",{"_index":816,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["clumpingmodifier",{"_index":211,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1039,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1040,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":1041,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_initmodule",{"_index":1237,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_declarations",{"_index":1238,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_imports",{"_index":1239,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1380,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1381,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1382,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":285,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{}}}],["color",{"_index":239,"title":{"classes/Color.html":{}},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["color(r",{"_index":326,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["color.fromhex('#37b03b",{"_index":374,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["color.fromhex('#4537b0",{"_index":378,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["color.fromhex('#b03737",{"_index":376,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["colors",{"_index":262,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["colorsrgbgradient",{"_index":245,"title":{},"body":{"classes/Color.html":{}}}],["colorsrgbgradient(other",{"_index":258,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["colour",{"_index":1779,"title":{},"body":{"index.html":{}}}],["coloured",{"_index":1803,"title":{},"body":{"index.html":{}}}],["column",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["columns",{"_index":1565,"title":{},"body":{"components/SidenavComponent.html":{},"index.html":{}}}],["common",{"_index":1197,"title":{},"body":{"components/InitComponent.html":{}}}],["commonmodule",{"_index":1044,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{}}}],["compare",{"_index":709,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["compareclick",{"_index":1500,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["compared",{"_index":607,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["comparekeyboard_arrow_right",{"_index":1560,"title":{},"body":{"components/SidenavComponent.html":{}}}],["comparing",{"_index":1493,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["comparingwindowopen",{"_index":1495,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparison",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["comparison'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["comparison.component.html",{"_index":386,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison.component.scss",{"_index":385,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison/comparison.component",{"_index":888,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparisoncomponent",{"_index":128,"title":{"components/ComparisonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["comparisonentrycomponent",{"_index":130,"title":{"components/ComparisonEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"overview.html":{}}}],["compression",{"_index":279,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["concatenated",{"_index":1513,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["concatenatedsoft",{"_index":1516,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["concatenatedsoft.includes(word",{"_index":1523,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["conditions",{"_index":1841,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1868,"title":{},"body":{"index.html":{}}}],["consisting",{"_index":661,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["const",{"_index":195,"title":{},"body":{"modules/AppRouter.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"modules/MaterialModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(escapehtml",{"_index":906,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["constructor(loadingservice",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(private",{"_index":489,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(protected",{"_index":300,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["constructor(queryservice",{"_index":408,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{}}}],["constructor(r",{"_index":253,"title":{},"body":{"classes/Color.html":{}}}],["contained",{"_index":1488,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["container",{"_index":1562,"title":{},"body":{"components/SidenavComponent.html":{}}}],["containing",{"_index":209,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["contains",{"_index":972,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["content'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["content.component",{"_index":1062,"title":{},"body":{"modules/HomeModule.html":{}}}],["content.component.html",{"_index":898,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.scss",{"_index":897,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts",{"_index":893,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:117",{"_index":919,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:146",{"_index":931,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:22",{"_index":913,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:26",{"_index":915,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:30",{"_index":916,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:34",{"_index":917,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:38",{"_index":918,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:42",{"_index":914,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:47",{"_index":908,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:54",{"_index":946,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:55",{"_index":947,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:58",{"_index":945,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:62",{"_index":944,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:72",{"_index":924,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:98",{"_index":937,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content/document",{"_index":892,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["contents",{"_index":1794,"title":{},"body":{"index.html":{}}}],["continue",{"_index":783,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["contract",{"_index":1865,"title":{},"body":{"index.html":{}}}],["contributed",{"_index":734,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["control",{"_index":1626,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["controls",{"_index":1623,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["conversionre",{"_index":305,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["convert",{"_index":317,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["convertedcontent",{"_index":899,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converting",{"_index":910,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converts",{"_index":271,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["copies",{"_index":1836,"title":{},"body":{"index.html":{}}}],["copy",{"_index":1823,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":1812,"title":{},"body":{"index.html":{}}}],["corpus",{"_index":412,"title":{"interfaces/Corpus.html":{}},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["corpus.dictionary[id",{"_index":708,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.dictionary[key",{"_index":706,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities?.[id1]?.[id2",{"_index":716,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpusloadedguard",{"_index":191,"title":{"guards/CorpusLoadedGuard.html":{}},"body":{"modules/AppRouter.html":{},"guards/CorpusLoadedGuard.html":{},"coverage.html":{}}}],["corpussource",{"_index":1387,"title":{},"body":{"injectables/QueryService.html":{}}}],["corresponding",{"_index":232,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cosine",{"_index":606,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["counts",{"_index":1763,"title":{},"body":{"index.html":{}}}],["cover",{"_index":1215,"title":{},"body":{"components/InitComponent.html":{}}}],["coverage",{"_index":1659,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":790,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["createlinks",{"_index":1702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createlinks(nodes",{"_index":845,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["createnodes",{"_index":1703,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createnodes(corpus",{"_index":822,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":820,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["ctrl",{"_index":1791,"title":{},"body":{"index.html":{}}}],["cumulatively",{"_index":733,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["current",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["currentcorpus",{"_index":1388,"title":{},"body":{"injectables/QueryService.html":{}}}],["currentdocumentsofts",{"_index":981,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["currently",{"_index":415,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["currentzoom",{"_index":1579,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["d",{"_index":838,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["d3",{"_index":671,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"dependencies.html":{}}}],["damages",{"_index":1862,"title":{},"body":{"index.html":{}}}],["data",{"_index":826,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["data.data",{"_index":1479,"title":{},"body":{"injectables/QueryService.html":{}}}],["data.worker",{"_index":1449,"title":{},"body":{"injectables/QueryService.html":{}}}],["deal",{"_index":1825,"title":{},"body":{"index.html":{}}}],["dealings",{"_index":1869,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decorators",{"_index":1136,"title":{},"body":{"components/InitComponent.html":{}}}],["decreasecamera",{"_index":1587,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["deep",{"_index":567,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultcolors",{"_index":371,"title":{"classes/DefaultColors.html":{}},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"coverage.html":{}}}],["defaulting",{"_index":1435,"title":{},"body":{"injectables/QueryService.html":{}}}],["defaults",{"_index":787,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["defaultstepzoom",{"_index":1580,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["delete",{"_index":546,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["deny",{"_index":315,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["dependencies",{"_index":158,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1780,"title":{},"body":{"index.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["description&nbsp;use",{"_index":1209,"title":{},"body":{"components/InitComponent.html":{}}}],["deselected",{"_index":539,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["deselects",{"_index":502,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["desire",{"_index":1789,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1801,"title":{},"body":{"index.html":{}}}],["determines",{"_index":932,"title":{},"body":{"components/DocumentContentComponent.html":{},"miscellaneous/functions.html":{}}}],["deviance",{"_index":1599,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["deviation",{"_index":1781,"title":{},"body":{"index.html":{}}}],["deviationclose",{"_index":375,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["deviationcorrect",{"_index":373,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["deviationfar",{"_index":377,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["deviations",{"_index":1538,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionary",{"_index":651,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["didn't",{"_index":313,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["direction",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["directive",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["directives",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["display",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["displayed",{"_index":700,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["displayerror",{"_index":1082,"title":{},"body":{"components/InitComponent.html":{}}}],["displayerror(msg",{"_index":1101,"title":{},"body":{"components/InitComponent.html":{}}}],["displaying",{"_index":1103,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["displays",{"_index":1785,"title":{},"body":{"index.html":{}}}],["distance",{"_index":810,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["distancemodifier",{"_index":212,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["distribute",{"_index":1832,"title":{},"body":{"index.html":{}}}],["doc",{"_index":839,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["docs",{"_index":830,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["document",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["document's",{"_index":664,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["document'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["document.component.html",{"_index":876,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.component.scss",{"_index":875,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.subtitle",{"_index":890,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.title",{"_index":889,"title":{},"body":{"components/DocumentComponent.html":{}}}],["documentation",{"_index":1205,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{},"index.html":{}}}],["documentcomponent",{"_index":133,"title":{"components/DocumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentcontentcomponent",{"_index":135,"title":{"components/DocumentContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentindex",{"_index":877,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{}}}],["documents",{"_index":417,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["documents/texts",{"_index":1196,"title":{},"body":{"components/InitComponent.html":{}}}],["documentsimilarities",{"_index":387,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["documentsimilarity",{"_index":601,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["done",{"_index":747,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["down",{"_index":535,"title":{},"body":{"components/ComparisonComponent.html":{},"index.html":{}}}],["drag",{"_index":1771,"title":{},"body":{"index.html":{}}}],["draw",{"_index":1537,"title":{},"body":{"components/SettingsComponent.html":{}}}],["drawer",{"_index":1561,"title":{},"body":{"components/SidenavComponent.html":{}}}],["duration",{"_index":1166,"title":{},"body":{"components/InitComponent.html":{}}}],["dynamic",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":451,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["e.checked",{"_index":627,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["e?.target?.files",{"_index":1157,"title":{},"body":{"components/InitComponent.html":{}}}],["each",{"_index":328,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["eeeeee",{"_index":576,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["element",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["element.offsetheight",{"_index":537,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["elements",{"_index":821,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["ellipsis",{"_index":580,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["emit",{"_index":842,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["emits",{"_index":223,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["emitter",{"_index":419,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["emitting",{"_index":613,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["end",{"_index":1625,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["enter",{"_index":487,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["entire",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{}}}],["entries",{"_index":742,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries.length",{"_index":834,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries1",{"_index":729,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries2",{"_index":731,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entry",{"_index":445,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entry'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["entry.component",{"_index":1055,"title":{},"body":{"modules/HomeModule.html":{}}}],["entry.component.html",{"_index":598,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.scss",{"_index":597,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts",{"_index":594,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:17",{"_index":610,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":609,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":604,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":608,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":612,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":614,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:47",{"_index":619,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.delete(matchword",{"_index":544,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entry/comparison",{"_index":593,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["entry?.size",{"_index":543,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entryhoverevent",{"_index":388,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entryhoverevent.enter",{"_index":557,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["enum",{"_index":465,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1740,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1098,"title":{},"body":{"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["errorindicatoroffset",{"_index":1581,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["escape",{"_index":952,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["escapedword",{"_index":993,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["escapehtml",{"_index":900,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{}}}],["escapehtmlpipe",{"_index":907,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["escapes",{"_index":1023,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["escapestringregexp",{"_index":951,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["evaluated",{"_index":943,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["event",{"_index":222,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["eventemitter",{"_index":216,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["eventually",{"_index":825,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["exact",{"_index":436,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["exactly",{"_index":492,"title":{},"body":{"components/ComparisonComponent.html":{},"index.html":{}}}],["exactmatches",{"_index":800,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactmatches[ids[0",{"_index":804,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactpairs",{"_index":512,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["exactpairs[key",{"_index":517,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["example",{"_index":1113,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["exampledocument",{"_index":1146,"title":{},"body":{"components/InitComponent.html":{}}}],["exists",{"_index":1434,"title":{},"body":{"injectables/QueryService.html":{}}}],["explained",{"_index":1764,"title":{},"body":{"index.html":{}}}],["explore",{"_index":1195,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["exploring",{"_index":1796,"title":{},"body":{"index.html":{}}}],["exponent",{"_index":817,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["express",{"_index":1849,"title":{},"body":{"index.html":{}}}],["extendedmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["extract",{"_index":509,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["f]{1,2",{"_index":310,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["f]{1,2})([0",{"_index":309,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["fa",{"_index":308,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["fade",{"_index":584,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fafafa",{"_index":574,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["false",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":1618,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["fff",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["field",{"_index":461,"title":{},"body":{"components/ComparisonComponent.html":{},"modules/MaterialModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file/text",{"_index":1097,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadinsert",{"_index":1207,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadupload",{"_index":1212,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader",{"_index":1172,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.onloadend",{"_index":1174,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.readasbinarystring(this.jsonfile",{"_index":1173,"title":{},"body":{"components/InitComponent.html":{}}}],["files",{"_index":1156,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["files?.length",{"_index":1158,"title":{},"body":{"components/InitComponent.html":{}}}],["files[0",{"_index":1160,"title":{},"body":{"components/InitComponent.html":{}}}],["filter",{"_index":796,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["filter(data",{"_index":1478,"title":{},"body":{"injectables/QueryService.html":{}}}],["filter(word",{"_index":1522,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["filters",{"_index":793,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":1477,"title":{},"body":{"injectables/QueryService.html":{}}}],["finally",{"_index":1480,"title":{},"body":{"injectables/QueryService.html":{}}}],["find",{"_index":935,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["firing",{"_index":1469,"title":{},"body":{"injectables/QueryService.html":{}}}],["first",{"_index":354,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["first[1",{"_index":521,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fitness",{"_index":1854,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["flag",{"_index":1131,"title":{},"body":{"components/InitComponent.html":{}}}],["flex",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["flexmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["following",{"_index":1840,"title":{},"body":{"index.html":{}}}],["font",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["force",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":1230,"title":{},"body":{"components/InitComponent.html":{}}}],["format",{"_index":960,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["formsmodule",{"_index":1047,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["formula",{"_index":812,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":715,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["free",{"_index":1819,"title":{},"body":{"index.html":{}}}],["fromhex",{"_index":247,"title":{},"body":{"classes/Color.html":{}}}],["fromhex(hexcode",{"_index":266,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["function",{"_index":270,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":244,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1839,"title":{},"body":{"index.html":{}}}],["further",{"_index":1800,"title":{},"body":{"index.html":{}}}],["furthest",{"_index":1604,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["fx",{"_index":685,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["fy",{"_index":687,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["g",{"_index":254,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["g)}${(b.length",{"_index":369,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["gap",{"_index":1570,"title":{},"body":{"components/SidenavComponent.html":{}}}],["generate",{"_index":1423,"title":{},"body":{"injectables/QueryService.html":{}}}],["generated",{"_index":1280,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["generateexactpairs",{"_index":397,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generates",{"_index":440,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatesoftpairs",{"_index":398,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatewordpairs",{"_index":399,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generating",{"_index":1441,"title":{},"body":{"injectables/QueryService.html":{}}}],["get($color",{"_index":638,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["getbarwidth",{"_index":599,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["getdocumenttext",{"_index":1391,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdocumenttext(id",{"_index":1407,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getformattedcontent",{"_index":902,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getmostimportantexactmatches",{"_index":1704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmostimportantexactmatches(wordimportancepairs",{"_index":797,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["getmostimportantsoftmatches",{"_index":1705,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmostimportantsoftmatches(wordimportancepairs",{"_index":806,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["getnodedocumentid",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnodedocumentid(nodeid",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getnormalizedwordimportancepairs",{"_index":1392,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnormalizedwordimportancepairs(id1",{"_index":757,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getreversedwordmap",{"_index":903,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["gets",{"_index":925,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getsimilarity",{"_index":1393,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsimilarity(id1",{"_index":710,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getsimilarity(w1",{"_index":725,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(w1id",{"_index":740,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(wid1",{"_index":779,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarityword",{"_index":1394,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsimilarityword(word1",{"_index":720,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getsoftcosinemeasure",{"_index":1395,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsoftcosinemeasure(id1",{"_index":1415,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":1758,"title":{"index.html":{}},"body":{}}],["getword",{"_index":1396,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getword(id",{"_index":707,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getword(wid1",{"_index":784,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(wid2",{"_index":785,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(word",{"_index":749,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid",{"_index":1397,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwordid(word",{"_index":703,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getwordid(word1",{"_index":722,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid(word2",{"_index":724,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordimportancepairs",{"_index":1706,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwordimportancepairs(bowentries1",{"_index":761,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["getwordtype",{"_index":904,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getwordtype(word",{"_index":929,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["github",{"_index":1204,"title":{},"body":{"components/InitComponent.html":{}}}],["give",{"_index":1473,"title":{},"body":{"injectables/QueryService.html":{}}}],["given",{"_index":429,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":1410,"title":{},"body":{"injectables/QueryService.html":{}}}],["go",{"_index":744,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["gradient",{"_index":259,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["gradient(165deg",{"_index":1017,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["gradient(to",{"_index":1636,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["gradient).srgbcompounding",{"_index":360,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["granted",{"_index":1818,"title":{},"body":{"index.html":{}}}],["graph",{"_index":672,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["graph/graph.component",{"_index":1051,"title":{},"body":{"modules/HomeModule.html":{}}}],["graphcomponent",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graphdata",{"_index":698,"title":{"interfaces/GraphData.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["graphlink",{"_index":689,"title":{"interfaces/GraphLink.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["graphlinks",{"_index":696,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["graphnode",{"_index":676,"title":{"interfaces/GraphNode.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["graphnodes",{"_index":695,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["grid",{"_index":1564,"title":{},"body":{"components/SidenavComponent.html":{}}}],["group",{"_index":678,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["grow",{"_index":636,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["gt",{"_index":1033,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["guard",{"_index":846,"title":{"guards/CorpusLoadedGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":194,"title":{},"body":{"modules/AppRouter.html":{}}}],["guard.service.ts",{"_index":849,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":856,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["guard.service.ts:26",{"_index":861,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["guards",{"_index":847,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["guards/corpus",{"_index":192,"title":{},"body":{"modules/AppRouter.html":{}}}],["h1",{"_index":1218,"title":{},"body":{"components/InitComponent.html":{}}}],["h2",{"_index":564,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["hammerjs",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":1200,"title":{},"body":{"components/InitComponent.html":{}}}],["handlechange",{"_index":600,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handlechange(e",{"_index":617,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handleentryhover",{"_index":400,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handleentryhover(word",{"_index":442,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlefileupload",{"_index":1083,"title":{},"body":{"components/InitComponent.html":{}}}],["handlefileupload(e",{"_index":1106,"title":{},"body":{"components/InitComponent.html":{}}}],["handler",{"_index":450,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handles",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handletextupload",{"_index":1084,"title":{},"body":{"components/InitComponent.html":{}}}],["handlewordhovered",{"_index":1544,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordhovered(word",{"_index":1531,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordschanged",{"_index":1545,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordschanged(wordmap",{"_index":1512,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordselection",{"_index":401,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlewordselection(e",{"_index":447,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handling",{"_index":620,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["happen",{"_index":1376,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["happening",{"_index":852,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["hard",{"_index":559,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["height",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["helper",{"_index":242,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"classes/DefaultColors.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":1206,"title":{},"body":{"components/InitComponent.html":{}}}],["hereby",{"_index":1817,"title":{},"body":{"index.html":{}}}],["hex",{"_index":284,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["hexadecimal",{"_index":319,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["hexcode",{"_index":268,"title":{},"body":{"classes/Color.html":{}}}],["hexcode.match(conversionre",{"_index":312,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["hidden",{"_index":561,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["hierarchical",{"_index":472,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["highlight",{"_index":1004,"title":{},"body":{"components/DocumentContentComponent.html":{},"index.html":{}}}],["highlight.both",{"_index":1016,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.soft",{"_index":1015,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlighted",{"_index":383,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedexactmatches",{"_index":878,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedsoftmatches",{"_index":879,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedwordmap",{"_index":880,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlighting",{"_index":921,"title":{},"body":{"components/DocumentContentComponent.html":{},"index.html":{}}}],["highlights",{"_index":894,"title":{},"body":{"components/DocumentContentComponent.html":{},"index.html":{}}}],["holders",{"_index":1859,"title":{},"body":{"index.html":{}}}],["holding",{"_index":411,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"index.html":{}}}],["holds",{"_index":468,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["home'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["home.component",{"_index":1046,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{}}}],["home.routes",{"_index":1050,"title":{},"body":{"modules/HomeModule.html":{}}}],["homecomponent",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1038,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepage",{"_index":860,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["homeroutes",{"_index":1042,"title":{"modules/HomeRoutes.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules.html":{},"overview.html":{}}}],["hover",{"_index":486,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["hovered",{"_index":444,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword",{"_index":389,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword.includes(pairseparator",{"_index":973,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["hovering",{"_index":556,"title":{},"body":{"components/ComparisonComponent.html":{},"index.html":{}}}],["hovers",{"_index":420,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["html",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["html.pipe",{"_index":950,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["html.pipe.ts",{"_index":1022,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:14",{"_index":1027,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["htmlelement",{"_index":425,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["htmltextareaelement",{"_index":1135,"title":{},"body":{"components/InitComponent.html":{}}}],["https://entropymine.com/imageworsener/srgbformula",{"_index":341,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["icon",{"_index":1222,"title":{},"body":{"components/InitComponent.html":{}}}],["icons",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":677,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["id.split(pairseparator",{"_index":801,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["id1",{"_index":495,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["id2",{"_index":497,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["id2][0",{"_index":714,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["identifier",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":657,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["ids[0",{"_index":802,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ids[1",{"_index":803,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ignore",{"_index":1255,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["image",{"_index":1213,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["implied",{"_index":1850,"title":{},"body":{"index.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["import('./home/home.module').then(m",{"_index":201,"title":{},"body":{"modules/AppRouter.html":{}}}],["import('./init/init.module').then(m",{"_index":198,"title":{},"body":{"modules/AppRouter.html":{}}}],["importance",{"_index":756,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["importances",{"_index":1412,"title":{},"body":{"injectables/QueryService.html":{}}}],["important",{"_index":760,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["importing",{"_index":1760,"title":{},"body":{"index.html":{}}}],["imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["in/out",{"_index":1590,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["incline",{"_index":1757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["included",{"_index":1844,"title":{},"body":{"index.html":{}}}],["including",{"_index":1827,"title":{},"body":{"index.html":{}}}],["increasecamera",{"_index":1588,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":835,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["indicator",{"_index":1600,"title":{},"body":{"components/UserInterfaceComponent.html":{},"index.html":{}}}],["indirectly",{"_index":673,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["individual",{"_index":318,"title":{},"body":{"classes/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["information",{"_index":469,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["inherits",{"_index":674,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["init",{"_index":1074,"title":{},"body":{"components/InitComponent.html":{}}}],["init'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["init.component",{"_index":1242,"title":{},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{}}}],["init.component.html",{"_index":1076,"title":{},"body":{"components/InitComponent.html":{}}}],["init.component.scss",{"_index":1075,"title":{},"body":{"components/InitComponent.html":{}}}],["init.routes",{"_index":1243,"title":{},"body":{"modules/InitModule.html":{}}}],["initcomponent",{"_index":141,"title":{"components/InitComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["initgraphdata",{"_index":1398,"title":{},"body":{"injectables/QueryService.html":{}}}],["initgraphdata(corpus",{"_index":1419,"title":{},"body":{"injectables/QueryService.html":{}}}],["initial",{"_index":1070,"title":{},"body":{"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["initializing",{"_index":1405,"title":{},"body":{"injectables/QueryService.html":{}}}],["initmodule",{"_index":1236,"title":{"modules/InitModule.html":{}},"body":{"modules/InitModule.html":{},"modules.html":{},"overview.html":{}}}],["initroutes",{"_index":1240,"title":{"modules/InitRoutes.html":{}},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules.html":{},"overview.html":{}}}],["injectable",{"_index":863,"title":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}},"body":{"guards/CorpusLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["injectables",{"_index":1245,"title":{},"body":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["inner",{"_index":726,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["innerproduct",{"_index":1399,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["innerproduct(id1",{"_index":728,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["innerproductsingle",{"_index":1400,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["innerproductsingle(id",{"_index":741,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["input",{"_index":217,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["inputs",{"_index":403,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["inputted",{"_index":1756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["insert",{"_index":1211,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["inserted",{"_index":1073,"title":{},"body":{"components/InitComponent.html":{}}}],["insertedtext",{"_index":1077,"title":{},"body":{"components/InitComponent.html":{}}}],["inserting",{"_index":1140,"title":{},"body":{"components/InitComponent.html":{}}}],["insertingtext",{"_index":1078,"title":{},"body":{"components/InitComponent.html":{}}}],["instance",{"_index":1261,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["integers",{"_index":321,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["interface",{"_index":149,"title":{"interfaces/AppSettings.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"index.html":{}}}],["interface.component",{"_index":1066,"title":{},"body":{"modules/HomeModule.html":{}}}],["interface.component.html",{"_index":1577,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.scss",{"_index":1576,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts",{"_index":1575,"title":{},"body":{"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["interface.component.ts:17",{"_index":1606,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:21",{"_index":1605,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:25",{"_index":1596,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:29",{"_index":1603,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:33",{"_index":1601,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:37",{"_index":1592,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:41",{"_index":1589,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:46",{"_index":1607,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:50",{"_index":1613,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:54",{"_index":1612,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:58",{"_index":1609,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:62",{"_index":1614,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:67",{"_index":1615,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface/settings/settings.component",{"_index":1056,"title":{},"body":{"modules/HomeModule.html":{}}}],["interface/settings/settings.component.ts",{"_index":208,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["interface/settings/settings.component.ts:26",{"_index":1533,"title":{},"body":{"components/SettingsComponent.html":{}}}],["interface/settings/settings.component.ts:30",{"_index":1534,"title":{},"body":{"components/SettingsComponent.html":{}}}],["interface/settings/settings.component.ts:37",{"_index":1535,"title":{},"body":{"components/SettingsComponent.html":{}}}],["interface/user",{"_index":1065,"title":{},"body":{"modules/HomeModule.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":206,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"overview.html":{}}}],["interfaces/corpus",{"_index":1765,"title":{},"body":{"index.html":{}}}],["intrusive",{"_index":988,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["inversesrgbcompounding",{"_index":249,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["isloading",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["isloadingsource",{"_index":1265,"title":{},"body":{"injectables/LoadingService.html":{}}}],["isn't",{"_index":533,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["iswordlowlighted",{"_index":905,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["iswordlowlighted(word",{"_index":936,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["it's",{"_index":1003,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["italic",{"_index":1011,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["items",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["items.sort((first",{"_index":518,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["iterate",{"_index":772,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["itself",{"_index":998,"title":{},"body":{"components/DocumentContentComponent.html":{},"injectables/QueryService.html":{}}}],["join",{"_index":750,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["json",{"_index":1133,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["json.parse(text",{"_index":1178,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonfile",{"_index":1079,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonschematype",{"_index":1252,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["jsontextarea",{"_index":1080,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonvalidateservice",{"_index":1090,"title":{"injectables/JsonValidateService.html":{}},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"coverage.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["key",{"_index":231,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["keyarray",{"_index":1514,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["keyarray.includes(word",{"_index":1527,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["keys",{"_index":798,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["kickstarting",{"_index":1421,"title":{},"body":{"injectables/QueryService.html":{}}}],["kind",{"_index":1848,"title":{},"body":{"index.html":{}}}],["label",{"_index":578,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SettingsComponent.html":{}}}],["labels",{"_index":1536,"title":{},"body":{"components/SettingsComponent.html":{}}}],["last",{"_index":1541,"title":{},"body":{"components/SettingsComponent.html":{}}}],["layout",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"dependencies.html":{}}}],["leading",{"_index":362,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["leave",{"_index":446,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["leftsoftmatches",{"_index":1524,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["legend",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"overview.html":{}}}],["length",{"_index":832,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["less",{"_index":940,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["level",{"_index":1591,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["liability",{"_index":1863,"title":{},"body":{"index.html":{}}}],["liable",{"_index":1860,"title":{},"body":{"index.html":{}}}],["licence",{"_index":1809,"title":{},"body":{"index.html":{}}}],["license",{"_index":1811,"title":{},"body":{"index.html":{}}}],["lighted",{"_index":971,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["limitation",{"_index":1828,"title":{},"body":{"index.html":{}}}],["limited",{"_index":1851,"title":{},"body":{"index.html":{}}}],["line",{"_index":582,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["linear",{"_index":815,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["links",{"_index":701,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":1328,"title":{},"body":{"modules/MaterialModule.html":{}}}],["literal",{"_index":448,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["loadchildren",{"_index":197,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded",{"_index":193,"title":{},"body":{"modules/AppRouter.html":{},"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{},"coverage.html":{}}}],["loadexample",{"_index":1085,"title":{},"body":{"components/InitComponent.html":{}}}],["loading",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["loading.service",{"_index":1443,"title":{},"body":{"injectables/QueryService.html":{}}}],["loadingprogress",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingprogresssource",{"_index":1266,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":39,"title":{"injectables/LoadingService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["loadingstage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingstagesource",{"_index":1267,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loads",{"_index":1112,"title":{},"body":{"components/InitComponent.html":{}}}],["located",{"_index":857,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["log2",{"_index":1693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["log2(n",{"_index":295,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["logarithm",{"_index":293,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["logic",{"_index":596,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["long",{"_index":366,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"injectables/LoadingService.html":{}}}],["look",{"_index":529,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["looked",{"_index":704,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["low",{"_index":970,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lower",{"_index":713,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["lowlight",{"_index":1007,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighted",{"_index":939,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighting",{"_index":922,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["m.homemodule",{"_index":202,"title":{},"body":{"modules/AppRouter.html":{}}}],["m.initmodule",{"_index":199,"title":{},"body":{"modules/AppRouter.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["making",{"_index":462,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["manual",{"_index":1759,"title":{},"body":{"index.html":{}}}],["map",{"_index":200,"title":{},"body":{"modules/AppRouter.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["map(data",{"_index":1481,"title":{},"body":{"injectables/QueryService.html":{}}}],["mapping",{"_index":927,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["maps",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["margin",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["marked",{"_index":938,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["mat",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["matautocompletemodule",{"_index":1315,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1306,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":1335,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1329,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":314,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"index.html":{}}}],["matcheckboxchange",{"_index":618,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["matcheckboxmodule",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matched",{"_index":478,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["matches",{"_index":311,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["matching",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1354,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matchword",{"_index":538,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["matdatepickermodule",{"_index":1317,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":1339,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1489,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["material.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["materialmodule",{"_index":168,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1333,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1319,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":1326,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(value",{"_index":290,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.log2(n",{"_index":296,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow((b",{"_index":349,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow((g",{"_index":348,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow((r",{"_index":343,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(1",{"_index":819,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["math.pow(2",{"_index":299,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(b",{"_index":353,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(g",{"_index":352,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(r",{"_index":351,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["maticonmodule",{"_index":1302,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1344,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1304,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1324,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginatormodule",{"_index":1308,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1338,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1336,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":1346,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":1348,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":1298,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidermodule",{"_index":1350,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":1321,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1092,"title":{},"body":{"components/InitComponent.html":{}}}],["matsnackbarmodule",{"_index":1343,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsortmodule",{"_index":1310,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsteppermodule",{"_index":1331,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":1312,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":1352,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1300,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1341,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["maxzoom",{"_index":1582,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["meaning",{"_index":658,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["measure",{"_index":693,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["media",{"_index":1652,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["menu",{"_index":219,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["merchantability",{"_index":1853,"title":{},"body":{"index.html":{}}}],["merge",{"_index":983,"title":{},"body":{"components/DocumentContentComponent.html":{},"index.html":{}}}],["message",{"_index":1104,"title":{},"body":{"components/InitComponent.html":{}}}],["messages",{"_index":1099,"title":{},"body":{"components/InitComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["method",{"_index":264,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["michal",{"_index":1814,"title":{},"body":{"index.html":{}}}],["middle",{"_index":1644,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["min",{"_index":1227,"title":{},"body":{"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["mind",{"_index":280,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["minmax(200px",{"_index":1569,"title":{},"body":{"components/SidenavComponent.html":{}}}],["minzoom",{"_index":1583,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["miscellaneous",{"_index":1739,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1810,"title":{},"body":{"index.html":{}}}],["mix",{"_index":250,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["mix(other",{"_index":274,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["mixed",{"_index":265,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["mixing",{"_index":243,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["modifier:{{settings.clumpingmodifier",{"_index":1540,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifier:{{settings.distancemodifier",{"_index":1539,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifiers",{"_index":813,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["modify",{"_index":1830,"title":{},"body":{"index.html":{}}}],["module",{"_index":155,"title":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["modules",{"_index":157,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":540,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["mouse",{"_index":1503,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["mouseevent",{"_index":1505,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["move",{"_index":1774,"title":{},"body":{"index.html":{}}}],["msg",{"_index":1105,"title":{},"body":{"components/InitComponent.html":{}}}],["multiple",{"_index":1790,"title":{},"body":{"index.html":{}}}],["multiplier",{"_index":814,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["n",{"_index":294,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["naive",{"_index":276,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["nav",{"_index":1571,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigate",{"_index":1229,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["navigating",{"_index":859,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"index.html":{}}}],["navigation",{"_index":1100,"title":{},"body":{"components/InitComponent.html":{}}}],["need",{"_index":1798,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":226,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["next",{"_index":1802,"title":{},"body":{"index.html":{}}}],["ng",{"_index":566,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["ngmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["ngonchanges",{"_index":402,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["ngonchanges(changes",{"_index":455,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["node",{"_index":670,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["node's",{"_index":690,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodeid",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nodes",{"_index":699,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nodes.push(doc",{"_index":840,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes.push(node",{"_index":836,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["non",{"_index":771,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":1658,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["noninfringement",{"_index":1857,"title":{},"body":{"index.html":{}}}],["norm",{"_index":763,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normal",{"_index":272,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["normalization",{"_index":762,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["normalize",{"_index":768,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normalized",{"_index":755,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["normalizedeviation",{"_index":1694,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizedeviation(value",{"_index":286,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["normalizing",{"_index":1755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normwordpairs",{"_index":765,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normwordpairs[id",{"_index":769,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["notice",{"_index":1842,"title":{},"body":{"index.html":{}}}],["notify",{"_index":548,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["nth",{"_index":572,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["null",{"_index":686,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["number",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":659,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.entries(corpus.results",{"_index":828,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id",{"_index":743,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id1",{"_index":730,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id2",{"_index":732,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(corpus.dictionary).find(key",{"_index":705,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(exactpairs).map((key",{"_index":516,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(softpairs).map((key",{"_index":526,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(wordimportancepairs",{"_index":799,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs",{"_index":767,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs).includes(wordskey",{"_index":791,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["observable",{"_index":666,"title":{},"body":{"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["observable(subscriber",{"_index":827,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["observes",{"_index":1468,"title":{},"body":{"injectables/QueryService.html":{}}}],["obtaining",{"_index":1822,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1597,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["once",{"_index":1094,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["onchanges",{"_index":384,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["one",{"_index":364,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["open",{"_index":1202,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["opened",{"_index":1616,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["opens",{"_index":1799,"title":{},"body":{"index.html":{}}}],["operating",{"_index":1386,"title":{},"body":{"injectables/QueryService.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1655,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["other.b",{"_index":337,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["other.g",{"_index":335,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["other.inversesrgbcompounding",{"_index":358,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["other.r",{"_index":333,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["otherwise",{"_index":545,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["out",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"overview.html":{}}}],["out.get(match).add(parent",{"_index":967,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.has(match",{"_index":966,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.set(match",{"_index":968,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["output",{"_index":218,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["outputs",{"_index":405,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["outputted",{"_index":1149,"title":{},"body":{"components/InitComponent.html":{}}}],["over",{"_index":421,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"index.html":{}}}],["overflow",{"_index":560,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["overflowing",{"_index":430,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["overview",{"_index":1873,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1008,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["package",{"_index":1714,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":562,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["page",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pair",{"_index":746,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/PipesModule.html":{},"miscellaneous/variables.html":{}}}],["paired",{"_index":1370,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairs",{"_index":441,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["pairseparator",{"_index":668,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pairsplitfirstpipe",{"_index":1356,"title":{"pipes/PairSplitFirstPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairsplitsecondpipe",{"_index":1365,"title":{"pipes/PairSplitSecondPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairup",{"_index":1367,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairuppipe",{"_index":1368,"title":{"pipes/PairUpPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["panelclass",{"_index":1164,"title":{},"body":{"components/InitComponent.html":{}}}],["param",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":541,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["parse",{"_index":1154,"title":{},"body":{"components/InitComponent.html":{}}}],["parsed",{"_index":1177,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["parseint(matches[1",{"_index":322,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["parseint(matches[2",{"_index":324,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["parseint(matches[3",{"_index":325,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["parsing",{"_index":1121,"title":{},"body":{"components/InitComponent.html":{}}}],["part",{"_index":330,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["particular",{"_index":1855,"title":{},"body":{"index.html":{}}}],["passed",{"_index":303,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["passing",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["pasted",{"_index":1768,"title":{},"body":{"index.html":{}}}],["path",{"_index":196,"title":{},"body":{"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["patternproperties",{"_index":1257,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["percent:'.2",{"_index":629,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percent:\\'.2",{"_index":649,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percentage",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{}}}],["perfect",{"_index":1619,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["perform",{"_index":702,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["permission",{"_index":1816,"title":{},"body":{"index.html":{}}}],["permit",{"_index":1837,"title":{},"body":{"index.html":{}}}],["person",{"_index":1821,"title":{},"body":{"index.html":{}}}],["persons",{"_index":1838,"title":{},"body":{"index.html":{}}}],["petr",{"_index":1815,"title":{},"body":{"index.html":{}}}],["phrase",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe",{"_index":909,"title":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["pipe(map((corpus",{"_index":867,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["pipes",{"_index":1020,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"overview.html":{}}}],["pipes/escape",{"_index":949,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pair",{"_index":956,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pipes.module",{"_index":1064,"title":{},"body":{"modules/HomeModule.html":{}}}],["pipesmodule",{"_index":1063,"title":{"modules/PipesModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1029,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pixels",{"_index":1598,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["placed",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populates",{"_index":434,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["portions",{"_index":1846,"title":{},"body":{"index.html":{}}}],["portrayed",{"_index":1787,"title":{},"body":{"index.html":{}}}],["position",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["possible",{"_index":463,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["potential",{"_index":987,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["potentially",{"_index":454,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["pow2",{"_index":1695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pow2(n",{"_index":298,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["power",{"_index":297,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["predefined",{"_index":370,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["preface",{"_index":1217,"title":{},"body":{"components/InitComponent.html":{}}}],["present",{"_index":862,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["press",{"_index":1595,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["pressing",{"_index":1808,"title":{},"body":{"index.html":{}}}],["prevents",{"_index":850,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["previously",{"_index":552,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["prevword",{"_index":553,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["primary",{"_index":639,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["proceed",{"_index":1761,"title":{},"body":{"index.html":{}}}],["process",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["processed",{"_index":1116,"title":{},"body":{"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["processing",{"_index":1484,"title":{},"body":{"injectables/QueryService.html":{}}}],["product",{"_index":727,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["production",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["promise",{"_index":1127,"title":{},"body":{"components/InitComponent.html":{}}}],["promise((resolve",{"_index":1168,"title":{},"body":{"components/InitComponent.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":248,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["provided",{"_index":1769,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":865,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["publish",{"_index":1831,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1856,"title":{},"body":{"index.html":{}}}],["put",{"_index":1372,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["queries",{"_index":660,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["query",{"_index":680,"title":{},"body":{"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["querying",{"_index":1385,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryservice",{"_index":409,"title":{"injectables/QueryService.html":{}},"body":{"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["queryutils",{"_index":483,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["queryutils.getdocumenttext(id",{"_index":1464,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getmostimportantexactmatches(this.wordpairs",{"_index":513,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getmostimportantsoftmatches(this.wordpairs",{"_index":525,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getnormalizedwordimportancepairs(id1",{"_index":1465,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarity(id1",{"_index":1458,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarityword(word1",{"_index":1459,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsoftcosinemeasure(id1",{"_index":1463,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getword(id",{"_index":1457,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getwordid(word",{"_index":1455,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproduct(id1",{"_index":1460,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproductsingle(id",{"_index":1461,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.softcosinemeasurenorm(id1",{"_index":1462,"title":{},"body":{"injectables/QueryService.html":{}}}],["quick",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quot",{"_index":1035,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["r",{"_index":257,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["r)}${(g.length",{"_index":368,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["r.length",{"_index":367,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["radius",{"_index":569,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["range",{"_index":338,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["re",{"_index":996,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reactiveformsmodule",{"_index":1048,"title":{},"body":{"modules/HomeModule.html":{}}}],["read",{"_index":1170,"title":{},"body":{"components/InitComponent.html":{}}}],["readonly",{"_index":372,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"injectables/QueryService.html":{}}}],["ready",{"_index":1171,"title":{},"body":{"components/InitComponent.html":{}}}],["receives",{"_index":1450,"title":{},"body":{"injectables/QueryService.html":{}}}],["red",{"_index":1165,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["redirectto",{"_index":203,"title":{},"body":{"modules/AppRouter.html":{}}}],["reduce((a",{"_index":1518,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["refer",{"_index":1783,"title":{},"body":{"index.html":{}}}],["reference",{"_index":1138,"title":{},"body":{"components/InitComponent.html":{}}}],["regex",{"_index":301,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/functions.html":{}}}],["regexp",{"_index":953,"title":{},"body":{"components/DocumentContentComponent.html":{},"dependencies.html":{}}}],["regexp(/^#?([0",{"_index":306,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["regexp(`(?${escapedword",{"_index":997,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reject",{"_index":1119,"title":{},"body":{"components/InitComponent.html":{}}}],["reject(e",{"_index":1183,"title":{},"body":{"components/InitComponent.html":{}}}],["relation",{"_index":488,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relations",{"_index":886,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{}}}],["relationship",{"_index":691,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["relationships",{"_index":1501,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["relative",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["remove",{"_index":542,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["remove_circle_outline",{"_index":1622,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["replace(/\"/g",{"_index":1034,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/&/g",{"_index":1030,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/'/g",{"_index":1036,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(//g",{"_index":1032,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["reports",{"_index":1406,"title":{},"body":{"injectables/QueryService.html":{}}}],["representation",{"_index":663,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["representations",{"_index":1193,"title":{},"body":{"components/InitComponent.html":{}}}],["requests",{"_index":1608,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["required",{"_index":1258,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["reroute",{"_index":1185,"title":{},"body":{"components/InitComponent.html":{}}}],["reset",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resize",{"_index":1059,"title":{},"body":{"modules/HomeModule.html":{},"dependencies.html":{}}}],["resolve",{"_index":1118,"title":{},"body":{"components/InitComponent.html":{}}}],["resolve(parsed",{"_index":1181,"title":{},"body":{"components/InitComponent.html":{}}}],["respective",{"_index":1199,"title":{},"body":{"components/InitComponent.html":{}}}],["respectively",{"_index":1777,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":380,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["restriction",{"_index":1826,"title":{},"body":{"index.html":{}}}],["result",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":506,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1360,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["retrieving",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":289,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":965,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversed",{"_index":926,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap",{"_index":930,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap.get(word).size",{"_index":1002,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap.get(word)?.has(hoveredword",{"_index":980,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["rgb(176",{"_index":1637,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["rgb(55",{"_index":1638,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["rgb(69",{"_index":1641,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["rgba(0",{"_index":642,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["right",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["rights",{"_index":1829,"title":{},"body":{"index.html":{}}}],["rightsoftmatches",{"_index":1525,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/CorpusLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["root'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["route",{"_index":851,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["router",{"_index":855,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{}}}],["routermodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forchild(routes",{"_index":1068,"title":{},"body":{"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forroot(routes",{"_index":204,"title":{},"body":{"modules/AppRouter.html":{}}}],["routes",{"_index":18,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{},"routes.html":{}}}],["rows",{"_index":1567,"title":{},"body":{"components/SidenavComponent.html":{}}}],["rxjs",{"_index":667,"title":{},"body":{"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":864,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"injectables/QueryService.html":{}}}],["safe",{"_index":911,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["same",{"_index":711,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["saying",{"_index":1132,"title":{},"body":{"components/InitComponent.html":{}}}],["schema",{"_index":1253,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":1179,"title":{},"body":{"components/InitComponent.html":{}}}],["screen",{"_index":1186,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["scroll",{"_index":1773,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":390,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["scrolled",{"_index":534,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["searchqueryschema",{"_index":1256,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["second",{"_index":519,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["second[1",{"_index":520,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["secondary",{"_index":1005,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["see",{"_index":976,"title":{},"body":{"components/DocumentContentComponent.html":{},"injectables/JsonValidateService.html":{}}}],["select",{"_index":1767,"title":{},"body":{"index.html":{}}}],["selected",{"_index":416,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["selectedchange",{"_index":603,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["selecteddocument",{"_index":413,"title":{"interfaces/SelectedDocument.html":{}},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["selecteddocuments",{"_index":404,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["selectednodes",{"_index":1584,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["selectedwords",{"_index":391,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selecting",{"_index":1778,"title":{},"body":{"index.html":{}}}],["selection",{"_index":381,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selections",{"_index":1806,"title":{},"body":{"index.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["selects",{"_index":501,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["self",{"_index":1624,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["sell",{"_index":1835,"title":{},"body":{"index.html":{}}}],["semantic",{"_index":1192,"title":{},"body":{"components/InitComponent.html":{}}}],["send",{"_index":831,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["sending",{"_index":1108,"title":{},"body":{"components/InitComponent.html":{}}}],["separate",{"_index":752,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["separates",{"_index":304,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["separator",{"_index":786,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["services/json",{"_index":1143,"title":{},"body":{"components/InitComponent.html":{}}}],["services/loading.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["services/query.service",{"_index":481,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{}}}],["set",{"_index":235,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["set([...currentdocumentsofts",{"_index":985,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set([parent",{"_index":969,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set(concatenatedsoft",{"_index":1526,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["set(keyarray",{"_index":1521,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["setcorpus",{"_index":1401,"title":{},"body":{"injectables/QueryService.html":{}}}],["setcorpus(corpus",{"_index":1428,"title":{},"body":{"injectables/QueryService.html":{}}}],["setisloading",{"_index":1268,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setisloading(value",{"_index":1271,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress",{"_index":1269,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress(value",{"_index":1274,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage",{"_index":1270,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage(value",{"_index":1276,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setquery",{"_index":1086,"title":{},"body":{"components/InitComponent.html":{}}}],["setquery(corpus",{"_index":1114,"title":{},"body":{"components/InitComponent.html":{}}}],["sets",{"_index":920,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["setter",{"_index":1273,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["setting",{"_index":229,"title":{},"body":{"interfaces/AppSettings.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":210,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["settings.component.html",{"_index":220,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":221,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":1617,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["settingschange",{"_index":225,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["settingscomponent",{"_index":143,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsopen",{"_index":1578,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["shadow",{"_index":588,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["shall",{"_index":1843,"title":{},"body":{"index.html":{}}}],["show",{"_index":1162,"title":{},"body":{"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["showdeviations",{"_index":213,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["showed",{"_index":532,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["showing",{"_index":874,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["showlabels",{"_index":214,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["shrink",{"_index":634,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["side",{"_index":1795,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":1496,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidebarclose",{"_index":1498,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav",{"_index":1490,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["sidenav.component",{"_index":482,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{}}}],["sidenav.component.html",{"_index":1491,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1492,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav/comparison/comparison",{"_index":1054,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/comparison/comparison.component",{"_index":1053,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/document/document",{"_index":1061,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/document/document.component",{"_index":1060,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/sidenav.component",{"_index":1052,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenavcomponent",{"_index":145,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["similar",{"_index":782,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{}}}],["similarities",{"_index":665,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["similarity",{"_index":460,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["simple",{"_index":1754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simplechange",{"_index":1751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simplechanges",{"_index":456,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["simply",{"_index":1770,"title":{},"body":{"index.html":{}}}],["simulating",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simulation",{"_index":697,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationlinkdatum",{"_index":688,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationnodedatum",{"_index":675,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["single",{"_index":1805,"title":{},"body":{"index.html":{}}}],["size",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["skip",{"_index":780,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["skipping",{"_index":745,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["slider",{"_index":1611,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["snackbar",{"_index":1091,"title":{},"body":{"components/InitComponent.html":{}}}],["soft",{"_index":438,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["softcosinemeasurenorm",{"_index":1402,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["softcosinemeasurenorm(id1",{"_index":764,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["softmatch",{"_index":602,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["softmatches",{"_index":807,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["softmatches[id",{"_index":809,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["softpairs",{"_index":524,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["softpairs[key",{"_index":527,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["software",{"_index":1824,"title":{},"body":{"index.html":{}}}],["solid",{"_index":1649,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["something",{"_index":1285,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sort",{"_index":514,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["sorted",{"_index":475,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairsexact",{"_index":392,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairssoft",{"_index":393,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["space",{"_index":273,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["spaces",{"_index":753,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["spacing",{"_index":1012,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["span",{"_index":641,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["special",{"_index":1024,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["specific",{"_index":233,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["specified",{"_index":228,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"classes/DefaultColors.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["specifies",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["specifying",{"_index":485,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["spinner",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["split",{"_index":974,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["split.pipe",{"_index":957,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["split.pipe.ts",{"_index":1358,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["split.pipe.ts:16",{"_index":1362,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{}}}],["split.pipe.ts:33",{"_index":1378,"title":{},"body":{"pipes/PairSplitSecondPipe.html":{}}}],["split.pipe.ts:51",{"_index":1379,"title":{},"body":{"pipes/PairUpPipe.html":{}}}],["split.pipe.ts:68",{"_index":1574,"title":{},"body":{"pipes/SplitUpPipe.html":{}}}],["split[this.documentindex",{"_index":978,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["splits",{"_index":1359,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splitting",{"_index":912,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["splitup",{"_index":1375,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splituppipe",{"_index":901,"title":{"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../comparison.component.ts",{"_index":1741,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.utils.ts",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../json",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.ts",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.utils.ts",{"_index":1742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../various.utils.ts",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routes.ts",{"_index":189,"title":{},"body":{"modules/AppRouter.html":{}}}],["src/app/guards/corpus",{"_index":848,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"coverage.html":{}}}],["src/app/home/graph/graph.component.ts",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.module.ts",{"_index":1043,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routes.ts",{"_index":1067,"title":{},"body":{"modules/HomeRoutes.html":{}}}],["src/app/home/sidenav/comparison/comparison",{"_index":592,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts",{"_index":379,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:105",{"_index":439,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:117",{"_index":433,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:132",{"_index":437,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:148",{"_index":426,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:158",{"_index":449,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:192",{"_index":431,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:202",{"_index":443,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:31",{"_index":414,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:36",{"_index":423,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:40",{"_index":418,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:45",{"_index":477,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:49",{"_index":474,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:53",{"_index":476,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:57",{"_index":471,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:61",{"_index":467,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:65",{"_index":466,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:69",{"_index":459,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:74",{"_index":410,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:81",{"_index":458,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:91",{"_index":457,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/document/document",{"_index":891,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts",{"_index":873,"title":{},"body":{"components/DocumentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts:18",{"_index":881,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:22",{"_index":883,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:26",{"_index":884,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:30",{"_index":885,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:34",{"_index":887,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:38",{"_index":882,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts",{"_index":1486,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:110",{"_index":1550,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:120",{"_index":1553,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:26",{"_index":1547,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:30",{"_index":1546,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:35",{"_index":1549,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:39",{"_index":1548,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:44",{"_index":1555,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:48",{"_index":1556,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:52",{"_index":1557,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:56",{"_index":1558,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:62",{"_index":1552,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:72",{"_index":1551,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:82",{"_index":1554,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/user",{"_index":207,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["src/app/init/init.component.ts",{"_index":1069,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{}}}],["src/app/init/init.component.ts:112",{"_index":1126,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:121",{"_index":1128,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:138",{"_index":1120,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:162",{"_index":1115,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:172",{"_index":1111,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:21",{"_index":1130,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:25",{"_index":1129,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:29",{"_index":1134,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:33",{"_index":1141,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:38",{"_index":1093,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:56",{"_index":1110,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:71",{"_index":1107,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:94",{"_index":1102,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.module.ts",{"_index":1241,"title":{},"body":{"modules/InitModule.html":{}}}],["src/app/init/init.routes.ts",{"_index":1244,"title":{},"body":{"modules/InitRoutes.html":{}}}],["src/app/material.module.ts",{"_index":1297,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pipes/escape",{"_index":1021,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pair",{"_index":1357,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1383,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/json",{"_index":1246,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/loading.service.ts",{"_index":1264,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:16",{"_index":1282,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:20",{"_index":1279,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:26",{"_index":1289,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:30",{"_index":1287,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:36",{"_index":1293,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:40",{"_index":1291,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:46",{"_index":1272,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:54",{"_index":1275,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:62",{"_index":1277,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/query.service.ts",{"_index":1384,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/services/query.service.ts:107",{"_index":1414,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:117",{"_index":1426,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:126",{"_index":1427,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:136",{"_index":1430,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:146",{"_index":1416,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:155",{"_index":1408,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:165",{"_index":1411,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:173",{"_index":1420,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:19",{"_index":1437,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:23",{"_index":1439,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:28",{"_index":1440,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:34",{"_index":1404,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:55",{"_index":1429,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:64",{"_index":1432,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:78",{"_index":1418,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:87",{"_index":1417,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:97",{"_index":1413,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/utils/graph.utils.ts",{"_index":241,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/graph.utils.ts:102",{"_index":260,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:114",{"_index":283,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:128",{"_index":871,"title":{},"body":{"classes/DefaultColors.html":{}}}],["src/app/utils/graph.utils.ts:129",{"_index":870,"title":{},"body":{"classes/DefaultColors.html":{}}}],["src/app/utils/graph.utils.ts:130",{"_index":872,"title":{},"body":{"classes/DefaultColors.html":{}}}],["src/app/utils/graph.utils.ts:30",{"_index":256,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:33",{"_index":267,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:53",{"_index":275,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:64",{"_index":269,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:82",{"_index":281,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/query.utils.ts",{"_index":650,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/various.utils.ts",{"_index":1707,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":263,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["srgbcompounding",{"_index":251,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["stage",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["start",{"_index":1483,"title":{},"body":{"injectables/QueryService.html":{},"components/UserInterfaceComponent.html":{}}}],["started",{"_index":555,"title":{"index.html":{}},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["statements",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":246,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["step",{"_index":1594,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["stiffness",{"_index":287,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["store",{"_index":522,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["stored",{"_index":1442,"title":{},"body":{"injectables/QueryService.html":{}}}],["stores",{"_index":1284,"title":{},"body":{"injectables/LoadingService.html":{}}}],["storing",{"_index":829,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["str1",{"_index":1369,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str1}${separator}${str2",{"_index":1374,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str2",{"_index":1371,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["straight",{"_index":823,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["stretch",{"_index":633,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":320,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["stroke",{"_index":1226,"title":{},"body":{"components/InitComponent.html":{}}}],["structure",{"_index":473,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["style",{"_index":1010,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["subject",{"_index":1283,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["sublicense",{"_index":1833,"title":{},"body":{"index.html":{}}}],["subscriber.complete",{"_index":843,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscriber.next({progress",{"_index":833,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscription",{"_index":1425,"title":{},"body":{"injectables/QueryService.html":{}}}],["substantial",{"_index":1845,"title":{},"body":{"index.html":{}}}],["subtitle",{"_index":1487,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["successful",{"_index":1124,"title":{},"body":{"components/InitComponent.html":{}}}],["support",{"_index":1870,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1871,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":278,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["taller",{"_index":530,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["tap",{"_index":1444,"title":{},"body":{"injectables/QueryService.html":{}}}],["tap(progress",{"_index":1474,"title":{},"body":{"injectables/QueryService.html":{}}}],["target",{"_index":692,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["tell",{"_index":1466,"title":{},"body":{"injectables/QueryService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["temporarily",{"_index":551,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["tertiary",{"_index":1006,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["text",{"_index":579,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["text.join",{"_index":754,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["textarea",{"_index":1139,"title":{},"body":{"components/InitComponent.html":{}}}],["texts",{"_index":652,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["texts_bow",{"_index":653,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["that's",{"_index":942,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["theres",{"_index":1471,"title":{},"body":{"injectables/QueryService.html":{}}}],["they're",{"_index":808,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["this.b",{"_index":336,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.clearhighlightedwords",{"_index":1507,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.clearwordselection",{"_index":505,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.compareclick.emit(e",{"_index":1510,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.convertedcontent",{"_index":958,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.corpussource.asobservable",{"_index":1438,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.getvalue",{"_index":1454,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.next(corpus",{"_index":1453,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.displayerror('couldn\\'t",{"_index":1153,"title":{},"body":{"components/InitComponent.html":{}}}],["this.documentsimilarities",{"_index":499,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.documentsimilarity",{"_index":624,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.escapehtml.transform(this.content",{"_index":990,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.escapehtml.transform(word",{"_index":994,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.g",{"_index":334,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.generateexactpairs",{"_index":510,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatesoftpairs",{"_index":511,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatewordpairs",{"_index":494,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.getformattedcontent",{"_index":959,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.getreversedwordmap",{"_index":991,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedexactmatches",{"_index":986,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedsoftmatches",{"_index":1528,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedsoftmatches[this.documentindex",{"_index":982,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedwordmap",{"_index":1529,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap.entries",{"_index":963,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedwordmap.get(word).has(word",{"_index":1000,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedwordmap.get(word).size",{"_index":1001,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedwordmap.has(word",{"_index":999,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.hoveredword",{"_index":554,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.inversesrgbcompounding",{"_index":356,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.isloading",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloadingsource.asobservable",{"_index":1278,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.isloadingsource.next(value",{"_index":1294,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.jsonfile",{"_index":1159,"title":{},"body":{"components/InitComponent.html":{}}}],["this.jsonvalidateservice.validatecorpus(parsed",{"_index":1180,"title":{},"body":{"components/InitComponent.html":{}}}],["this.loadingprogress",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingprogresssource.asobservable",{"_index":1286,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingprogresssource.next(value",{"_index":1295,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.isloading.subscribe(value",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingprogress.subscribe(value",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingstage.subscribe(value",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.setisloading(false",{"_index":1482,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setisloading(true",{"_index":1467,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingprogress(progress.value",{"_index":1476,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingstage(progress.stage",{"_index":1475,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingstage",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingstagesource.asobservable",{"_index":1290,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingstagesource.next(value",{"_index":1296,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.queryservice.currentcorpus",{"_index":866,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["this.queryservice.getnormalizedwordimportancepairs(this.selecteddocuments[0].id",{"_index":508,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.getsoftcosinemeasure(id1",{"_index":500,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.setcorpus(corpus",{"_index":1184,"title":{},"body":{"components/InitComponent.html":{}}}],["this.r",{"_index":332,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.router.navigate",{"_index":869,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["this.router.navigate(['/map",{"_index":1187,"title":{},"body":{"components/InitComponent.html":{}}}],["this.scrollable[element.id",{"_index":536,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedchange.emit",{"_index":625,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.selecteddocuments?.length",{"_index":493,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[0].id",{"_index":496,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[1].id",{"_index":498,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.clear",{"_index":550,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.delete(e.word",{"_index":547,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.setquery((exampledocument",{"_index":1188,"title":{},"body":{"components/InitComponent.html":{}}}],["this.setquery(res",{"_index":1151,"title":{},"body":{"components/InitComponent.html":{}}}],["this.settings[setting",{"_index":237,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.settingschange.emit(this.settings",{"_index":238,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.sidebarclose.emit(e",{"_index":1506,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.snackbar.open",{"_index":1163,"title":{},"body":{"components/InitComponent.html":{}}}],["this.softmatch",{"_index":628,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.sortedwordpairsexact",{"_index":523,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.sortedwordpairssoft",{"_index":528,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.splituppipe.transform(hoveredword",{"_index":975,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.usedcorpus(corpus",{"_index":1456,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.validateandparse(filereader.result",{"_index":1175,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateandparse(this.insertedtext",{"_index":1169,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validatetext().then(res",{"_index":1150,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateuploadedfile().then(res",{"_index":1161,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validating",{"_index":1148,"title":{},"body":{"components/InitComponent.html":{}}}],["this.weight",{"_index":623,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.word",{"_index":626,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.wordhovered.emit(this.hoveredword",{"_index":558,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordpairs",{"_index":507,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordschanged.emit(this.selectedwords",{"_index":549,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.worker",{"_index":1447,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.onmessage",{"_index":1451,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.postmessage({query",{"_index":1485,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.asobservable",{"_index":1472,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.next(data",{"_index":1452,"title":{},"body":{"injectables/QueryService.html":{}}}],["those",{"_index":837,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["through",{"_index":794,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["time",{"_index":1470,"title":{},"body":{"injectables/QueryService.html":{}}}],["title",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["toggle",{"_index":1323,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tohex",{"_index":252,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["tool",{"_index":1191,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["top",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["tort",{"_index":1866,"title":{},"body":{"index.html":{}}}],["total",{"_index":605,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["transform",{"_index":1025,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(str1",{"_index":1373,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(text",{"_index":1026,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["transform(value",{"_index":1361,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transformed",{"_index":1028,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["transition",{"_index":1632,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["transparent",{"_index":1650,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["true",{"_index":868,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1176,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["ts",{"_index":1254,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["tslib",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["tuples",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":261,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1878,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1446,"title":{},"body":{"injectables/QueryService.html":{}}}],["ui",{"_index":595,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["undefined",{"_index":316,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["unless",{"_index":853,"title":{},"body":{"guards/CorpusLoadedGuard.html":{}}}],["unsafe",{"_index":992,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["unsuccessful",{"_index":1125,"title":{},"body":{"components/InitComponent.html":{}}}],["up",{"_index":751,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["updated",{"_index":452,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["updates",{"_index":1511,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["upon",{"_index":1424,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["url(\"../../../src/assets/background.jpg",{"_index":1214,"title":{},"body":{"components/InitComponent.html":{}}}],["use",{"_index":464,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["used",{"_index":858,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["usedcorpus",{"_index":1403,"title":{},"body":{"injectables/QueryService.html":{}}}],["usedcorpus(corpus",{"_index":1431,"title":{},"body":{"injectables/QueryService.html":{}}}],["user",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["userinterfacecomponent",{"_index":147,"title":{"components/UserInterfaceComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":1610,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["using",{"_index":230,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"classes/DefaultColors.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{},"index.html":{}}}],["utility",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/query.utils",{"_index":484,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["utils/various.utils",{"_index":955,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valid",{"_index":1155,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"index.html":{}}}],["validate",{"_index":1096,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["validate(corpus",{"_index":1263,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validate.service",{"_index":1144,"title":{},"body":{"components/InitComponent.html":{}}}],["validate.service.ts",{"_index":1247,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate.service.ts:87",{"_index":1250,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validateandparse",{"_index":1087,"title":{},"body":{"components/InitComponent.html":{}}}],["validateandparse(text",{"_index":1117,"title":{},"body":{"components/InitComponent.html":{}}}],["validatecorpus",{"_index":1248,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validatecorpus(corpus",{"_index":1249,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validated",{"_index":1122,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validates",{"_index":302,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["validatetext",{"_index":1088,"title":{},"body":{"components/InitComponent.html":{}}}],["validateuploadedfile",{"_index":1089,"title":{},"body":{"components/InitComponent.html":{}}}],["validating",{"_index":1081,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validation",{"_index":1095,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validator",{"_index":1260,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value?.includes(separator",{"_index":1363,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator",{"_index":1377,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[0",{"_index":1364,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[1",{"_index":1366,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valuechanged",{"_index":954,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["valuechanged(changes?.highlightedwords",{"_index":962,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["valuechanged(changesvalue",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["values",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"classes/DefaultColors.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["variable",{"_index":435,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{}}}],["variables",{"_index":631,"title":{"miscellaneous/variables.html":{}},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/variables.html":{}}}],["various.utils",{"_index":669,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["version",{"_index":654,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":1793,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":1142,"title":{},"body":{"components/InitComponent.html":{}}}],["viewchild('jsontextarea",{"_index":1137,"title":{},"body":{"components/InitComponent.html":{}}}],["viewing",{"_index":1792,"title":{},"body":{"index.html":{}}}],["visible",{"_index":941,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["visualization",{"_index":1190,"title":{},"body":{"components/InitComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["vx",{"_index":683,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["vy",{"_index":684,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1",{"_index":721,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1id",{"_index":736,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1weight",{"_index":737,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2",{"_index":723,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2id",{"_index":738,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2weight",{"_index":739,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["warranties",{"_index":1852,"title":{},"body":{"index.html":{}}}],["warranty",{"_index":1847,"title":{},"body":{"index.html":{}}}],["way",{"_index":277,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["we'd",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["we're",{"_index":841,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["web",{"_index":1445,"title":{},"body":{"injectables/QueryService.html":{}}}],["webworker",{"_index":1422,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":480,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["weights",{"_index":735,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{}}}],["welcoming",{"_index":1071,"title":{},"body":{"components/InitComponent.html":{}}}],["well",{"_index":1797,"title":{},"body":{"index.html":{}}}],["what's",{"_index":1198,"title":{},"body":{"components/InitComponent.html":{}}}],["what\\'s",{"_index":1235,"title":{},"body":{"components/InitComponent.html":{}}}],["whenever",{"_index":1786,"title":{},"body":{"index.html":{}}}],["whether",{"_index":428,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/CorpusLoadedGuard.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["wid1",{"_index":773,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wid2",{"_index":775,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["window",{"_index":1494,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["wish",{"_index":934,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["within",{"_index":854,"title":{},"body":{"guards/CorpusLoadedGuard.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1775,"title":{},"body":{"index.html":{}}}],["word",{"_index":422,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["word1",{"_index":718,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["word1}${pairseparator}${word2",{"_index":789,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word2",{"_index":719,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["word_similarities",{"_index":655,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["wordhovered",{"_index":406,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordimportancepairs",{"_index":795,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["wordimportancepairs[id",{"_index":805,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordmap",{"_index":470,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["wordpairs",{"_index":394,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[id",{"_index":770,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[wordskey",{"_index":792,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairskeys",{"_index":766,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["words",{"_index":382,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["words.has(hoveredword",{"_index":979,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(split[this.documentindex",{"_index":977,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["wordschanged",{"_index":407,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordsimilarity",{"_index":778,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordskey",{"_index":788,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word}}{{softmatch",{"_index":630,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["worker",{"_index":1389,"title":{},"body":{"injectables/QueryService.html":{}}}],["worker('../workers/graph",{"_index":1448,"title":{},"body":{"injectables/QueryService.html":{}}}],["workerdata",{"_index":1390,"title":{},"body":{"injectables/QueryService.html":{}}}],["wrap",{"_index":1654,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["wrapper",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["wweight1",{"_index":774,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wweight2",{"_index":776,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wysiwyginsert",{"_index":1208,"title":{},"body":{"components/InitComponent.html":{}}}],["x",{"_index":681,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SidenavComponent.html":{}}}],["y",{"_index":682,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["yellow",{"_index":1804,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1409,"title":{},"body":{"injectables/QueryService.html":{}}}],["you'll",{"_index":1762,"title":{},"body":{"index.html":{}}}],["z",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["zeros",{"_index":363,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["zone.js",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main wrapper component of the application, handles only the loading between routes\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                loadingStage\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe loading service, passing values of loading\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Specifies if the page is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Specifies the progress in percentage value of the current stage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Specifies the current loading stage of the entire loading process\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Document Maps'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoadingService} from './services/loading.service';\n\n\n/**\n * Main wrapper component of the application, handles only the loading between routes\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Document Maps';\n\n  /**\n   * Specifies if the page is loading\n   * @public\n   */\n  isLoading = false;\n  /**\n   * Specifies the progress in percentage value of the current stage\n   * @public\n   */\n  loadingProgress: number;\n  /**\n   * Specifies the current loading stage of the entire loading process\n   * @public\n   */\n  loadingStage: string;\n\n  /**\n   * @param loadingService - The loading service, passing values of loading\n   */\n  constructor(\n    private loadingService: LoadingService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadingService.loadingProgress.subscribe(value => {\n      if (this.loadingProgress !== value){\n        this.loadingProgress = value;\n      }\n    });\n    this.loadingService.loadingStage.subscribe(value => {\n      if (this.loadingStage !== value) {\n        this.loadingStage = value;\n      }\n    });\n    this.loadingService.isLoading.subscribe(value => {\n      if (this.isLoading !== value) {\n        this.isLoading = value;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        {{loadingStage}} {{(loadingProgress / 100) | percent}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .loading-wrapper{\n  position: fixed;\n  z-index: 10;\n  background: #fff;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .loading{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    max-width: 600px;\n    width: 100%;\n    height: 100%;\n    position: relative;\n\n    .loading-phrase{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 1em;\n      width: 100%;\n      font-size: 1.65em;\n    }\n    mat-spinner{\n      margin-right: 0.5em;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{loadingStage}} {{(loadingProgress / 100) | percent}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRouter\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport {MaterialModule} from './material.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ExtendedModule, FlexModule} from '@angular/flex-layout';\nimport {RouterModule} from '@angular/router';\nimport {AppRouter} from './app.routes';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    MaterialModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexModule,\n    ExtendedModule,\n    RouterModule,\n    AppRouter\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRouter.html":{"url":"modules/AppRouter.html","title":"module - AppRouter","body":"\n                   \n\n\n\n\n    Modules\n    AppRouter\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CanActivate, RouterModule, Routes} from '@angular/router';\nimport {CorpusLoadedGuard} from './guards/corpus-loaded-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./init/init.module').then(m => m.InitModule)\"\n  },\n  {\n    path: 'map',\n    canActivate: ([CorpusLoadedGuard]),\n    loadChildren: () => \"import('./home/home.module').then(m => m.HomeModule)\"\n  },\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRouter {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppSettings.html":{"url":"interfaces/AppSettings.html","title":"interface - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/user-interface/settings/settings.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface containing the app settings\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clumpingModifier\n                                \n                                \n                                        distanceModifier\n                                \n                                \n                                        showDeviations\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clumpingModifier\n                                    \n                                \n                                \n                                    \n                                        clumpingModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceModifier\n                                    \n                                \n                                \n                                    \n                                        distanceModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeviations\n                                    \n                                \n                                \n                                    \n                                        showDeviations:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Color.html":{"url":"classes/Color.html","title":"class - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/graph.utils.ts\n        \n\n            \n                Description\n            \n            \n                A helper color class, containing color mixing functions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorSrgbGradient\n                            \n                            \n                                    Static\n                                fromHex\n                            \n                            \n                                    Protected\n                                inverseSrgbCompounding\n                            \n                            \n                                mix\n                            \n                            \n                                    Protected\n                                srgbCompounding\n                            \n                            \n                                toHex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(r: number, g: number, b: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/graph.utils.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        g\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        b\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorSrgbGradient\n                        \n                        \n                    \n                \n            \n            \n                \ncolorSrgbGradient(other: Color, gradient: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:102\n                \n            \n\n\n            \n                \n                    A color mix of two colors using the sRGB method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Color\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other color to be mixed\n\n                                    \n                                \n                                \n                                    gradient\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The gradient percentage between the two colors\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHex(hexCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hexCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            inverseSrgbCompounding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inverseSrgbCompounding()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:64\n                \n            \n\n\n            \n                \n                    A function that converts the color from normal color space to sRGB\n\n\n                    \n                        Returns :         Color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mix\n                        \n                        \n                    \n                \n            \n            \n                \nmix(other: Color, gradient: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:53\n                \n            \n\n\n            \n                \n                    A naive way of color mixing, not taking color compression in mind\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Color\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other color to be mixed with\n\n                                    \n                                \n                                \n                                    gradient\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The gradient percentage between the two colors\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            srgbCompounding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    srgbCompounding()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:82\n                \n            \n\n\n            \n                \n                    A function that converts the sRGB color value back to normal color space\n\n\n                    \n                        Returns :         Color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHex\n                        \n                        \n                    \n                \n            \n            \n                \ntoHex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:114\n                \n            \n\n\n            \n                \n                    Converts a color interface to a hex code string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export function normalizeDeviation(value: number, stiffness: number = 1): number{\n  return ((1 + value / (1 + Math.abs(value * stiffness))) - 1)  * stiffness;\n}\n\n/**\n * Returns the base 2 logarithm of a number\n * @param n The number to return the logarithm of\n */\nexport function log2(n: number): number{\n  return Math.log2(n);\n}\n\n/**\n * Returns the 2 to the power of the specified number\n * @param n The number to return the 2 to the power of\n */\nexport function pow2(n: number): number{\n  return Math.pow(2, n);\n}\n\n/**\n * A helper color class, containing color mixing functions\n */\nexport class Color {\n  constructor(protected r: number, protected g: number, protected b: number) {}\n\n  static fromHex(hexCode: string): Color{\n    // A RegEx that validates the passed in string and separates the R, G and B values\n    const conversionRe = new RegExp(/^#?([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})$/);\n    const matches = hexCode.match(conversionRe);\n    // If the string didn't match the RegEx, deny\n    if (!matches){\n      return undefined;\n    }\n    // Convert the individual components from hexadecimal strings to integers\n    const r = parseInt(matches[1], 16);\n    const g = parseInt(matches[2], 16);\n    const b = parseInt(matches[3], 16);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A naive way of color mixing, not taking color compression in mind\n   * @param other     The other color to be mixed with\n   * @param gradient  The gradient percentage between the two colors\n   */\n  mix(other: Color, gradient: number): Color {\n    // Add each component by adding a part of it, based on the gradient\n    const r = this.r * (1 - gradient) + other.r * (gradient);\n    const g = this.g * (1 - gradient) + other.g * (gradient);\n    const b = this.b * (1 - gradient) + other.b * (gradient);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A function that converts the color from normal color space to sRGB\n   */\n  protected inverseSrgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from the normal color space to the sRGB color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A function that converts the sRGB color value back to normal color space\n   */\n  protected srgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from sRGB color space to normal color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.0031308) ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;\n    g = (g > 0.0031308) ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;\n    b = (b > 0.0031308) ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A color mix of two colors using the sRGB method\n   * @param other     The other color to be mixed\n   * @param gradient  The gradient percentage between the two colors\n   */\n  colorSrgbGradient(other: Color, gradient: number): Color {\n    // First convert to sRGB\n    const c1 = this.inverseSrgbCompounding();\n    const c2 = other.inverseSrgbCompounding();\n\n    // Then mix and convert back to normal color space\n    return c1.mix(c2, gradient).srgbCompounding();\n  }\n\n  /**\n   * Converts a color interface to a hex code string\n   */\n  toHex(): string{\n    // Convert the components to hexadecimal strings\n    const r = (this.r >> 0).toString(16);\n    const g = (this.g >> 0).toString(16);\n    const b = (this.b >> 0).toString(16);\n    // Add leading zeros if the string for each component is just one character long\n    return `#${(r.length === 2 ? r : '0' + r)}${(g.length === 2 ? g : '0' + g)}${(b.length === 2 ? b : '0' + b)}`;\n  }\n}\n\n/**\n * A class of static functions that return some predefined colors\n */\nexport class DefaultColors {\n  static readonly deviationCorrect = () => Color.fromHex('#37b03b');\n  static readonly deviationClose = () => Color.fromHex('#b03737');\n  static readonly deviationFar = () => Color.fromHex('#4537b0');\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonComponent.html":{"url":"components/ComparisonComponent.html","title":"component - ComparisonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/comparison/comparison.component.ts\n\n\n    \n        Description\n    \n    \n        A component responsible for the user interface for the selection of words which are to be highlighted\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison\n            \n\n            \n                styleUrls\n                ./comparison.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarities\n                            \n                            \n                                entryHoverEvent\n                            \n                            \n                                hoveredWord\n                            \n                            \n                                scrollable\n                            \n                            \n                                selectedWords\n                            \n                            \n                                sortedWordPairsExact\n                            \n                            \n                                sortedWordPairsSoft\n                            \n                            \n                                wordPairs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkOverflow\n                            \n                            \n                                clearWordSelection\n                            \n                            \n                                generateExactPairs\n                            \n                            \n                                generateSoftPairs\n                            \n                            \n                                generateWordPairs\n                            \n                            \n                                handleEntryHover\n                            \n                            \n                                handleWordSelection\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                wordHovered\n                            \n                            \n                                wordsChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/sidenav/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService holding the corpus\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        wordHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:40\n                            \n                        \n                \n                    \n                        An event emitter that emits when the user hovers over a word\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wordsChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:36\n                            \n                        \n                \n                    \n                        An event emitter that emits when the word selection has been changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkOverflow\n                        \n                        \n                    \n                \n            \n            \n                \ncheckOverflow(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:148\n                \n            \n\n\n            \n                \n                    Checks whether a given HTML element is overflowing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HTML element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nclearWordSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:192\n                \n            \n\n\n            \n                \n                    Clears the selected words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateExactPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateExactPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:117\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsExact variable with just exact matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateSoftPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateSoftPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:132\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsSoft variable with just soft matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateWordPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateWordPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:105\n                \n            \n\n\n            \n                \n                    Generates the word pairs from the corpus in QueryService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleEntryHover\n                        \n                        \n                    \n                \n            \n            \n                \nhandleEntryHover(word: string, event: EntryHoverEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:202\n                \n            \n\n\n            \n                \n                    Handles when the user hovers over a word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that was hovered on\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                                EntryHoverEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event type, whether it was an entry or leave event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordSelection(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:158\n                \n            \n\n\n            \n                \n                    The event handler of when the word selection changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event holding which word was updated, whether it was checked or not and potentially its soft match\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentSimilarities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:69\n                            \n                        \n\n                \n                    \n                        The similarity between the two selected documents\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryHoverEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EntryHoverEvent\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                        A helper field, making it possible to use enum in the HTML template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:65\n                            \n                        \n\n                \n                    \n                        The currently hovered on word\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:61\n                            \n                        \n\n                \n                    \n                        Holds the information of if an HTML element is scrollable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds the selected words in a hierarchical structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsExact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:49\n                            \n                        \n\n                \n                    \n                        Holds the sorted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsSoft\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:53\n                            \n                        \n\n                \n                    \n                        Holds the sorted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wordPairs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:45\n                            \n                        \n\n                \n                    \n                        Holds the all matched word pairs and their associated weight\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges, EventEmitter, Output} from '@angular/core';\nimport {QueryService} from '../../../services/query.service';\nimport {SelectedDocument} from '../sidenav.component';\nimport * as queryUtils from '../../../utils/query.utils';\n\n/**\n * An enum, specifying the hover event type\n */\nexport enum EntryHoverEvent{\n  Enter, Leave\n}\n\n/**\n * A type, specifying the relation of two matched words\n */\nexport type WordMap = Map>;\n\n/**\n * A component responsible for the user interface for the selection of words which are to be highlighted\n */\n@Component({\n  selector: 'app-comparison',\n  templateUrl: './comparison.component.html',\n  styleUrls: ['./comparison.component.scss']\n})\nexport class ComparisonComponent implements OnInit, OnChanges {\n\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[];\n\n  /**\n   * An event emitter that emits when the word selection has been changed\n   */\n  @Output() wordsChanged = new EventEmitter();\n  /**\n   * An event emitter that emits when the user hovers over a word\n   */\n  @Output() wordHovered = new EventEmitter();\n\n  /**\n   * Holds the all matched word pairs and their associated weight\n   */\n  wordPairs: {[key: string]: number};\n  /**\n   * Holds the sorted exact matches\n   */\n  sortedWordPairsExact: any[];\n  /**\n   * Holds the sorted soft matches\n   */\n  sortedWordPairsSoft: any[];\n  /**\n   * Holds the selected words in a hierarchical structure\n   */\n  selectedWords: WordMap = new Map>();\n  /**\n   * Holds the information of if an HTML element is scrollable\n   */\n  scrollable: {[key: string]: boolean} = {};\n  /**\n   * The currently hovered on word\n   */\n  hoveredWord: string;\n  /**\n   * The similarity between the two selected documents\n   */\n  documentSimilarities: number;\n\n  /**\n   * A helper field, making it possible to use enum in the HTML template\n   */\n  entryHoverEvent = EntryHoverEvent;\n\n  /**\n   * @param queryService  The QueryService holding the corpus\n   */\n  constructor(private queryService: QueryService) {}\n\n  ngOnInit(): void {\n    // When the component becomes active and there are exactly two selected documents\n    if (this.selectedDocuments?.length === 2){\n      this.generateWordPairs();\n      const id1 = this.selectedDocuments[0].id;\n      const id2 = this.selectedDocuments[1].id;\n      this.documentSimilarities = this.queryService.getSoftCosineMeasure(id1, id2);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // When the user selects or deselects some documents\n    if (changes.selectedDocuments){\n      // If the new selection has only two documents selected\n      if (changes.selectedDocuments.currentValue.length === 2) {\n        this.generateWordPairs();\n      }\n      this.clearWordSelection();\n    }\n  }\n\n  /**\n   * Generates the word pairs from the corpus in QueryService\n   */\n  generateWordPairs(): void{\n    // Retrieve the word pairs from the corpus\n    this.wordPairs = this.queryService.getNormalizedWordImportancePairs(this.selectedDocuments[0].id, this.selectedDocuments[1].id);\n\n    // Extract the exact and soft pairs from them\n    this.generateExactPairs();\n    this.generateSoftPairs();\n  }\n\n  /**\n   * Populates the sortedWordPairsExact variable with just exact matches\n   */\n  generateExactPairs(): void{\n    // Extract the exact matches from all the word pairs\n    const exactPairs = queryUtils.getMostImportantExactMatches(this.wordPairs);\n    // Sort the array\n    const items = Object.keys(exactPairs).map((key) => {\n      return [key, exactPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    // Store the array\n    this.sortedWordPairsExact = items;\n  }\n\n  /**\n   * Populates the sortedWordPairsSoft variable with just soft matches\n   */\n  generateSoftPairs(): void{\n    // Extract the soft matches from all the word pairs\n    const softPairs = queryUtils.getMostImportantSoftMatches(this.wordPairs);\n    // Sort the array\n    const items = Object.keys(softPairs).map((key) => {\n      return [key, softPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    // Store the array\n    this.sortedWordPairsSoft = items;\n  }\n\n  /**\n   * Checks whether a given HTML element is overflowing\n   * @param element   The HTML element\n   */\n  checkOverflow(element: HTMLElement): void {\n    // Look, if the element is taller than the actual showed height and isn't scrolled all the way down\n    this.scrollable[element.id] = element.offsetHeight ([matchWord]));\n      }\n    }\n    // If the word was deselected\n    else {\n      // If there are more matched words to the parent word, we only remove the one matched word\n      if (entry?.size > 1){\n        entry.delete(matchWord);\n      }\n      // Otherwise we delete the entire parent from the map\n      else {\n        this.selectedWords.delete(e.word);\n      }\n    }\n    // Notify the parent\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Clears the selected words\n   */\n  clearWordSelection(): void{\n    this.selectedWords.clear();\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Handles when the user hovers over a word\n   * @param word  The word that was hovered on\n   * @param event The event type, whether it was an entry or leave event\n   */\n  handleEntryHover(word: string, event: EntryHoverEvent): void{\n    // Temporarily store the previously hovered word\n    const prevWord = this.hoveredWord;\n    // If the user started hovering a word, we store it\n    if (event === EntryHoverEvent.Enter){\n      this.hoveredWord = word;\n    }\n    // Otherwise, the user has left the word, if the word is the currently hovered word, we reset it.\n    else if (this.hoveredWord === word){\n      this.hoveredWord = undefined;\n    }\n    // If the hovered word has changed, we notify the parent\n    if (prevWord !== this.hoveredWord){\n      this.wordHovered.emit(this.hoveredWord);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Exact matches\n    \n      \n        \n      \n      No hard matches\n    \n    \n  \n  \n    Soft matches\n    \n      \n        \n      \n      No soft matches\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./comparison.component.scss\n                \n                .comparison-wrapper{\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  padding-top: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 100%;\n  .matches-exact, .matches-soft{\n    width: 50%;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    h2{\n      margin: 0 1em 0.5em 1em;\n    }\n  }\n  .comparison-matches {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow: auto;\n    padding: 0 1em;\n    position: relative;\n\n    ::ng-deep {\n      app-comparison-entry {\n        border-radius: 5px;\n        padding: 0 1em;\n        margin-bottom: 1px;\n        &:nth-child(odd){\n          background-color: #fafafa;\n        }\n        &:nth-child(even){\n          background-color: #eeeeee;\n        }\n\n        .mat-checkbox-layout .mat-checkbox-label{\n          overflow: hidden;\n          text-overflow: ellipsis;\n          width: 100px;\n          line-height: 1.4;\n        }\n      }\n    }\n  }\n\n  .matches-fade{\n    position: absolute;\n    bottom: 0;\n    left: 1em;\n    right: 2em;\n    height: 1px;\n    background: #fff;\n    box-shadow: 0 -4px 15px 12px #fff;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Exact matches                              No hard matches                Soft matches                              No soft matches          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonEntryComponent.html":{"url":"components/ComparisonEntryComponent.html","title":"component - ComparisonEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts\n\n\n    \n        Description\n    \n    \n        The individual word entry, containing the UI and logic for one word\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison-entry\n            \n\n            \n                styleUrls\n                ./comparison-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBarWidth\n                            \n                            \n                                handleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarity\n                            \n                            \n                                softMatch\n                            \n                            \n                                weight\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentSimilarity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:25\n                            \n                        \n                \n                    \n                        The total cosine similarity of the two compared documents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        softMatch\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:29\n                            \n                        \n                \n                    \n                        The soft match this word has\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:21\n                            \n                        \n                \n                    \n                        The weight of the current word match in the document comparison\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        word\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:17\n                            \n                        \n                \n                    \n                        The word this entry is bound to\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:34\n                            \n                        \n                \n                    \n                        The event emitter, emitting when the user has selected this word\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBarWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetBarWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:39\n                \n            \n\n\n            \n                \n                    Calculates the bar width percentage\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleChange(e: MatCheckboxChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:47\n                \n            \n\n\n            \n                \n                    An event handler, handling when the checkmark is checked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The checkbox event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\n\n/**\n * The individual word entry, containing the UI and logic for one word\n */\n@Component({\n  selector: 'app-comparison-entry',\n  templateUrl: './comparison-entry.component.html',\n  styleUrls: ['./comparison-entry.component.scss']\n})\nexport class ComparisonEntryComponent {\n\n  /**\n   * The word this entry is bound to\n   */\n  @Input() word: string;\n  /**\n   * The weight of the current word match in the document comparison\n   */\n  @Input() weight: number;\n  /**\n   * The total cosine similarity of the two compared documents\n   */\n  @Input() documentSimilarity: number;\n  /**\n   * The soft match this word has\n   */\n  @Input() softMatch: string;\n\n  /**\n   * The event emitter, emitting when the user has selected this word\n   */\n  @Output() selectedChange = new EventEmitter();\n\n  /**\n   * Calculates the bar width percentage\n   */\n  getBarWidth(): number{\n    return this.weight / this.documentSimilarity;\n  }\n\n  /**\n   * An event handler, handling when the checkmark is checked\n   * @param e The checkbox event\n   */\n  handleChange(e: MatCheckboxChange): void{\n    this.selectedChange.emit({ word: this.word, checked: e.checked, softMatch: this.softMatch});\n  }\n}\n\n    \n\n    \n        \n  {{word}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n\n  {{word}}{{softMatch}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n    \n\n    \n                \n                    ./comparison-entry.component.scss\n                \n                @import \"../../../../../variables\";\n\n.comparison-entry{\n  padding: 0.25em 0;\n  display: flex;\n  align-items: center;\n  justify-content: stretch;\n}\n\n.word-wrapper{\n  flex-shrink: 0;\n  width: 120px;\n  margin-right: 1em;\n}\n\n.bar-wrapper{\n  flex-grow: 1;\n  width: 100%;\n  height: 1em;\n  margin-right: 3em;\n}\n\n.bar{\n  height: 100%;\n  background: map-get($color, primary);\n  border-radius: 2px;\n  position: relative;\n\n  span{\n    color: rgba(0, 0, 0, 0.7);\n    position: absolute;\n    right: -4em;\n    line-height: 1em;\n    font-size: 0.9em;\n    top: calc(50% - 0.4em);\n    display: block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{word}}  {{getBarWidth() | percent:\\'.2\\'}}  {{word}}{{softMatch}}  {{getBarWidth() | percent:\\'.2\\'}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Corpus.html":{"url":"interfaces/Corpus.html","title":"interface - Corpus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Corpus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                The main corpus interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        results\n                                \n                                \n                                        texts\n                                \n                                \n                                        texts_bow\n                                \n                                \n                                        version\n                                \n                                \n                                        word_similarities\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The map, binding word ids to their actual meaning \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing individual queries and their top results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                    \n                                \n                                \n                                    \n                                        texts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The texts of the document, consisting of an array of word ids \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts_bow\n                                    \n                                \n                                \n                                    \n                                        texts_bow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bag of words representation of the document's texts \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of the corpus \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        word_similarities\n                                    \n                                \n                                \n                                    \n                                        word_similarities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The map, containing the cosine similarities between two words \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // Return the found similarity if there is an entry for them.\n  return corpus.word_similarities?.[id1]?.[id2] ?? 0.0;\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CorpusLoadedGuard.html":{"url":"guards/CorpusLoadedGuard.html","title":"guard - CorpusLoadedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CorpusLoadedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/corpus-loaded-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents a route from happening unless a corpus is loaded within the QueryService\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/corpus-loaded-guard.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The query service where the corpus is located\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router used for navigating to homepage if document is not loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/corpus-loaded-guard.service.ts:26\n                \n            \n\n\n            \n                \n                    Returns an observable that returns a boolean whether a corpus is present in the QueryService\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {QueryService} from '../services/query.service';\nimport {map} from 'rxjs/operators';\n\n/**\n * Prevents a route from happening unless a corpus is loaded within the QueryService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CorpusLoadedGuard implements CanActivate {\n  /**\n   * @param queryService  The query service where the corpus is located\n   * @param router        The router used for navigating to homepage if document is not loaded\n   */\n  constructor(\n    private queryService: QueryService,\n    private router: Router\n  ) {}\n\n  /**\n   * Returns an observable that returns a boolean whether a corpus is present in the QueryService\n   */\n  canActivate(): Observable {\n    return this.queryService.currentCorpus\n      .pipe(map((corpus) => {\n        if (corpus !== undefined){\n          return true;\n        }\n        this.router.navigate(['']);\n        return false;\n      }));\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultColors.html":{"url":"classes/DefaultColors.html","title":"class - DefaultColors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultColors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/graph.utils.ts\n        \n\n            \n                Description\n            \n            \n                A class of static functions that return some predefined colors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                deviationClose\n                            \n                            \n                                    Static\n                                    Readonly\n                                deviationCorrect\n                            \n                            \n                                    Static\n                                    Readonly\n                                deviationFar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deviationClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/graph.utils.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deviationCorrect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/graph.utils.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deviationFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/graph.utils.ts:130\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export function normalizeDeviation(value: number, stiffness: number = 1): number{\n  return ((1 + value / (1 + Math.abs(value * stiffness))) - 1)  * stiffness;\n}\n\n/**\n * Returns the base 2 logarithm of a number\n * @param n The number to return the logarithm of\n */\nexport function log2(n: number): number{\n  return Math.log2(n);\n}\n\n/**\n * Returns the 2 to the power of the specified number\n * @param n The number to return the 2 to the power of\n */\nexport function pow2(n: number): number{\n  return Math.pow(2, n);\n}\n\n/**\n * A helper color class, containing color mixing functions\n */\nexport class Color {\n  constructor(protected r: number, protected g: number, protected b: number) {}\n\n  static fromHex(hexCode: string): Color{\n    // A RegEx that validates the passed in string and separates the R, G and B values\n    const conversionRe = new RegExp(/^#?([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})$/);\n    const matches = hexCode.match(conversionRe);\n    // If the string didn't match the RegEx, deny\n    if (!matches){\n      return undefined;\n    }\n    // Convert the individual components from hexadecimal strings to integers\n    const r = parseInt(matches[1], 16);\n    const g = parseInt(matches[2], 16);\n    const b = parseInt(matches[3], 16);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A naive way of color mixing, not taking color compression in mind\n   * @param other     The other color to be mixed with\n   * @param gradient  The gradient percentage between the two colors\n   */\n  mix(other: Color, gradient: number): Color {\n    // Add each component by adding a part of it, based on the gradient\n    const r = this.r * (1 - gradient) + other.r * (gradient);\n    const g = this.g * (1 - gradient) + other.g * (gradient);\n    const b = this.b * (1 - gradient) + other.b * (gradient);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A function that converts the color from normal color space to sRGB\n   */\n  protected inverseSrgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from the normal color space to the sRGB color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A function that converts the sRGB color value back to normal color space\n   */\n  protected srgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from sRGB color space to normal color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.0031308) ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;\n    g = (g > 0.0031308) ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;\n    b = (b > 0.0031308) ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A color mix of two colors using the sRGB method\n   * @param other     The other color to be mixed\n   * @param gradient  The gradient percentage between the two colors\n   */\n  colorSrgbGradient(other: Color, gradient: number): Color {\n    // First convert to sRGB\n    const c1 = this.inverseSrgbCompounding();\n    const c2 = other.inverseSrgbCompounding();\n\n    // Then mix and convert back to normal color space\n    return c1.mix(c2, gradient).srgbCompounding();\n  }\n\n  /**\n   * Converts a color interface to a hex code string\n   */\n  toHex(): string{\n    // Convert the components to hexadecimal strings\n    const r = (this.r >> 0).toString(16);\n    const g = (this.g >> 0).toString(16);\n    const b = (this.b >> 0).toString(16);\n    // Add leading zeros if the string for each component is just one character long\n    return `#${(r.length === 2 ? r : '0' + r)}${(g.length === 2 ? g : '0' + g)}${(b.length === 2 ? b : '0' + b)}`;\n  }\n}\n\n/**\n * A class of static functions that return some predefined colors\n */\nexport class DefaultColors {\n  static readonly deviationCorrect = () => Color.fromHex('#37b03b');\n  static readonly deviationClose = () => Color.fromHex('#b03737');\n  static readonly deviationFar = () => Color.fromHex('#4537b0');\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentComponent.html":{"url":"components/DocumentComponent.html","title":"component - DocumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document.component.ts\n\n\n    \n        Description\n    \n    \n        The displayed document component, showing the documents text\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document\n            \n\n            \n                styleUrls\n                ./document.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                documentIndex\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        document\n                    \n                \n                \n                    \n                        Type :         SelectedDocument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:18\n                            \n                        \n                \n                    \n                        The bound displayed document to this component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        documentIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:38\n                            \n                        \n                \n                    \n                        The index in the array of selected documents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:22\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     [Set, Set]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:30\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:34\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {SelectedDocument} from '../sidenav.component';\nimport {WordMap} from '../comparison/comparison.component';\n\n/**\n * The displayed document component, showing the documents text\n */\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent {\n\n  /**\n   * The bound displayed document to this component\n   */\n  @Input() document: SelectedDocument;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: [Set, Set];\n  /**\n   * The current WordMap containing the relations of matches\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n  /**\n   * The index in the array of selected documents\n   */\n  @Input() documentIndex: number;\n\n}\n\n    \n\n    \n        \n  \n    {{document.title}}\n    {{document.subtitle}}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./document.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{document.title}}    {{document.subtitle}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentContentComponent.html":{"url":"components/DocumentContentComponent.html","title":"component - DocumentContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document-content/document-content.component.ts\n\n\n    \n        Description\n    \n    \n        The content of a document, showing the actual text of the document and the highlights\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-content\n            \n\n            \n                styleUrls\n                ./document-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                convertedContent\n                            \n                            \n                                    Public\n                                escapeHtml\n                            \n                            \n                                    Public\n                                splitUpPipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedContent\n                            \n                            \n                                getReversedWordMap\n                            \n                            \n                                getWordType\n                            \n                            \n                                isWordLowlighted\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                documentIndex\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(escapeHtml: EscapeHtmlPipe, splitUpPipe: SplitUpPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        escapeHtml\n                                                  \n                                                        \n                                                                    EscapeHtmlPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pipe, responsible for converting text to HTML safe text\n\n                                                        \n                                                \n                                                \n                                                        splitUpPipe\n                                                  \n                                                        \n                                                                    SplitUpPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A pipe, splitting up the pairs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:22\n                            \n                        \n                \n                    \n                        The text of the document\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        documentIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:42\n                            \n                        \n                \n                    \n                        The index in the array of selected documents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     [Set, Set]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:30\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:34\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matched words\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:38\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:117\n                \n            \n\n\n            \n                \n                    Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReversedWordMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetReversedWordMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:72\n                \n            \n\n\n            \n                \n                    Gets the reversed WordMap, mapping child words to their parent words\n\n\n                    \n                        Returns :         WordMap\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordType\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordType(word: string, reversedWordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:146\n                \n            \n\n\n            \n                \n                    Determines, whether the given word is an exact match, soft match or both\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word we wish to find out the type of\n\n                                    \n                                \n                                \n                                    reversedWordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reversed word map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isWordLowlighted\n                        \n                        \n                    \n                \n            \n            \n                \nisWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:98\n                \n            \n\n\n            \n                \n                    Determines whether a word should be marked as lowlighted, making it less visible in the document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that's being evaluated\n\n                                    \n                                \n                                \n                                    hoveredWord\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The currently hovered on word\n\n                                    \n                                \n                                \n                                    words\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The set, containing all the matched words\n\n                                    \n                                \n                                \n                                    reversedWordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reversed WordMap\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertedContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:47\n                            \n                        \n\n                \n                    \n                        The HTML safe content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            escapeHtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EscapeHtmlPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:54\n                            \n                        \n\n                \n                    \n                        The pipe, responsible for converting text to HTML safe text\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splitUpPipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SplitUpPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:55\n                            \n                        \n\n                \n                    \n                        A pipe, splitting up the pairs\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {EscapeHtmlPipe} from '../../../../pipes/escape-html.pipe';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport {WordMap} from '../../comparison/comparison.component';\nimport {pairSeparator, valueChanged} from '../../../../utils/various.utils';\nimport {SplitUpPipe} from '../../../../pipes/pair-split.pipe';\n\n/**\n * The content of a document, showing the actual text of the document and the highlights\n */\n@Component({\n  selector: 'app-document-content',\n  templateUrl: './document-content.component.html',\n  styleUrls: ['./document-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocumentContentComponent implements OnInit, OnChanges {\n\n  /**\n   * The text of the document\n   */\n  @Input() content: string;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: [Set, Set];\n  /**\n   * The current WordMap containing the relations of matched words\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n  /**\n   * The index in the array of selected documents\n   */\n  @Input() documentIndex: number;\n\n  /**\n   * The HTML safe content\n   */\n  convertedContent: string;\n\n  /**\n   * @param escapeHtml  The pipe, responsible for converting text to HTML safe text\n   * @param splitUpPipe A pipe, splitting up the pairs\n   */\n  constructor(\n    public escapeHtml: EscapeHtmlPipe,\n    public splitUpPipe: SplitUpPipe\n  ) { }\n\n  ngOnInit(): void {\n    this.convertedContent = this.getFormattedContent();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // If the highlighted word changes, format the content again\n    if (valueChanged(changes?.highlightedWords)){\n      this.convertedContent = this.getFormattedContent();\n    }\n  }\n\n  /**\n   * Gets the reversed WordMap, mapping child words to their parent words\n   */\n  getReversedWordMap(): WordMap{\n    const entries = this.highlightedWordMap.entries();\n    const out = new Map>();\n    // Go over the parent and all children\n    for (const [parent, set] of entries){\n      for (const match of set){\n        // If the reverse map already has the child as a key\n        if (out.has(match)){\n          // Add the parent to the set\n          out.get(match).add(parent);\n        } else {\n          // Create an entry for the child and parent\n          out.set(match, new Set([parent]));\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * Determines whether a word should be marked as lowlighted, making it less visible in the document\n   * @param word              The word that's being evaluated\n   * @param hoveredWord       The currently hovered on word\n   * @param words             The set, containing all the matched words\n   * @param reversedWordMap   The reversed WordMap\n   */\n  isWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap): boolean {\n    // If there is no hovered word, then no words should be low-lighted\n    if (!hoveredWord){\n      return false;\n    }\n    // If the hovered word is a soft match (contains a pair separator)\n    if (hoveredWord.includes(pairSeparator)){\n      // Split the pair up\n      const split = this.splitUpPipe.transform(hoveredWord);\n      // See if one of the words in the pair is selected and neither of the words is the one being evaluated\n      return (words.has(split[this.documentIndex])) && !(word === split[this.documentIndex]);\n    }\n    // If the hovered word is an exact match, see if the hovered word is selected and is not the one being evaluated\n    return words.has(hoveredWord) && !(hoveredWord === word || reversedWordMap.get(word)?.has(hoveredWord));\n  }\n\n  /**\n   * Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n   */\n  getFormattedContent(): string{\n    // Get the soft matches for this document\n    const currentDocumentSofts = this.highlightedSoftMatches[this.documentIndex];\n    // Merge the exact and soft matches sets\n    const allWords = new Set([...currentDocumentSofts, ...this.highlightedExactMatches]);\n    // Escape the potential intrusive HTML characters\n    let content = this.escapeHtml.transform(this.content);\n    const reversedWordMap = this.getReversedWordMap();\n    // Go over all the selected words\n    for (const word of allWords){\n      // Escape the evaluated word for more unsafe HTML characters\n      const escapedWord = this.escapeHtml.transform(word);\n      // Create a new RegEx, that matches all the looked for words, that have no characters before and after\n      const re = new RegExp(`(?${escapedWord}`);\n    }\n    return content;\n  }\n\n  /**\n   * Determines, whether the given word is an exact match, soft match or both\n   * @param word              The word we wish to find out the type of\n   * @param reversedWordMap   The reversed word map\n   */\n  getWordType(word: string, reversedWordMap: WordMap): string{\n    // See if the word is in the word map and if it contains itself as a child\n    if (this.highlightedWordMap.has(word) && this.highlightedWordMap.get(word).has(word)){\n      // If the word map has only itself as a child and no other word has it as its child, then its an exact match, otherwise its both\n      const both = this.highlightedWordMap.get(word).size > 1 || reversedWordMap.get(word).size > 1;\n      return both ? 'both' : 'exact';\n    }\n    // Otherwise it's a soft match\n    return 'soft';\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./document-content.component.scss\n                \n                @import '../../../../../variables';\n\n$highlight: map-get($color, secondary);\n$soft-highlight: map-get($color, tertiary);\n$lowlight: map-get($color, lowlight);\n\np{\n  $hovered-word: attr(data-hovered);\n  font-style: italic;\n  word-spacing: 2px;\n  line-height: 1.65;\n\n  ::ng-deep .highlight{\n    background-color: $highlight;\n    box-shadow: -2px 0px 2px 0px $highlight, 2px 0px 2px 0px $highlight;\n  }\n\n  ::ng-deep .lowlight{\n    background-color: $lowlight;\n    box-shadow: -2px 0px 2px 0px $lowlight, 2px 0px 2px 0px $lowlight;\n  }\n\n  ::ng-deep .highlight.soft{\n    background-color: $soft-highlight;\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n\n  ::ng-deep .highlight.both{\n    background: linear-gradient(165deg, $soft-highlight 0%, $soft-highlight 45%, $highlight 55%, $highlight 50%);\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $highlight;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/escape-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe that escapes the HTML special characters\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        escapeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/escape-html.pipe.ts:14\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be transformed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * A pipe that escapes the HTML special characters\n */\n@Pipe({\n  name: 'escapeHtml'\n})\nexport class EscapeHtmlPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param text  The text to be transformed\n   */\n  transform(text: string): string {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(//g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        links\n                                \n                                \n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         GraphLink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphLink[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The links of the nodes, holding info about the similarities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         GraphNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphNode[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The nodes to be displayed on the graph \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // Return the found similarity if there is an entry for them.\n  return corpus.word_similarities?.[id1]?.[id2] ?? 0.0;\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphLink.html":{"url":"interfaces/GraphLink.html","title":"interface - GraphLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first node's id in the relationship \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The second node's id in the relationship \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cosine measure between the two documents \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // Return the found similarity if there is an entry for them.\n  return corpus.word_similarities?.[id1]?.[id2] ?? 0.0;\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphNode.html":{"url":"interfaces/GraphNode.html","title":"interface - GraphNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fx\n                                \n                                \n                                            Optional\n                                        fy\n                                \n                                \n                                        group\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                            Optional\n                                        vx\n                                \n                                \n                                            Optional\n                                        vy\n                                \n                                \n                                            Optional\n                                        x\n                                \n                                \n                                            Optional\n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fx\n                                    \n                                \n                                \n                                    \n                                        fx:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fy\n                                    \n                                \n                                \n                                    \n                                        fy:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The group this node belongs to (document, query, ...) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the document, bound to this node \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vx\n                                    \n                                \n                                \n                                    \n                                        vx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vy\n                                    \n                                \n                                \n                                    \n                                        vy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // Return the found similarity if there is an entry for them.\n  return corpus.word_similarities?.[id1]?.[id2] ?? 0.0;\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nUserInterfaceComponent\n\nUserInterfaceComponent\n\nHomeModule -->\n\nUserInterfaceComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ComparisonComponent\n                        \n                        \n                            ComparisonEntryComponent\n                        \n                        \n                            DocumentComponent\n                        \n                        \n                            DocumentContentComponent\n                        \n                        \n                            GraphComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            UserInterfaceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HomeRoutes } from './home.routes';\nimport { GraphComponent } from './graph/graph.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { ComparisonComponent } from './sidenav/comparison/comparison.component';\nimport { ComparisonEntryComponent } from './sidenav/comparison/comparison-entry/comparison-entry.component';\nimport { SettingsComponent } from './user-interface/settings/settings.component';\nimport {AngularResizedEventModule} from 'angular-resize-event';\nimport { DocumentComponent } from './sidenav/document/document.component';\nimport { DocumentContentComponent } from './sidenav/document/document-content/document-content.component';\nimport {PipesModule} from '../pipes/pipes.module';\nimport { UserInterfaceComponent } from './user-interface/user-interface.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    GraphComponent,\n    SidenavComponent,\n    ComparisonComponent,\n    ComparisonEntryComponent,\n    SettingsComponent,\n    DocumentComponent,\n    DocumentContentComponent,\n    UserInterfaceComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularResizedEventModule,\n    PipesModule,\n    HomeRoutes\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutes.html":{"url":"modules/HomeRoutes.html","title":"module - HomeRoutes","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class HomeRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InitComponent.html":{"url":"components/InitComponent.html","title":"component - InitComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InitComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/init/init.component.ts\n\n\n    \n        Description\n    \n    \n        The initial welcoming component of the application, asking for the corpus to be inserted\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-init\n            \n\n            \n                styleUrls\n                ./init.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./init.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                insertedText\n                            \n                            \n                                insertingText\n                            \n                            \n                                jsonFile\n                            \n                            \n                                jsonTextarea\n                            \n                            \n                                validating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                            \n                                handleFileUpload\n                            \n                            \n                                handleTextUpload\n                            \n                            \n                                loadExample\n                            \n                            \n                                setQuery\n                            \n                            \n                                validateAndParse\n                            \n                            \n                                validateText\n                            \n                            \n                                validateUploadedFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, jsonValidateService: JsonValidateService, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService used to store the corpus once loaded\n\n                                                        \n                                                \n                                                \n                                                        jsonValidateService\n                                                  \n                                                        \n                                                                        JsonValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The validation service used to validate the inserted file/text\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar, showing error messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router responsible for the navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayError\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayError(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:94\n                \n            \n\n\n            \n                \n                    A function displaying an error message in the snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFileUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFileUpload(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:71\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating the inserted file and sending it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTextUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTextUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:56\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating and setting the inserted text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadExample\n                        \n                        \n                    \n                \n            \n            \n                \nloadExample()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:172\n                \n            \n\n\n            \n                \n                    Loads the example document\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsetQuery(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:162\n                \n            \n\n\n            \n                \n                    Sets the processed corpus to QueryService\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus that will be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAndParse\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAndParse(text: string, resolve: any, reject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:138\n                \n            \n\n\n            \n                \n                    The validation and parsing wrapper of a given text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be validated\n\n                                    \n                                \n                                \n                                    resolve\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if successful\n\n                                    \n                                \n                                \n                                    reject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if unsuccessful\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateText\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:112\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted text\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateUploadedFile\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateUploadedFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:121\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted file\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertedText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:25\n                            \n                        \n\n                \n                    \n                        A value, holding the inserted text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertingText\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:21\n                            \n                        \n\n                \n                    \n                        A flag, saying whether has selected to enter JSON as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:29\n                            \n                        \n\n                \n                    \n                        The file inserted in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonTextarea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTextAreaElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('jsonTextarea')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                        The reference to the textarea when inserting the corpus as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:33\n                            \n                        \n\n                \n                    \n                        A flag, specifying whether the validation service is currently validating the file/text\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {JsonValidateService} from '../services/json-validate.service';\nimport {QueryService} from '../services/query.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as exampleDocument from '../../assets/example.json';\nimport {Router} from '@angular/router';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The initial welcoming component of the application, asking for the corpus to be inserted\n */\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.component.html',\n  styleUrls: ['./init.component.scss']\n})\nexport class InitComponent {\n  /**\n   * A flag, saying whether has selected to enter JSON as text\n   */\n  insertingText = false;\n  /**\n   * A value, holding the inserted text\n   */\n  insertedText: string;\n  /**\n   * The file inserted in\n   */\n  jsonFile: File;\n  /**\n   * A flag, specifying whether the validation service is currently validating the file/text\n   */\n  validating: boolean;\n\n  /**\n   * The reference to the textarea when inserting the corpus as text\n   */\n  @ViewChild('jsonTextarea') jsonTextarea: HTMLTextAreaElement;\n\n  /**\n   * @param queryService          The QueryService used to store the corpus once loaded\n   * @param jsonValidateService   The validation service used to validate the inserted file/text\n   * @param snackBar              The snackbar, showing error messages\n   * @param router                The router responsible for the navigation\n   */\n  constructor(\n    private queryService: QueryService,\n    private jsonValidateService: JsonValidateService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * The event handler function responsible for validating and setting the inserted text\n   */\n  handleTextUpload(): void{\n    this.validating = true;\n    // Validate the text and then set outputted corpus to the query service\n    this.validateText().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * The event handler function responsible for validating the inserted file and sending it\n   * @param e The input change event\n   */\n  handleFileUpload(e: any): void{\n    this.validating = true;\n\n    // If there is one valid file\n    const files = e?.target?.files;\n    if (files?.length !== 1) {\n      return;\n    }\n    this.jsonFile = files[0];\n\n    // Validate the file and then set the outputted corpus to the query service\n    this.validateUploadedFile().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * A function displaying an error message in the snackbar\n   * @param msg The message to be displayed\n   */\n  displayError(msg: string): void{\n    // Remove the file\n    this.jsonFile = undefined;\n    this.validating = false;\n    // Show the snackbar message\n    this.snackBar.open(\n      msg,\n      '',\n      {\n        panelClass: ['red-snackbar'],\n        duration: 5000\n      }\n    );\n  }\n\n  /**\n   * A promise responsible for validating the inserted text\n   */\n  validateText(): Promise{\n    return new Promise((resolve, reject) => {\n      this.validateAndParse(this.insertedText, resolve, reject);\n    });\n  }\n\n  /**\n   * A promise responsible for validating the inserted file\n   */\n  validateUploadedFile(): Promise{\n   return new Promise((resolve, reject) => {\n      // Read the passed in file and validate it when ready\n      const fileReader = new FileReader();\n      fileReader.readAsBinaryString(this.jsonFile);\n      fileReader.onloadend = () => {\n        this.validateAndParse(fileReader.result as string, resolve, reject);\n      };\n    });\n  }\n\n  /**\n   * The validation and parsing wrapper of a given text\n   * @param text    The text to be validated\n   * @param resolve The function to be called if successful\n   * @param reject  The function to be called if unsuccessful\n   */\n  validateAndParse(text: string, resolve: any, reject: any): void{\n    // If any text was passed in\n    if (text) {\n      try{\n        // Parse the text to JSON\n        const parsed = JSON.parse(text);\n        // Validate the parsed JSON according to a scheme\n        if (this.jsonValidateService.validateCorpus(parsed)){\n          resolve(parsed);\n        } else {\n          reject();\n        }\n      } catch (e) {\n        reject(e);\n      }\n    } else {\n      reject();\n    }\n  }\n\n  /**\n   * Sets the processed corpus to QueryService\n   * @param corpus  The corpus that will be set\n   */\n  setQuery(corpus: Corpus): void{\n    // Set the corpus to the query service\n    this.queryService.setCorpus(corpus);\n    // Reroute to the map screen\n    this.router.navigate(['/map']);\n  }\n\n  /**\n   * Loads the example document\n   */\n  loadExample(): void{\n    this.setQuery((exampleDocument as any).default);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Document maps\n      visualization tool for semantic document representations\n      \n        This tool will allow you to explore the similarities of a data set of documents/texts,\n        showing you why documents are similar, what words they have in common and what's their respective weights\n      \n      \n        You can either import a valid JSON file containing the corpus data or enter the JSON by hand.\n        If you just wish to explore the tool, you can use the attached example corpus.\n      \n      \n        This tool is open-source and the source code is available on GitHub.\n        If you wish to read the documentation of this tool it is available here.\n      \n    \n    \n      file_uploadInsert corpus as file\n      wysiwygInsert corpus as JSON text\n    \n    \n      OR\n      description&nbsp;Use the example corpus\n    \n    \n      \n        arrow_backBack\n      \n      \n        Insert JSON\n        \n      \n      \n        file_uploadUpload\n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./init.component.scss\n                \n                .init-wrapper{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"../../../src/assets/background.jpg\");\n  background-position: center center;\n  background-size: cover;\n  width: 100%;\n  height: 100%;\n\n  .init-content{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 600px;\n    background: #fff;\n    border-radius: 5px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n    padding: 2em;\n    position: relative;\n    overflow: hidden;\n\n    .init-preface{\n      h1{\n        margin-bottom: 0;\n      }\n      padding-bottom: 1em;\n    }\n\n    .init-buttons{\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n      align-items: center;\n\n      button{\n        width: calc(50% - 0.5em);\n        height: 10em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        ::ng-deep .mat-button-wrapper {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n\n          >span{\n            display: block;\n          }\n        }\n\n        mat-icon{\n          $size: 96px;\n          font-size: $size;\n          height: $size;\n          width: $size;\n          line-height: $size;\n        }\n      }\n    }\n\n    .init-example{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n\n      .separator{\n        margin: 1em 0;\n      }\n    }\n\n    .loading{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      z-index: 1;\n      background-color: rgba(0, 0, 0, 0.25);\n      width: 100%;\n      height: 100%;\n\n      ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {\n        stroke: #fff;\n      }\n    }\n\n    .init-insert-text{\n      position: relative;\n      width: 100%;\n      min-height: 140px;\n\n      .navigate-back{\n        position: absolute;\n        top: -1em;\n        left: -1em;\n      }\n\n      .json-form{\n        width: 100%;\n        min-height: 140px;\n        margin-top: 24px;\n\n        textarea{\n          height: 393px;\n          max-height: calc(100vh - 12em);\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document maps      visualization tool for semantic document representations              This tool will allow you to explore the similarities of a data set of documents/texts,        showing you why documents are similar, what words they have in common and what\\'s their respective weights                    You can either import a valid JSON file containing the corpus data or enter the JSON by hand.        If you just wish to explore the tool, you can use the attached example corpus.                    This tool is open-source and the source code is available on GitHub.        If you wish to read the documentation of this tool it is available here.                    file_uploadInsert corpus as file      wysiwygInsert corpus as JSON text              OR      description Use the example corpus                      arrow_backBack                    Insert JSON                            file_uploadUpload                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InitComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitModule.html":{"url":"modules/InitModule.html","title":"module - InitModule","body":"\n                   \n\n\n\n\n    Modules\n    InitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\n\nInitComponent\n\nInitComponent\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InitComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InitRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InitComponent } from './init.component';\nimport {InitRoutes} from './init.routes';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    InitComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    InitRoutes,\n    FormsModule,\n  ]\n})\nexport class InitModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitRoutes.html":{"url":"modules/InitRoutes.html","title":"module - InitRoutes","body":"\n                   \n\n\n\n\n    Modules\n    InitRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {InitComponent} from './init.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InitComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class InitRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonValidateService.html":{"url":"injectables/JsonValidateService.html","title":"injectable - JsonValidateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonValidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-validate.service.ts\n        \n\n            \n                Description\n            \n            \n                The validation service, validating a parsed JSON file\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCorpus(corpus: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/json-validate.service.ts:87\n                \n            \n\n\n            \n                \n                    The validation function of a corpus\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Ajv, {JSONSchemaType} from 'ajv';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The schema used to validate the parsed JSON\n */\n// @ts-ignore\nconst searchQuerySchema: JSONSchemaType = {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n};\n\n/**\n * The validation service, validating a parsed JSON file\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonValidateService {\n  /**\n   * The validation function of a corpus\n   * @param corpus  The corpus to be validated\n   */\n  validateCorpus(corpus: {}): boolean {\n    // Create a validator instance\n    const ajv = new Ajv();\n    const validate = ajv.compile(searchQuerySchema);\n    try{\n      // See if the passed in object is a valid corpus\n      return validate(corpus);\n    } catch (e) {\n      return false;\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n            \n                Description\n            \n            \n                The service, responsible for passing the progress of long function to other components\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                isLoadingSource\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                    Private\n                                loadingProgressSource\n                            \n                            \n                                loadingStage\n                            \n                            \n                                    Private\n                                loadingStageSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsLoading\n                            \n                            \n                                setLoadingProgress\n                            \n                            \n                                setLoadingStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:46\n                \n            \n\n\n            \n                \n                    A setter for the isLoading value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingProgress\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingProgress(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:54\n                \n            \n\n\n            \n                \n                    A setter for the loadingProgress value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingStage\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingStage(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:62\n                \n            \n\n\n            \n                \n                    A setter for the loadingStage value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.isLoadingSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:20\n                            \n                        \n\n                \n                    \n                        The observable generated from isLoadingSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isLoadingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:16\n                            \n                        \n\n                \n                    \n                        The subject which stores the value, if something is currently loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingProgressSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:30\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingProgressSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingProgressSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:26\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current progress percentage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingStageSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:40\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingStageSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingStageSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:36\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current loading stage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * The service, responsible for passing the progress of long function to other components\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  /**\n   * The subject which stores the value, if something is currently loading\n   * @private\n   */\n  private isLoadingSource = new BehaviorSubject(false);\n  /**\n   * The observable generated from isLoadingSource\n   */\n  isLoading = this.isLoadingSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current progress percentage\n   * @private\n   */\n  private loadingProgressSource = new BehaviorSubject(0);\n  /**\n   * The observable generated from loadingProgressSource\n   */\n  loadingProgress = this.loadingProgressSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current loading stage\n   * @private\n   */\n  private loadingStageSource = new BehaviorSubject('');\n  /**\n   * The observable generated from loadingStageSource\n   */\n  loadingStage = this.loadingStageSource.asObservable();\n\n  /**\n   * A setter for the isLoading value\n   * @param value The value to be set\n   */\n  setIsLoading(value: boolean): void{\n    this.isLoadingSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingProgress value\n   * @param value The value to be set\n   */\n  setLoadingProgress(value: number): void{\n    this.loadingProgressSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingStage value\n   * @param value The value to be set\n   */\n  setLoadingStage(value: string): void{\n    this.loadingStageSource.next(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipsModule} from '@angular/material/chips';\n\nconst modules = [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [...modules],\n  exports: [...modules]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitFirstPipe.html":{"url":"pipes/PairSplitFirstPipe.html","title":"pipe - PairSplitFirstPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitFirstPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the first one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        first\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:16\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitSecondPipe.html":{"url":"pipes/PairSplitSecondPipe.html","title":"pipe - PairSplitSecondPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitSecondPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the second one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        second\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:33\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairUpPipe.html":{"url":"pipes/PairUpPipe.html","title":"pipe - PairUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that pairs up two values using a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pairUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(str1: string, str2: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:51\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    str1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The first string to be paired up\n\n                                    \n                                \n                                \n                                    str2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The second string to be paired up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator put between the two strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EscapeHtmlPipe } from './escape-html.pipe';\nimport {PairSplitFirstPipe, PairSplitSecondPipe, PairUpPipe, SplitUpPipe} from './pair-split.pipe';\n\n\n@NgModule({\n  declarations: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  exports: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  providers: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/query.service.ts\n        \n\n            \n                Description\n            \n            \n                The query service, responsible for querying on and operating with the corpus while also the corpus itself\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                corpusSource\n                            \n                            \n                                currentCorpus\n                            \n                            \n                                    Readonly\n                                worker\n                            \n                            \n                                    Private\n                                workerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDocumentText\n                            \n                            \n                                getNormalizedWordImportancePairs\n                            \n                            \n                                getSimilarity\n                            \n                            \n                                getSimilarityWord\n                            \n                            \n                                getSoftCosineMeasure\n                            \n                            \n                                getWord\n                            \n                            \n                                getWordId\n                            \n                            \n                                initGraphData\n                            \n                            \n                                innerProduct\n                            \n                            \n                                innerProductSingle\n                            \n                            \n                                setCorpus\n                            \n                            \n                                softCosineMeasureNorm\n                            \n                            \n                                    Private\n                                usedCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                            A constructor, initializing the worker\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The loading service, handling the progress reports\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocumentText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocumentText(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:155\n                \n            \n\n\n            \n                \n                    Returns the document text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNormalizedWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:165\n                \n            \n\n\n            \n                \n                    Returns the normalized pairs of word importances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarity\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarity(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:97\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first id to compare\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second id to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarityWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarityWord(word1: string, word2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:107\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two words\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first word to compare\n\n                                    \n                                \n                                \n                                    word2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second word to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSoftCosineMeasure\n                        \n                        \n                    \n                \n            \n            \n                \ngetSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:146\n                \n            \n\n\n            \n                \n                    Returns the soft cosine measure of two texts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetWord(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:87\n                \n            \n\n\n            \n                \n                    Returns the word from dictionary of a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to retrieve the word of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordId\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordId(word: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:78\n                \n            \n\n\n            \n                \n                    Returns the ID of a given word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word to retrieve the id of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initGraphData\n                        \n                        \n                    \n                \n            \n            \n                \ninitGraphData(corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:173\n                \n            \n\n\n            \n                \n                    Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProduct\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProduct(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:117\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarities of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProductSingle\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProductSingle(id, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:126\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarity of one word id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nsetCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:55\n                \n            \n\n\n            \n                \n                    A setter for the corpus value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softCosineMeasureNorm\n                        \n                        \n                    \n                \n            \n            \n                \nsoftCosineMeasureNorm(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:136\n                \n            \n\n\n            \n                \n                    Returns the soft cosine normalization of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            usedCorpus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    usedCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:64\n                \n            \n\n\n            \n                \n                    A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Corpus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            corpusSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:19\n                            \n                        \n\n                \n                    \n                        The subject storing the corpus itself\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCorpus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.corpusSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:23\n                            \n                        \n\n                \n                    \n                        The observable generated from corpusSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            worker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Worker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:28\n                            \n                        \n\n                \n                    \n                        The worker, eventually responsible for generating the initial GraphData\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workerData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                        The stored data from passed from the worker\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {LoadingService} from './loading.service';\nimport * as queryUtils from '../utils/query.utils';\nimport {GraphData, Corpus} from '../utils/query.utils';\nimport {filter, map, tap} from 'rxjs/operators';\n\n/**\n * The query service, responsible for querying on and operating with the corpus while also the corpus itself\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n  /**\n   * The subject storing the corpus itself\n   * @private\n   */\n  private corpusSource = new BehaviorSubject(undefined);\n  /**\n   * The observable generated from corpusSource\n   */\n  currentCorpus = this.corpusSource.asObservable();\n\n  /**\n   * The worker, eventually responsible for generating the initial GraphData\n   */\n  readonly worker: Worker;\n\n  /**\n   * The stored data from passed from the worker\n   * @private\n   */\n  private workerData = new Subject();\n\n  /**\n   * A constructor, initializing the worker\n   * @param loadingService  The loading service, handling the progress reports\n   */\n  constructor(private loadingService: LoadingService) {\n    // Create the web worker\n    if (typeof Worker !== 'undefined'){\n      this.worker = new Worker('../workers/graph-data.worker', { type: 'module' });\n      // If the web worker receives any data, store it in this service\n      this.worker.onmessage = ({ data }) => {\n        this.workerData.next(data);\n      };\n    }\n  }\n\n  /**\n   * A setter for the corpus value\n   * @param corpus  The corpus to be set\n   */\n  setCorpus(corpus: Corpus): void{\n    this.corpusSource.next(corpus);\n  }\n\n  /**\n   * A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n   * @param corpus  The corpus to be checked\n   * @private\n   */\n  private usedCorpus(corpus: Corpus): Corpus{\n    // If there is no passed in corpus or a default one set return undefined\n    if (!corpus && !this.corpusSource.getValue()){\n      return undefined;\n    }\n    // Otherwise if there is a passed in corpus, use that one, otherwise use the default one\n    return corpus ? corpus : this.corpusSource.getValue();\n  }\n\n  /**\n   * Returns the ID of a given word\n   * @param word    The word to retrieve the id of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWordId(word: string, corpus?: Corpus): string {\n    return queryUtils.getWordId(word, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the word from dictionary of a given id\n   * @param id      The id to retrieve the word of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWord(id: string, corpus?: Corpus): string {\n   return queryUtils.getWord(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two word ids\n   * @param id1     The first id to compare\n   * @param id2     The second id to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarity(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSimilarity(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two words\n   * @param word1   The first word to compare\n   * @param word2   The second word to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarityWord(word1: string, word2: string, corpus?: Corpus): number{\n    return queryUtils.getSimilarityWord(word1, word2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarities of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProduct(id1, id2, corpus?: Corpus): number{\n    return queryUtils.innerProduct(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarity of one word id\n   * @param id      The text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProductSingle(id, corpus?: Corpus): number {\n    return queryUtils.innerProductSingle(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine normalization of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  softCosineMeasureNorm(id1, id2, corpus?: Corpus): number{\n    return queryUtils.softCosineMeasureNorm(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine measure of two texts\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSoftCosineMeasure(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the document text\n   * @param id      The first text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getDocumentText(id: string, corpus?: Corpus): string{\n    return queryUtils.getDocumentText(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the normalized pairs of word importances\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus): {[key: string]: number}{\n    return queryUtils.getNormalizedWordImportancePairs(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  initGraphData(corpus?: Corpus): Observable{\n    // Tell the loading service that we started loading\n    this.loadingService.setIsLoading(true);\n    // Create an observable that observes the worker data, firing every time theres a change\n    const observable = this.workerData.asObservable()\n      .pipe(\n        // Look at the data the worker passed in and give the loading service the loading stage and progress\n        tap(progress => {\n          this.loadingService.setLoadingStage(progress.stage);\n          this.loadingService.setLoadingProgress(progress.value);\n        }),\n        // If the web worker data has the final processed data\n        filter(data => data.data),\n        // We finally tell the loading service we're done loading and return the output data\n        map(data => {\n          this.loadingService.setIsLoading(false);\n          return data.data;\n        })\n      );\n    // Tell the web worker to start processing\n    this.worker.postMessage({query: this.usedCorpus(corpus)});\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedDocument.html":{"url":"interfaces/SelectedDocument.html","title":"interface - SelectedDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/sidenav/sidenav.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a displayed document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        subtitle\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from './comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches: [Set, Set] = [new Set(), new Set()];\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    // Notify the parent\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    // Notify the parent\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    // Create arrays from the keys and concatenated values\n    const keyArray = Array.from(wordMap.keys());\n    const concatenatedSoft = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), []);\n\n    // Store the keys of the word map, containing the exact matches\n    this.highlightedExactMatches = new Set(keyArray\n      .filter(word => concatenatedSoft.includes(word))\n    );\n\n    // Filter out the soft matches, that will be displayed in the left document\n    const leftSoftMatches = new Set(keyArray\n      .filter(word => !concatenatedSoft.includes(word))\n    );\n\n    // filter out the soft matches, that will be displayed in the right document\n    const rightSoftMatches = new Set(concatenatedSoft\n      .filter(word => !keyArray.includes(word))\n    );\n\n    this.highlightedSoftMatches = [leftSoftMatches, rightSoftMatches];\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = [new Set(), new Set()];\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/user-interface/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        The component containing the user interface for the settings menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSetting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                settingsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         AppSettings\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/settings/settings.component.ts:26\n                            \n                        \n                \n                    \n                        The current app settings\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        settingsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/settings/settings.component.ts:30\n                            \n                        \n                \n                    \n                        An event, that emits when settings are changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSetting\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSetting(setting: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/user-interface/settings/settings.component.ts:37\n                \n            \n\n\n            \n                \n                    Changes the specified setting, using a string key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string key, corresponding to a specific key in AppSettings\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value being set to the setting key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n    \n        \n  Show labels\n  Draw deviations\n\n  \n    Distance modifier:{{settings.distanceModifier}}\n    \n    \n  \n\n  \n    Clumping modifier:{{settings.clumpingModifier}}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                .settings-menu-wrapper{\n  display: flex;\n  flex-direction: column;\n  >*{\n    margin: 0.5em 0;\n\n    &:first-child{\n      margin-top: 0;\n    }\n    &:last-child{\n      margin-bottom: 0;\n    }\n  }\n}\n\nmat-label{\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Show labels  Draw deviations      Distance modifier:{{settings.distanceModifier}}                Clumping modifier:{{settings.clumpingModifier}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/sidenav.component.ts\n\n\n    \n        Description\n    \n    \n        The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearHighlightedWords\n                            \n                            \n                                clickedCompare\n                            \n                            \n                                closeSidenav\n                            \n                            \n                                handleWordHovered\n                            \n                            \n                                handleWordsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparingWindowOpen\n                            \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareClick\n                            \n                            \n                                sidebarClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparingWindowOpen\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:30\n                            \n                        \n                \n                    \n                        A value, specifying whether the comparing window should be open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:26\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        compareClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:39\n                            \n                        \n                \n                    \n                        An event, that emits when the user clicks on the comparison button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sidebarClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:35\n                            \n                        \n                \n                    \n                        An event, that emits when the sidebar closes\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearHighlightedWords\n                        \n                        \n                    \n                \n            \n            \n                \nclearHighlightedWords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:110\n                \n            \n\n\n            \n                \n                    Clears the highlighted words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickedCompare\n                        \n                        \n                    \n                \n            \n            \n                \nclickedCompare(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:72\n                \n            \n\n\n            \n                \n                    An event handler, that handles when user clicks on the comparison button\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event of clicking on the comparison button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSidenav(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:62\n                \n            \n\n\n            \n                \n                    An event handler, that handles when the sidenav is closed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event that closed the sidenav\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordHovered\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordHovered(word: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:120\n                \n            \n\n\n            \n                \n                    An event handler, handling the change of the hovered on word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new hovered word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordsChanged\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordsChanged(wordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:82\n                \n            \n\n\n            \n                \n                    An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The WordMap containing the relationships of matches\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedExactMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:44\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedSoftMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [Set, Set]\n\n                        \n                    \n                    \n                        \n                            Default value : [new Set(), new Set()]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:48\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedWordMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:52\n                            \n                        \n\n                \n                    \n                        A map, that contains the relationships of matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:56\n                            \n                        \n\n                \n                    \n                        The currently hovered on word within the comparison screen\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from './comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches: [Set, Set] = [new Set(), new Set()];\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    // Notify the parent\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    // Notify the parent\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    // Create arrays from the keys and concatenated values\n    const keyArray = Array.from(wordMap.keys());\n    const concatenatedSoft = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), []);\n\n    // Store the keys of the word map, containing the exact matches\n    this.highlightedExactMatches = new Set(keyArray\n      .filter(word => concatenatedSoft.includes(word))\n    );\n\n    // Filter out the soft matches, that will be displayed in the left document\n    const leftSoftMatches = new Set(keyArray\n      .filter(word => !concatenatedSoft.includes(word))\n    );\n\n    // filter out the soft matches, that will be displayed in the right document\n    const rightSoftMatches = new Set(concatenatedSoft\n      .filter(word => !keyArray.includes(word))\n    );\n\n    this.highlightedSoftMatches = [leftSoftMatches, rightSoftMatches];\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = [new Set(), new Set()];\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      Comparekeyboard_arrow_right\n    \n  \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                ::ng-deep{\n  .mat-drawer-inner-container{\n    overflow-x: hidden;\n  }\n}\n\n.sidenav-wrapper{\n  width: 400px;\n  height: 100%;\n  padding: 1em;\n  display: grid;\n  position: relative;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  grid-auto-rows: minmax(200px, 1fr);\n  grid-gap: 1em;\n  flex-shrink: 0;\n\n  &.comparing{\n    width: 100%;\n    height: 50%;\n    grid-template-columns: 1fr 1fr;\n\n    .sidenav-nav{\n      grid-column: 1/3;\n    }\n  }\n}\n\napp-document {\n  padding-bottom: 1em;\n  ::ng-deep {\n    .mat-card{\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    }\n    .mat-card-content {\n      overflow: auto;\n      max-height: 100%;\n      padding-right: 0.5em;\n    }\n  }\n}\n\n.sidenav-nav{\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.sidenav-comparison{\n  width: 100%;\n  height: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close              Comparekeyboard_arrow_right          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SplitUpPipe.html":{"url":"pipes/SplitUpPipe.html","title":"pipe - SplitUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SplitUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits up two values at a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        splitUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:68\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator at which the split will happen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInterfaceComponent.html":{"url":"components/UserInterfaceComponent.html","title":"component - UserInterfaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInterfaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/user-interface/user-interface.component.ts\n\n\n    \n        Description\n    \n    \n        The component responsible for showing the user interface\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-interface\n            \n\n            \n                styleUrls\n                ./user-interface.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-interface.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                settingsOpen\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentZoom\n                            \n                            \n                                defaultStepZoom\n                            \n                            \n                                errorIndicatorOffset\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                selectedNodes\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerCamera\n                            \n                            \n                                changeCameraZoom\n                            \n                            \n                                decreaseCamera\n                            \n                            \n                                increaseCamera\n                            \n                            \n                                settingsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:41\n                            \n                        \n                \n                    \n                        The current value of the zoom in/out level\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultStepZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:37\n                            \n                        \n                \n                    \n                        The default camera zoom in/out step on button press\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorIndicatorOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:25\n                            \n                        \n                \n                    \n                        The offset in pixels of the deviance indicator\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:33\n                            \n                        \n                \n                    \n                        Specifies the closest the camera can zoom in\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:29\n                            \n                        \n                \n                    \n                        Specifies the furthest the camera can zoom out\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedNodes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:21\n                            \n                        \n                \n                    \n                        The ids of the selected nodes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         AppSettings\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:17\n                            \n                        \n                \n                    \n                        The current app settings\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerCamera\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:46\n                            \n                        \n                \n                    \n                        An event, emitting when the user requests to center the camera\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        changeCameraZoom\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:58\n                            \n                        \n                \n                    \n                        An event, emitting when the user uses the slider to change the camera zoom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        decreaseCamera\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:54\n                            \n                        \n                \n                    \n                        An event, emitting when the user requests to zoom out the camera\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseCamera\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:50\n                            \n                        \n                \n                    \n                        An event, emitting when the user requests to zoom in the camera\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settingsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:62\n                            \n                        \n                \n                    \n                        An event, emitting when the settings change\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settingsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:67\n                            \n                        \n\n                \n                    \n                        Specifies whether the settings menu is opened\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {AppSettings} from './settings/settings.component';\n\n/**\n * The component responsible for showing the user interface\n */\n@Component({\n  selector: 'app-user-interface',\n  templateUrl: './user-interface.component.html',\n  styleUrls: ['./user-interface.component.scss']\n})\nexport class UserInterfaceComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * The ids of the selected nodes\n   */\n  @Input() selectedNodes: string[];\n  /**\n   * The offset in pixels of the deviance indicator\n   */\n  @Input() errorIndicatorOffset = 0;\n  /**\n   * Specifies the furthest the camera can zoom out\n   */\n  @Input() minZoom: number;\n  /**\n   * Specifies the closest the camera can zoom in\n   */\n  @Input() maxZoom: number;\n  /**\n   * The default camera zoom in/out step on button press\n   */\n  @Input() defaultStepZoom: number;\n  /**\n   * The current value of the zoom in/out level\n   */\n  @Input() currentZoom: number;\n\n  /**\n   * An event, emitting when the user requests to center the camera\n   */\n  @Output() centerCamera = new EventEmitter();\n  /**\n   * An event, emitting when the user requests to zoom in the camera\n   */\n  @Output() increaseCamera = new EventEmitter();\n  /**\n   * An event, emitting when the user requests to zoom out the camera\n   */\n  @Output() decreaseCamera = new EventEmitter();\n  /**\n   * An event, emitting when the user uses the slider to change the camera zoom\n   */\n  @Output() changeCameraZoom = new EventEmitter();\n  /**\n   * An event, emitting when the settings change\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Specifies whether the settings menu is opened\n   */\n  settingsOpen: boolean;\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{settingsOpen ? 'close' : 'settings'}}\n      \n      \n    \n  \n  \n    \n      \n      Too far\n      Perfect\n      Too close\n      \n    \n  \n  \n    \n      \n        adjust\n      \n    \n    \n      \n        add_circle_outline\n      \n      \n      \n        remove_circle_outline\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-interface.component.scss\n                \n                .ui-wrapper{\n  position: fixed;\n  padding: 2em;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  z-index: 1;\n\n  .map-controls{\n    display: flex;\n    flex-direction: column;\n    justify-self: flex-end;\n    margin-top: auto;\n\n    .center-control, .zoom-controls{\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: rgba(0, 0, 0, 0.1) 2px 2px 8px;\n      overflow: hidden;\n    }\n\n    .center-control{\n      margin-bottom: 1em;\n    }\n\n    .zoom-controls{\n      display: flex;\n      flex-direction: column;\n\n      mat-slider{\n        width: 40px;\n        padding: 0;\n        height: 128px;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 0;\n          bottom: 0;\n          left: 19px;\n        }\n      }\n    }\n  }\n\n  .settings-wrapper{\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1em;\n\n    .settings{\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: rgba(0, 0, 0, 0.1) 2px 2px 8px;\n      overflow: hidden;\n      transition: 0.1s;\n      display: flex;\n      flex-direction: column;\n\n      &.opened {\n        min-width: 170px;\n      }\n\n      app-settings{\n        padding: 0.25em 1em 1em;\n      }\n    }\n  }\n\n  .error-legend{\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    >.inner {\n      position: relative;\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: rgba(0, 0, 0, 0.1) 2px 2px 8px;\n      overflow: hidden;\n      width: 120px;\n      padding: 1em 1em 1em 2em;\n      height: calc(2em + 128px);\n\n      .bar {\n        height: 128px;\n        width: 8px;\n        background: linear-gradient(to top, rgb(176, 55, 55) 0%, rgb(55, 176, 59) 50%, rgb(69, 55, 176) 100%);\n      }\n\n      .up {\n        position: absolute;\n        top: 1em;\n        height: 1em;\n        left: calc(8px + 2.5em);\n      }\n      .middle {\n        position: absolute;\n        top: calc(50% - 0.5em);\n        height: 1em;\n        left: calc(8px + 2.5em);\n\n        &::before{\n          display: block;\n          content: \"\";\n          height: 1px;\n          width: 12px;\n          background-color: rgba(0, 0, 0, 0.95);\n          position: absolute;\n          top: 50%;\n          left: calc(-8px - 0.5em - 2px);\n        }\n      }\n      .bottom {\n        position: absolute;\n        bottom: 1em;\n        height: 1em;\n        left: calc(8px + 2.5em);\n      }\n\n      .indicator{\n        position: absolute;\n\n        top: 0;\n        left: calc(1em + 5px);\n\n        width: 0;\n        height: 0;\n        border-top: 7px solid transparent;\n        border-bottom: 7px solid transparent;\n        border-left: 7px solid black;\n        margin-top: calc(1em - 7px);\n      }\n    }\n  }\n}\n\n@media all and (max-height: 540px){\n  .ui-wrapper{\n    flex-wrap: wrap;\n    .map-controls{\n      order: 2;\n    }\n    .error-legend{\n      order: 3;\n      margin-bottom: 1em;\n      margin-left: 1em;\n    }\n  }\n}\n\n@media all and (max-height: 372px) {\n  .ui-wrapper{\n    .map-controls .zoom-controls mat-slider{\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{settingsOpen ? \\'close\\' : \\'settings\\'}}                                    Too far      Perfect      Too close                                adjust                            add_circle_outline                          remove_circle_outline            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInterfaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/guards/corpus-loaded-guard.service.ts\n            \n            guard\n            CorpusLoadedGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/home/graph/graph.component.ts\n            \n            component\n            GraphComponent\n            \n                91 %\n                (43/47)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                94 %\n                (33/35)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts\n            \n            component\n            ComparisonEntryComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/comparison/comparison.component.ts\n            \n            component\n            ComparisonComponent\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document-content/document-content.component.ts\n            \n            component\n            DocumentContentComponent\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document.component.ts\n            \n            component\n            DocumentComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            interface\n            SelectedDocument\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/home/user-interface/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/home/user-interface/settings/settings.component.ts\n            \n            interface\n            AppSettings\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/home/user-interface/user-interface.component.ts\n            \n            component\n            UserInterfaceComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/init/init.component.ts\n            \n            component\n            InitComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/material.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/escape-html.pipe.ts\n            \n            pipe\n            EscapeHtmlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitFirstPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitSecondPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            SplitUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            injectable\n            JsonValidateService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            variable\n            searchQuerySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/query.service.ts\n            \n            injectable\n            QueryService\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            class\n            Color\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            class\n            DefaultColors\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            log2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            normalizeDeviation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            pow2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            Corpus\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphLink\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphNode\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            calculateCosineDistance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createLinks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createNodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getDocumentText\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantExactMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantSoftMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getNormalizedWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarityWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSoftCosineMeasure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProduct\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProductSingle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            softCosineMeasureNorm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            function\n            getNodeDocumentId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            function\n            valueChanged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            variable\n            pairSeparator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.12\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ^11.2.12\n        \n            @angular/compiler : ^11.2.12\n        \n            @angular/core : ^11.2.12\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.2.12\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ^11.2.12\n        \n            @angular/platform-browser-dynamic : ^11.2.12\n        \n            @angular/router : ^11.2.12\n        \n            ajv : ^8.2.0\n        \n            angular-resize-event : ^2.1.0\n        \n            d3 : ^6.7.0\n        \n            d3-force : ^2.1.1\n        \n            escape-string-regexp : ^5.0.0\n        \n            hammerjs : ^2.0.8\n        \n            material-icons : ^0.5.5\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EntryHoverEvent   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/sidenav/comparison/comparison.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EntryHoverEvent\n                    \n                \n                    \n                        \n                            An enum, specifying the hover event type\n\n                        \n                    \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            calculateCosineDistance   (src/.../query.utils.ts)\n                        \n                        \n                            createLinks   (src/.../query.utils.ts)\n                        \n                        \n                            createNodes   (src/.../query.utils.ts)\n                        \n                        \n                            getDocumentText   (src/.../query.utils.ts)\n                        \n                        \n                            getMostImportantExactMatches   (src/.../query.utils.ts)\n                        \n                        \n                            getMostImportantSoftMatches   (src/.../query.utils.ts)\n                        \n                        \n                            getNodeDocumentId   (src/.../various.utils.ts)\n                        \n                        \n                            getNormalizedWordImportancePairs   (src/.../query.utils.ts)\n                        \n                        \n                            getSimilarity   (src/.../query.utils.ts)\n                        \n                        \n                            getSimilarityWord   (src/.../query.utils.ts)\n                        \n                        \n                            getSoftCosineMeasure   (src/.../query.utils.ts)\n                        \n                        \n                            getWord   (src/.../query.utils.ts)\n                        \n                        \n                            getWordId   (src/.../query.utils.ts)\n                        \n                        \n                            getWordImportancePairs   (src/.../query.utils.ts)\n                        \n                        \n                            innerProduct   (src/.../query.utils.ts)\n                        \n                        \n                            innerProductSingle   (src/.../query.utils.ts)\n                        \n                        \n                            log2   (src/.../graph.utils.ts)\n                        \n                        \n                            normalizeDeviation   (src/.../graph.utils.ts)\n                        \n                        \n                            pow2   (src/.../graph.utils.ts)\n                        \n                        \n                            softCosineMeasureNorm   (src/.../query.utils.ts)\n                        \n                        \n                            valueChanged   (src/.../various.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/query.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateCosineDistance\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateCosineDistance(weight, multiplier, clumping)\n                \n            \n\n\n\n\n            \n                \n                    Cosine distance calculation formula with modifiers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weight\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The cosine similarity of two documents\n\n                                    \n                                \n                                \n                                    multiplier\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The linear multiplier of the formula\n\n                                    \n                                \n                                \n                                    clumping\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The exponent of the formula\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLinks\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLinks(nodes, corpus)\n                \n            \n\n\n\n\n            \n                \n                    An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The GraphNodes to create the links between\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to create the nodes from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNodes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNodes(corpus)\n                \n            \n\n\n\n\n            \n                \n                    An observable, responsible for creating the GraphNode elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to create the nodes from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocumentText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocumentText(id, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the document text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMostImportantExactMatches\n                        \n                        \n                    \n                \n            \n            \n                \ngetMostImportantExactMatches(wordImportancePairs: any)\n                \n            \n\n\n\n\n            \n                \n                    Filters through the word importance pairs and returns only exact matches\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordImportancePairs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The pairs to filter through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMostImportantSoftMatches\n                        \n                        \n                    \n                \n            \n            \n                \ngetMostImportantSoftMatches(wordImportancePairs: any)\n                \n            \n\n\n\n\n            \n                \n                    Filters through the word importance pairs and returns only soft matches\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordImportancePairs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The pairs to filter through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNormalizedWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetNormalizedWordImportancePairs(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the normalized word importance pairs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarity\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarity(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the cosine similarity of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first id to compare\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second id to compare\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarityWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarityWord(word1, word2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the cosine similarity of two words\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first word to compare\n\n                                    \n                                \n                                \n                                    word2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second word to compare\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSoftCosineMeasure\n                        \n                        \n                    \n                \n            \n            \n                \ngetSoftCosineMeasure(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the soft cosine measure of two texts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetWord(id, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the word from dictionary of a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to retrieve the word of\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordId\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordId(word, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the ID of a given word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word to retrieve the id of\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordImportancePairs(bowEntries1, bowEntries2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the non-normalized word importance pairs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bowEntries1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key-value pairs of the bag of word of the first document\n\n                                    \n                                \n                                \n                                    bowEntries2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key-value pairs of the bag of word of the second document\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProduct\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProduct(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Calculates the inner product of the cosine similarities of two document ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProductSingle\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProductSingle(id, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Calculates the inner product of the cosine similarity of one document id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softCosineMeasureNorm\n                        \n                        \n                    \n                \n            \n            \n                \nsoftCosineMeasureNorm(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the soft cosine normalization of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utils/various.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getNodeDocumentId\n                        \n                        \n                    \n                \n            \n            \n                \ngetNodeDocumentId(nodeId)\n                \n            \n\n\n\n\n            \n                \n                    A quick regex way of retrieving the document ID from the node ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodeId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node ID we'd like to get the document ID from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChanged(changesValue: any)\n                \n            \n\n\n\n\n            \n                \n                    A helper function that determines if the value has changed from a SimpleChange object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changesValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to check for changes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utils/graph.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            log2\n                        \n                        \n                    \n                \n            \n            \n                \nlog2(n)\n                \n            \n\n\n\n\n            \n                \n                    Returns the base 2 logarithm of a number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number to return the logarithm of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            normalizeDeviation\n                        \n                        \n                    \n                \n            \n            \n                \nnormalizeDeviation(value, stiffness)\n                \n            \n\n\n\n\n            \n                \n                    A simple and quick normalization function, normalizing the inputted value between -1 and 1\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be normalized\n\n                                    \n                                \n                                \n                                    stiffness\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The incline of the function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pow2\n                        \n                        \n                    \n                \n            \n            \n                \npow2(n)\n                \n            \n\n\n\n\n            \n                \n                    Returns the 2 to the power of the specified number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number to return the 2 to the power of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThe user manual\nImporting the corpus\nTo proceed into the application you'll have to use a valid corpus. \nWhat counts as a valid corpus is explained in the documentation on the page \nInterfaces/Corpus.\nTo import a corpus, you can click the Insert corpus as file button and proceed to select your \ncorpus JSON, or you can enter the corpus as a pasted text by clicking on the Insert corpus as JSON text.\nIf you just wish to explore the tool, an example corpus is provided upon clicking the Use the example corpus.\nNavigating the map\nTo navigate the map you can simply click and drag the map around and scroll up to zoom in or scroll down to zoom out.\nIf you wish to move the map around without a mouse, you can do so using arrow keys and the '+' and '-' keys to\nzoom in and out respectively.\nYou can also use the on screen user interface to center or zoom the camera.\n\nSelecting nodes\nTo select a node you can simply click on it. This will by default colour in all the other nodes depending on their\ndeviation from the calculated cosine distance. You can refer to the deviation legend that appears.\n\nThis legend displays an indicator whenever you hover over a node as portrayed in the image above.\nIf you desire to highlight multiple nodes, you can do so by holding the CTRL key\nViewing the document content\nWhen selecting a document, you can view its contents on the right side of the screen. If you wish to view \nmultiple documents' contents at once, you can do so by selecting multiple nodes and then exploring them on\nthe right side as well.\nComparing documents\nTo compare documents, you need to select exactly two documents and then click the Compare button in the top right.\n\nThis then opens the comparison screen, where you can compare the documents in further detail\nSelecting words\nIf you click on a checkbox next to one of the matched words, you will select that word for highlighting in the documents\ndisplayed above.\n\nIf you select the words from the exact matches column, the highlights will be coloured in yellow, and if you select\na match from the soft match column, the first word will be coloured in with yellow as well but the second will be\ncoloured red.\nYou can further single out highlights by hovering over the word in the word selections columns.\nChanging settings\nYou can change the settings of the tool by pressing the settings button in the top left.\n\nLicence\nMIT License\nCopyright (c) 2021 Michal Petr\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRouter\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nUserInterfaceComponent\n\nUserInterfaceComponent\n\nHomeModule -->\n\nUserInterfaceComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nInitComponent\n\nInitComponent\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WordMap   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/sidenav/comparison/comparison.component.ts\n    \n    \n        \n            \n                \n                    \n                    WordMap\n                \n            \n            \n                \n                    A type, specifying the relation of two matched words\n\n                \n            \n            \n                \n                        Map>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../material.module.ts)\n                        \n                        \n                            pairSeparator   (src/.../various.utils.ts)\n                        \n                        \n                            searchQuerySchema   (src/.../json-validate.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/various.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairSeparator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\0'\n                        \n                    \n\n                \n                    \n                        The default pair separator, used for simulating string tuples within the app.\nNeeds to be placed in a utility file because of the WebWorker\n\n                    \n                \n\n            \n        \n\n    src/app/services/json-validate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            searchQuerySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JSONSchemaType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n}\n                        \n                    \n\n                \n                    \n                        The schema used to validate the parsed JSON\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
