var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.576,1,1.186]],["body/components/AppComponent.html",[0,0.993,1,1.949,2,1.578,3,0.246,4,0.217,5,1.489,6,1.489,7,1.489,8,1.489,9,0.189,10,2.806,11,0.712,12,2.573,13,2.948,14,3.875,15,3.074,16,4.589,17,1.39,18,2.573,19,1.92,20,3.913,21,1.072,22,2.632,23,2.312,24,2.801,25,1.796,26,5.235,27,1.796,28,4.57,29,0.766,30,1.224,31,4.438,32,5.023,33,5.023,34,3.913,35,1.224,36,4.22,37,2.378,38,2.806,39,3.848,40,1.54,41,4.57,42,0.887,43,0.025,44,1.234,45,0.634,46,0.78,47,2.573,48,3.875,49,2.801,50,3.31,51,0.639,52,1.683,53,1.683,54,1.451,55,2.208,56,3.31,57,5.194,58,3.875,59,1.39,60,3.31,61,3.074,62,3.074,63,2.727,64,4.786,65,0.755,66,4.57,67,3.875,68,1.402,69,3.416,70,3.31,71,0.381,72,0.372,73,3.31,74,0.246,75,0.406,76,4.438,77,0.555,78,1.863,79,3.31,80,4.57,81,3.31,82,4.57,83,3.31,84,4.57,85,2.468,86,4.57,87,2.801,88,3.31,89,2.474,90,2.226,91,2.028,92,2.474,93,2.028,94,1.305,95,2.474,96,3.179,97,2.378,98,2.948,99,3.179,100,3.208,101,2.724,102,4.121,103,3.913,104,2.948,105,2.028,106,2.028,107,2.474,108,2.806,109,2.028,110,3.31,111,2.573,112,2.028,113,2.028,114,2.226,115,2.226,116,3.31,117,2.028,118,2.474,119,2.226,120,2.028,121,1.072,122,1.92,123,2.056,124,1.489,125,2.54,126,1.489,127,1.489,128,1.143,129,1.489,130,1.143,131,1.39,132,1.489,133,1.143,134,1.489,135,1.143,136,1.489,137,1.143,138,1.489,139,1.143,140,1.489,141,1.072,142,1.489,143,1.072,144,1.489,145,1.072,146,1.39,147,1.489,148,1.489,149,0.012,150,0.016,151,0.012]],["title/modules/AppModule.html",[152,1.113,153,2.31]],["body/modules/AppModule.html",[1,2.432,3,0.348,4,0.307,9,0.267,43,0.025,71,0.574,72,0.525,74,0.348,75,0.574,121,1.516,149,0.016,150,0.02,151,0.016,152,1.516,153,4.718,154,1.616,155,2.435,156,3.486,157,3.794,158,3.51,159,2.106,160,3.967,161,3.967,162,3.967,163,3.967,164,4.127,165,3.505,166,3.225,167,2.868,168,2.435,169,4.68,170,2.767,171,2.767,172,5.728,173,4.856,174,3.498,175,4.68,176,3.498,177,5.728,178,4.68,179,5.728,180,5.728,181,3.967,182,3.498,183,3.853,184,2.435,185,4.68]],["title/modules/AppRouter.html",[152,1.113,164,2.105]],["body/modules/AppRouter.html",[3,0.375,4,0.331,9,0.288,18,3.601,43,0.025,71,0.534,72,0.567,74,0.375,75,0.618,149,0.018,150,0.021,151,0.018,154,1.742,159,2.27,164,3.673,170,2.437,171,2.896,183,4.032,184,2.626,186,5.045,187,5.082,188,4.032,189,5.045,190,5.045,191,1.352,192,4.78,193,5.994,194,5.045,195,5.045,196,2.12,197,5.045,198,5.045,199,5.045,200,5.045]],["title/interfaces/AppSettings.html",[201,0.863,202,2.31]],["body/interfaces/AppSettings.html",[0,1.016,3,0.332,4,0.293,9,0.255,11,0.695,22,1.754,23,2.19,25,1.754,27,1.754,29,0.748,30,1.49,43,0.025,45,0.712,52,1.643,54,1.401,59,2.024,63,2.156,65,0.874,71,0.372,72,0.501,74,0.414,75,0.547,77,0.932,143,1.445,149,0.016,150,0.019,151,0.016,201,1.595,202,4.267,203,2.156,204,3.335,205,2.231,206,5.724,207,4.743,208,4.743,209,5.379,210,4.743,211,2.995,212,2.895,213,2.337,214,2.895,215,2.322,216,3.783,217,3.783,218,3.783,219,1.875,220,2.512,221,2.734,222,3.783,223,1.121,224,2.734,225,3.001,226,4.53,227,2.322,228,3.065,229,3.783,230,3.783,231,3.335,232,1.875,233,3.783,234,3.783,235,3.783]],["title/interfaces/Color.html",[201,0.863,236,1.787]],["body/interfaces/Color.html",[2,0.999,3,0.215,4,0.19,9,0.165,11,0.45,17,1.479,29,0.485,30,1.113,43,0.025,45,0.546,51,0.802,54,1.244,59,2.097,62,2.796,65,0.6,74,0.468,77,1.106,94,1.389,149,0.01,150,0.014,151,0.01,191,1.656,201,1.223,203,1.397,205,1.065,225,1.945,227,1.505,236,3.664,237,2.452,238,2.162,239,2.892,240,6.874,241,5.808,242,6.851,243,2.452,244,1.988,245,2.892,246,2.746,247,1.628,248,5.318,249,2.162,250,2.892,251,2.892,252,1.606,253,2.892,254,2.892,255,2.892,256,2.892,257,2.892,258,2.892,259,2.892,260,4.156,261,1.53,262,5.318,263,5.318,264,1.633,265,6.595,266,1.576,267,4.865,268,2.892,269,2.892,270,2.892,271,2.892,272,2.892,273,2.892,274,2.892,275,2.892,276,4.156,277,2.796,278,2.892,279,2.892,280,4.865,281,6.537,282,4.865,283,4.865,284,4.865,285,2.892,286,5.865,287,5.865,288,5.865,289,5.865,290,2.892,291,2.892,292,2.892,293,2.452,294,2.892,295,2.892,296,4.865,297,2.892,298,2.892,299,2.892,300,2.892,301,2.892,302,2.892,303,2.892,304,2.892,305,2.892,306,4.156,307,2.892,308,2.892,309,2.892,310,2.892,311,2.892,312,2.892,313,4.865,314,2.892,315,3.052,316,2.892,317,2.892,318,2.892,319,4.156,320,4.865,321,2.892,322,2.892,323,4.156,324,2.892,325,2.892]],["title/components/ComparisonComponent.html",[0,0.576,128,1.186]],["body/components/ComparisonComponent.html",[0,0.808,1,0.698,2,1.095,3,0.15,4,0.133,5,1.763,6,0.909,7,0.909,8,0.909,9,0.115,11,0.751,13,1.138,15,2.134,17,0.965,19,1.333,20,2.928,21,0.655,22,2.376,23,2.117,25,1.247,27,1.247,29,0.339,30,0.85,35,0.85,36,3.318,37,1.052,40,1.647,42,1.292,43,0.025,44,1.262,45,0.746,46,1.137,51,1.1,52,2.351,53,1.442,54,0.865,59,1.191,65,0.772,68,0.541,71,0.37,72,0.227,74,0.291,75,0.248,77,0.744,85,1.247,87,2.72,91,2.401,92,2.372,93,1.238,94,1.377,95,1.511,96,1.786,97,2.31,98,2.206,99,2.716,104,2.499,105,1.944,106,1.944,109,2.401,111,1.786,112,2.401,113,3.397,117,1.944,119,2.134,120,1.238,121,0.655,122,2.451,123,2.625,124,0.909,125,1.997,126,0.909,127,0.909,128,1.532,129,0.909,130,0.698,131,2.151,132,0.909,133,0.698,134,0.909,135,0.698,136,0.909,137,0.698,138,0.909,139,0.698,140,0.909,141,0.655,142,0.909,143,0.655,144,0.909,145,0.655,146,0.849,147,0.909,148,0.909,149,0.007,150,0.011,151,0.007,182,1.511,191,1.434,196,1.646,201,0.797,211,0.909,212,2.51,213,1.333,214,2.039,215,2.664,219,2.66,220,2.499,221,1.944,223,1.116,224,1.944,228,2.144,236,1.651,246,0.849,252,0.797,264,1.247,266,1.269,315,1.651,326,1.359,327,1.333,328,4.823,329,2.249,330,1.944,331,2.928,332,3.918,333,3.173,334,3.918,335,4.834,336,2.401,337,4.823,338,3.918,339,4.823,340,4.823,341,2.401,342,3.173,343,4.438,344,4.438,345,4.438,346,4.438,347,3.173,348,3.173,349,2.372,350,1.651,351,2.928,352,1.944,353,3.918,354,3.918,355,1.359,356,3.095,357,3.173,358,2.928,359,1.634,360,2.206,361,2.021,362,2.144,363,3.121,364,1.997,365,2.021,366,3.763,367,3.763,368,3.763,369,2.562,370,2.021,371,3.173,372,3.918,373,2.021,374,3.173,375,2.51,376,1.651,377,3.173,378,2.021,379,2.372,380,2.021,381,4.438,382,3.763,383,2.409,384,2.933,385,2.021,386,2.293,387,2.021,388,3.173,389,1.744,390,3.173,391,2.021,392,2.499,393,3.321,394,3.321,395,2.021,396,2.985,397,2.021,398,1.238,399,1.052,400,2.021,401,1.511,402,2.021,403,1.511,404,2.372,405,3.318,406,2.021,407,2.021,408,2.021,409,1.533,410,2.69,411,2.69,412,2.69,413,3.173,414,2.372,415,3.763,416,2.021,417,2.021,418,5.834,419,1.786,420,2.206,421,2.021,422,3.173,423,3.173,424,2.021,425,4.438,426,2.021,427,2.021,428,2.928,429,3.173,430,1.786,431,1.359,432,1.713,433,1.511,434,1.238,435,1.333,436,1.713,437,1.511,438,1.713,439,1.713,440,2.021,441,3.173,442,1.138,443,2.021,444,1.786,445,3.173,446,2.021,447,2.021,448,2.021,449,2.021,450,2.021,451,2.021,452,2.021,453,2.021,454,2.021,455,2.021,456,2.021,457,2.021,458,2.021,459,3.173,460,3.173,461,3.173,462,2.021,463,2.021,464,2.021,465,2.021,466,2.021,467,2.021,468,2.021,469,2.021,470,2.021,471,2.021,472,2.021,473,2.021,474,3.173,475,2.021,476,3.173,477,3.605,478,2.021,479,1.238,480,2.021,481,3.173,482,3.318,483,2.372,484,3.244,485,1.511,486,2.021,487,1.713,488,1.138,489,1.238,490,1.511,491,1.511,492,1.713,493,3.173,494,3.173,495,2.021,496,2.021,497,2.021,498,2.021,499,2.69,500,1.511,501,0.849,502,2.021,503,2.021,504,1.359,505,2.021,506,2.021,507,1.511,508,1.713,509,1.511,510,1.511,511,1.713,512,2.021,513,1.713]],["title/components/ComparisonEntryComponent.html",[0,0.576,130,1.186]],["body/components/ComparisonEntryComponent.html",[0,0.856,1,1.091,2,1.528,3,0.235,4,0.207,5,1.422,6,1.422,7,1.422,8,1.422,9,0.181,11,0.689,13,2.492,21,1.024,22,2.611,23,2.293,25,1.74,27,1.74,29,0.53,35,1.186,40,1.558,42,0.847,43,0.025,44,1.204,45,0.678,46,0.745,51,0.854,52,1.63,59,1.836,62,2.977,63,2.138,65,0.798,68,1.369,71,0.426,72,0.355,74,0.235,75,0.387,77,0.53,85,1.74,87,2.713,91,1.937,93,1.937,94,1.58,96,3.116,97,2.658,98,2.492,99,2.876,100,1.937,101,1.645,102,2.126,103,2.363,104,1.78,109,1.937,111,2.492,113,3.13,114,2.126,115,2.126,119,3.436,121,1.024,122,1.86,123,1.992,124,1.422,125,2.49,126,1.422,127,1.422,128,1.091,129,1.422,130,1.911,131,2.766,132,1.422,133,1.091,134,1.422,135,1.091,136,1.422,137,1.091,138,1.422,139,1.091,140,1.422,141,1.024,142,1.422,143,1.024,144,1.422,145,1.024,146,1.328,147,1.422,148,1.422,149,0.011,150,0.015,151,0.011,196,1.328,205,1.63,212,2.658,213,2.448,214,2.304,215,2.304,219,2.537,223,0.794,236,1.645,238,3.309,246,1.328,252,0.794,266,1.434,350,2.304,352,2.713,363,2.492,364,1.992,366,3.753,369,2.711,386,1.74,393,5.256,398,2.713,399,2.304,401,3.819,403,4.137,409,2.138,430,3.28,484,2.126,490,2.363,491,2.363,499,3.753,504,2.126,507,2.363,514,5.363,515,4.729,516,2.68,517,4.427,518,4.427,519,1.86,520,5.108,521,4.427,522,6.326,523,4.427,524,5.108,525,5.535,526,5.108,527,3.161,528,4.427,529,2.492,530,4.427,531,3.161,532,3.161,533,3.161,534,3.753,535,3.161,536,4.427,537,3.161,538,2.304,539,4.137,540,4.427,541,5.535,542,3.161,543,2.977,544,4.427,545,2.68,546,3.161,547,3.161,548,3.161,549,3.161,550,3.161,551,3.161,552,4.427,553,4.427,554,1.937,555,3.161,556,3.161,557,2.68,558,3.161,559,3.161,560,3.161,561,2.363,562,2.68,563,2.68,564,2.68,565,2.68,566,3.161,567,3.161,568,3.161,569,2.68,570,3.161,571,2.68,572,4.427]],["title/interfaces/Corpus.html",[201,0.863,359,1.265]],["body/interfaces/Corpus.html",[3,0.158,4,0.216,9,0.121,11,0.33,12,1.855,17,0.645,29,0.677,30,0.883,43,0.025,45,0.718,51,1.088,54,0.892,59,2.049,65,0.988,68,0.883,71,0.275,74,0.476,77,1.14,85,1.295,94,1.301,149,0.007,150,0.011,151,0.017,191,1.854,201,1.455,203,1.025,205,0.781,223,0.828,228,2.995,244,1.885,246,1.698,247,1.855,252,1.592,261,1.817,264,1.939,266,1.476,315,1.104,327,1.384,329,0.891,341,2.476,359,2.596,364,0.954,369,2.532,376,1.715,383,0.954,384,1.483,386,0.834,389,2.215,396,3.979,409,2.796,419,1.855,430,1.855,435,1.384,442,3.173,444,3.392,501,2.073,519,0.891,529,3.069,538,1.715,573,1.3,574,2.568,575,2.371,576,2.566,577,2.371,578,2.566,579,2.568,580,1.025,581,0.834,582,1.427,583,2.476,584,2.275,585,1.855,586,2.216,587,2.216,588,1.427,589,2.568,590,3.19,591,2.476,592,1.194,593,1.3,594,1.427,595,1.427,596,1.427,597,2.216,598,1.427,599,1.427,600,2.103,601,1.427,602,1.427,603,2.216,604,2.216,605,1.194,606,1.3,607,1.025,608,3.201,609,2.718,610,2.019,611,3.79,612,3.173,613,1.3,614,1.427,615,1.427,616,1.3,617,1.427,618,2.792,619,2.792,620,1.3,621,1.427,622,1.427,623,1.427,624,1.427,625,3.065,626,1.427,627,2.019,628,2.476,629,1.3,630,1.3,631,1.427,632,2.019,633,1.427,634,1.427,635,1.855,636,2.019,637,1.3,638,1.3,639,2.216,640,2.216,641,2.216,642,2.216,643,1.427,644,2.216,645,2.216,646,2.216,647,1.427,648,1.3,649,2.476,650,1.427,651,1.427,652,1.427,653,3.666,654,1.3,655,2.718,656,3.319,657,2.216,658,2.216,659,1.3,660,2.216,661,2.216,662,1.427,663,1.427,664,1.427,665,1.427,666,2.216,667,1.427,668,2.216,669,2.216,670,2.216,671,2.216,672,1.427,673,1.427,674,1.427,675,1.427,676,1.427,677,1.427,678,1.427,679,2.216,680,2.216,681,2.792,682,2.216,683,2.019,684,1.427,685,3.065,686,2.216,687,2.216,688,2.216,689,2.216,690,2.216,691,1.427,692,2.216,693,1.427,694,1.855,695,1.427,696,1.194,697,1.427,698,2.718,699,1.427,700,3.065,701,1.3,702,2.476,703,1.427,704,1.427,705,1.427,706,2.216,707,1.427,708,2.718,709,1.427,710,2.216,711,1.427,712,2.216,713,2.216,714,1.427,715,1.427,716,2.019,717,1.427,718,1.427,719,1.194,720,1.427,721,1.427,722,1.427]],["title/components/DocumentComponent.html",[0,0.576,133,1.186]],["body/components/DocumentComponent.html",[0,1.101,1,1.364,2,1.777,3,0.294,4,0.259,5,1.777,6,1.777,7,1.777,8,1.777,9,0.226,11,0.615,21,1.279,22,2.706,23,2.377,25,2.023,27,2.023,29,0.662,40,1.581,43,0.025,44,1.213,45,0.706,63,2.486,65,0.742,68,1.82,71,0.478,72,0.444,74,0.294,75,0.484,121,1.279,122,2.162,123,2.316,124,1.777,125,2.729,126,1.777,127,1.777,128,1.364,129,1.777,130,1.364,131,1.659,132,1.777,133,2.094,134,1.777,135,1.364,136,1.777,137,1.364,138,1.777,139,1.364,140,1.777,141,1.279,142,1.777,143,1.279,144,1.777,145,1.279,146,1.659,147,1.777,148,1.777,149,0.014,150,0.018,151,0.014,205,1.895,213,2.709,232,2.548,330,3.717,336,3.508,350,2.678,360,3.223,362,3.115,364,2.316,369,2.023,383,2.316,384,2.902,386,2.023,392,2.898,420,3.541,501,2.162,534,4.363,723,3.349,724,4.079,725,3.847,726,5.724,727,5.146,728,3.85,729,3.85,730,3.85,731,3.95,732,3.95,733,3.95,734,3.95,735,4.363,736,3.95,737,3.95,738,2.42,739,5.146,740,5.146]],["title/components/DocumentContentComponent.html",[0,0.576,135,1.186]],["body/components/DocumentContentComponent.html",[0,0.712,1,0.793,2,1.21,3,0.171,4,0.151,5,1.034,6,1.034,7,1.034,8,1.034,9,0.131,11,0.662,19,1.473,20,3.176,21,0.744,22,2.45,23,2.152,25,1.378,27,1.378,29,0.385,30,0.939,35,0.939,36,3.553,37,1.824,40,1.602,42,1.138,43,0.025,44,1.206,45,0.69,46,1.001,51,0.988,52,1.75,55,1.11,63,1.693,65,0.928,67,2.971,68,1.761,71,0.468,72,0.258,74,0.171,75,0.282,76,4.573,77,0.904,91,2.913,94,0.656,97,1.196,101,3.283,114,1.546,121,0.744,122,2.357,123,1.577,124,1.034,125,2.139,126,1.034,127,1.034,128,0.793,129,1.034,130,0.793,131,0.965,132,1.034,133,0.793,134,1.034,135,1.641,136,1.034,137,0.793,138,1.034,139,0.793,140,1.034,141,0.744,142,1.034,143,0.744,144,1.034,145,0.744,146,0.965,147,1.034,148,1.034,149,0.008,150,0.012,151,0.008,168,1.824,191,1.619,196,1.997,205,1.75,211,1.577,213,2.266,223,1.195,224,1.408,231,2.62,232,2.582,236,2.474,252,1.286,327,1.785,329,2.678,330,2.913,331,3.176,336,3.631,349,2.62,350,1.824,362,2.794,369,2.549,375,1.824,383,1.577,384,2.139,386,2.376,389,1.67,392,3.037,403,1.718,404,2.62,405,3.553,412,2.971,420,3.589,428,3.553,485,3.176,488,2.676,489,2.913,501,2.54,504,1.546,509,3.553,510,3.553,554,1.408,561,3.176,563,5.538,581,0.903,630,2.148,632,2.148,649,2.148,701,1.408,725,2.62,728,2.858,729,2.858,730,2.858,735,2.971,738,1.408,741,5.454,742,4.809,743,1.948,744,3.505,745,3.505,746,3.505,747,3.505,748,4.249,749,3.505,750,4.249,751,4.339,752,2.766,753,4.753,754,4.753,755,3.505,756,2.298,757,2.882,758,3.505,759,1.862,760,4.249,761,5.118,762,4.249,763,2.604,764,2.298,765,2.298,766,2.298,767,2.298,768,2.298,769,2.298,770,2.971,771,3.505,772,3.505,773,3.505,774,2.298,775,3.505,776,4.753,777,3.505,778,2.971,779,4.249,780,3.505,781,5.118,782,2.298,783,3.505,784,3.505,785,3.505,786,3.505,787,3.505,788,3.505,789,3.505,790,2.298,791,2.298,792,2.298,793,2.298,794,2.298,795,2.298,796,1.948,797,2.298,798,1.718,799,1.948,800,1.718,801,1.294,802,2.298,803,1.948,804,3.505,805,3.505,806,2.298,807,2.298,808,2.298,809,2.298,810,2.298,811,2.298,812,2.298,813,2.298,814,2.298,815,2.298,816,2.298,817,2.298,818,3.505,819,2.298,820,1.718,821,2.298,822,2.298,823,2.298,824,2.298,825,2.298,826,2.298,827,6.434,828,1.948,829,2.298,830,5.394,831,2.298,832,2.298,833,2.298,834,2.298,835,2.298,836,2.298,837,6.486,838,2.298,839,2.298,840,2.298]],["title/guards/DocumentLoadedGuard.html",[188,2.31,841,2.567]],["body/guards/DocumentLoadedGuard.html",[3,0.324,4,0.286,9,0.249,11,0.853,19,1.831,24,2.67,29,0.73,35,1.468,37,2.852,40,1.377,42,1.167,43,0.025,44,1.027,45,0.489,46,1.027,47,3.086,51,1.251,55,2.105,68,1.468,71,0.541,72,0.489,74,0.324,75,0.534,77,0.919,78,3.086,149,0.015,150,0.019,151,0.015,184,2.268,187,5.61,188,3.686,196,1.831,211,2.466,252,1.507,355,2.931,356,3.614,359,2.473,375,2.852,431,2.931,479,2.67,579,3.373,580,2.105,612,3.086,842,4.358,843,5.083,844,3.694,845,5.48,846,5.48,847,5.48,848,5.48,849,4.702,850,3.686,851,5.853,852,4.358,853,5.48,854,3.686,855,5.48,856,5.48,857,4.358,858,5.48,859,2.648,860,3.694,861,2.931,862,4.358,863,4.358,864,3.257,865,4.358]],["title/pipes/EscapeHtmlPipe.html",[757,1.934,759,1.186]],["body/pipes/EscapeHtmlPipe.html",[3,0.362,4,0.319,9,0.278,11,0.913,19,2.042,21,1.574,35,1.302,40,1.221,42,1.302,43,0.025,44,1.483,45,0.546,46,1.145,51,0.938,65,0.965,71,0.405,72,0.546,74,0.362,75,0.596,77,0.815,122,2.462,149,0.017,150,0.02,151,0.017,244,1.782,252,1.221,501,2.81,751,4.969,757,3.3,759,2.346,866,2.736,867,4.969,868,4.12,869,5.861,870,5.861,871,5.861,872,3.543,873,5.861,874,4.859,875,5.861,876,3.592,877,4.859,878,4.859,879,4.859,880,4.859,881,4.859,882,4.859,883,4.859,884,4.859]],["title/components/GraphComponent.html",[0,0.576,137,1.186]],["body/components/GraphComponent.html",[0,0.946,1,0.58,2,1.379,3,0.125,4,0.11,5,0.756,6,0.756,7,1.797,8,0.756,9,0.096,11,0.622,12,1.541,17,1.337,19,1.15,21,0.544,22,2.262,23,1.987,25,1.076,27,1.076,29,0.669,30,0.733,35,0.733,37,1.424,40,1.691,42,1.178,43,0.025,44,1.172,45,0.722,46,1.036,51,1.147,52,2.34,53,1.47,54,1.183,57,2.32,59,1.994,63,1.929,65,0.395,68,0.45,71,0.415,72,0.189,74,0.125,75,0.206,77,0.459,78,3.677,85,1.728,89,1.256,90,1.13,94,1.53,96,2.655,97,2.587,102,1.13,111,0.946,115,1.13,121,0.544,122,1.15,123,1.797,124,0.756,125,1.797,126,0.756,127,0.756,128,0.58,129,0.756,130,0.58,131,0.706,132,0.756,133,0.58,134,0.756,135,0.58,136,0.756,137,1.379,138,0.756,139,0.58,140,0.756,141,0.544,142,0.756,143,0.544,144,0.756,145,0.544,146,0.706,147,0.756,148,0.756,149,0.006,150,0.01,151,0.006,166,3.429,191,0.928,196,1.455,207,2.589,208,2.589,210,2.589,211,1.231,212,2.79,213,2.37,214,2.288,215,2.79,220,2.918,223,1.004,224,1.677,225,1.13,232,1.15,238,2.985,241,2.936,246,1.981,252,0.422,261,1.008,266,1.527,315,1.424,327,1.15,331,2.589,349,2.046,350,1.424,352,1.677,355,1.13,356,2.79,358,3.524,359,1.008,362,1.322,363,1.95,367,2.32,368,2.32,375,1.802,392,1.541,399,2.454,404,2.046,405,2.985,409,0.811,419,1.541,431,1.13,433,1.256,434,1.677,479,1.029,488,0.946,489,1.029,500,2.046,538,1.424,554,1.029,561,2.985,562,1.424,583,3.457,584,3.103,585,3.527,589,1.424,590,1.322,591,2.447,592,1.541,593,2.122,600,1.802,605,1.541,606,3.047,607,1.673,608,3.942,681,1.677,696,2.476,716,1.029,719,2.476,800,1.256,801,0.946,828,1.424,849,2.046,872,0.946,885,1.424,886,3.463,887,3.463,888,2.737,889,3.463,890,4.879,891,3.993,892,2.737,893,2.737,894,3.463,895,3.993,896,3.993,897,3.993,898,3.993,899,3.993,900,3.993,901,3.993,902,3.993,903,2.737,904,3.463,905,3.463,906,3.463,907,3.463,908,3.463,909,3.463,910,3.463,911,3.463,912,3.993,913,4.715,914,2.737,915,2.737,916,1.68,917,3.993,918,2.737,919,3.993,920,1.68,921,3.993,922,1.68,923,2.737,924,1.68,925,2.737,926,1.68,927,3.993,928,3.463,929,2.737,930,2.737,931,2.737,932,2.737,933,2.737,934,2.737,935,1.68,936,2.985,937,1.68,938,2.737,939,3.993,940,1.68,941,2.737,942,1.68,943,3.385,944,2.737,945,1.68,946,1.68,947,5.183,948,2.985,949,2.737,950,1.68,951,1.68,952,1.68,953,2.737,954,1.68,955,2.046,956,2.737,957,2.046,958,1.68,959,1.68,960,1.68,961,1.68,962,1.68,963,1.68,964,2.737,965,3.997,966,1.68,967,1.68,968,2.737,969,3.463,970,2.737,971,2.737,972,2.737,973,2.737,974,1.68,975,1.68,976,1.68,977,1.256,978,1.68,979,3.385,980,2.737,981,2.737,982,1.68,983,2.737,984,2.737,985,1.68,986,2.737,987,2.737,988,4.397,989,1.68,990,4.715,991,2.737,992,1.68,993,2.737,994,3.993,995,1.68,996,1.68,997,1.68,998,1.68,999,1.68,1000,1.68,1001,1.68,1002,1.68,1003,2.32,1004,2.737,1005,2.737,1006,1.68,1007,2.32,1008,1.68,1009,1.68,1010,2.737,1011,1.68,1012,1.68,1013,2.737,1014,1.68,1015,1.68,1016,2.737,1017,2.737,1018,1.68,1019,1.68,1020,1.68,1021,1.68,1022,3.463,1023,3.463,1024,1.68,1025,1.68,1026,1.68,1027,1.68,1028,1.68,1029,1.68,1030,1.68,1031,1.68,1032,1.68,1033,1.68,1034,1.68,1035,1.68,1036,1.68,1037,1.68,1038,1.68,1039,2.737,1040,2.737,1041,1.68,1042,1.68,1043,1.68,1044,1.68,1045,1.68,1046,1.68,1047,1.68,1048,1.68,1049,1.68,1050,1.68,1051,1.68,1052,1.68,1053,3.463,1054,1.68,1055,1.68,1056,1.68,1057,1.68,1058,1.68,1059,1.68,1060,1.68,1061,1.68,1062,1.68,1063,1.68,1064,1.68,1065,1.68,1066,2.737,1067,1.68,1068,1.68,1069,1.68,1070,1.68,1071,1.68,1072,1.68,1073,1.68,1074,1.68,1075,1.68,1076,1.68,1077,1.68,1078,1.68,1079,1.68,1080,1.68,1081,1.68,1082,1.68,1083,1.68,1084,2.737,1085,1.68,1086,1.68,1087,1.68,1088,1.68,1089,2.046,1090,1.68,1091,2.737,1092,1.68,1093,1.68,1094,1.68,1095,2.737,1096,1.68,1097,1.68,1098,1.68,1099,3.993,1100,1.68,1101,2.737,1102,1.68,1103,1.68,1104,1.68,1105,1.68,1106,1.68,1107,1.68,1108,1.68,1109,1.68,1110,1.68,1111,2.737,1112,1.68,1113,1.68,1114,1.68,1115,1.68,1116,1.68,1117,1.68,1118,2.737,1119,2.737,1120,1.68,1121,1.68,1122,1.68,1123,1.68,1124,1.68,1125,2.737,1126,1.68,1127,1.424,1128,3.463,1129,1.68,1130,1.424,1131,1.68,1132,1.424,1133,1.68,1134,1.68]],["title/interfaces/GraphData.html",[201,0.863,607,1.659]],["body/interfaces/GraphData.html",[3,0.161,4,0.22,9,0.124,11,0.338,12,1.221,17,0.659,29,0.687,30,0.898,43,0.025,45,0.376,51,1.096,54,0.905,59,2.055,65,0.986,68,0.898,71,0.28,74,0.477,77,1.143,85,1.318,94,1.316,149,0.008,150,0.012,151,0.012,191,1.857,201,1.464,203,1.048,205,1.234,223,0.843,228,3.01,244,1.894,246,1.722,247,1.888,252,1.599,261,1.836,264,1.959,266,1.494,315,1.129,327,1.409,329,0.911,341,2.512,359,2.596,364,0.976,369,2.542,376,1.745,383,0.976,384,1.509,386,0.852,389,2.231,409,2.815,419,1.888,430,1.888,435,1.409,442,3.196,444,3.411,501,2.095,519,0.911,529,3.094,538,1.745,573,1.329,574,1.745,575,1.129,576,1.221,577,1.129,578,1.221,579,2.594,580,1.048,581,0.852,582,1.459,583,2.512,584,2.596,585,1.888,586,2.255,587,2.255,588,1.459,589,2.86,590,3.2,591,2.512,592,1.221,593,1.329,594,1.459,595,1.459,596,1.459,597,2.255,598,1.459,599,1.459,600,2.594,601,1.459,602,2.255,603,2.757,604,2.757,605,1.888,606,2.055,607,1.62,608,3.571,609,3.545,610,2.055,611,3.818,612,3.196,613,1.329,614,1.459,615,1.459,616,1.329,617,1.459,618,2.826,619,2.826,620,1.329,621,1.459,622,1.459,623,1.459,624,1.459,625,3.102,626,1.459,627,2.055,628,2.512,629,1.329,630,1.329,631,1.459,632,2.055,633,1.459,634,1.459,635,1.888,636,2.055,637,1.329,638,1.329,639,2.255,640,2.255,641,2.255,642,2.255,643,1.459,644,2.255,645,2.255,646,2.255,647,1.459,648,1.329,649,2.512,650,1.459,651,1.459,652,1.459,653,3.696,654,1.329,655,2.757,656,3.353,657,2.255,658,2.255,659,1.329,660,2.255,661,2.255,662,1.459,663,1.459,664,1.459,665,1.459,666,2.255,667,1.459,668,2.255,669,2.255,670,2.255,671,2.255,672,1.459,673,1.459,674,1.459,675,1.459,676,1.459,677,1.459,678,1.459,679,2.255,680,2.255,681,2.826,682,2.255,683,2.055,684,1.459,685,3.102,686,2.255,687,2.255,688,2.255,689,2.255,690,2.255,691,1.459,692,2.255,693,1.459,694,1.888,695,1.459,696,1.221,697,1.459,698,2.757,699,1.459,700,3.102,701,1.329,702,2.512,703,1.459,704,1.459,705,1.459,706,2.255,707,1.459,708,2.757,709,1.459,710,2.255,711,1.459,712,2.255,713,2.255,714,1.459,715,1.459,716,2.055,717,1.459,718,1.459,719,1.221,720,1.459,721,1.459,722,1.459]],["title/interfaces/GraphLink.html",[201,0.863,600,1.787]],["body/interfaces/GraphLink.html",[3,0.159,4,0.325,9,0.122,11,0.334,12,1.207,17,0.652,29,0.879,30,0.89,43,0.025,45,0.515,46,0.783,51,1.092,54,1.158,59,2.076,65,0.994,68,0.89,71,0.277,74,0.476,77,1.141,85,1.306,94,1.308,149,0.007,150,0.012,151,0.012,191,1.855,201,1.459,203,1.036,205,0.789,223,0.835,228,3.002,244,1.89,246,1.709,247,1.871,252,1.596,261,1.826,264,1.949,266,1.485,315,1.116,327,1.396,329,0.901,341,2.493,359,2.594,364,0.965,369,2.537,376,1.729,383,0.965,384,1.495,386,0.843,389,2.223,409,2.805,419,2.291,430,1.871,435,1.709,442,3.184,444,3.401,501,2.083,519,0.901,529,3.081,538,1.729,573,1.314,574,1.729,575,1.116,576,1.207,577,1.116,578,1.207,579,2.581,580,1.036,581,0.843,582,1.442,583,2.809,584,2.58,585,2.291,586,2.737,587,2.737,588,1.442,589,2.581,590,3.195,591,2.493,592,1.207,593,1.314,594,1.442,595,1.442,596,1.442,597,2.235,598,1.442,599,2.235,600,2.385,601,3.083,602,1.442,603,2.235,604,2.235,605,1.207,606,1.314,607,1.036,608,3.215,609,2.737,610,2.036,611,3.804,612,3.184,613,1.314,614,1.442,615,1.442,616,1.314,617,1.442,618,2.809,619,2.809,620,1.314,621,1.442,622,1.442,623,1.442,624,1.442,625,3.083,626,1.442,627,2.036,628,2.493,629,1.314,630,1.314,631,1.442,632,2.036,633,1.442,634,1.442,635,1.871,636,2.036,637,1.314,638,1.314,639,2.235,640,2.235,641,2.235,642,2.235,643,1.442,644,2.235,645,2.235,646,2.235,647,1.442,648,1.314,649,2.493,650,1.442,651,1.442,652,1.442,653,3.681,654,1.314,655,2.737,656,3.336,657,2.235,658,2.235,659,1.314,660,2.235,661,2.235,662,1.442,663,1.442,664,1.442,665,1.442,666,2.235,667,1.442,668,2.235,669,2.235,670,2.235,671,2.235,672,1.442,673,1.442,674,1.442,675,1.442,676,1.442,677,1.442,678,1.442,679,2.235,680,2.235,681,2.809,682,2.235,683,2.036,684,1.442,685,3.083,686,2.235,687,2.235,688,2.235,689,2.235,690,2.235,691,1.442,692,2.235,693,1.442,694,1.871,695,1.442,696,1.207,697,1.442,698,2.737,699,1.442,700,3.083,701,1.314,702,2.493,703,1.442,704,1.442,705,1.442,706,2.235,707,1.442,708,2.737,709,1.442,710,2.235,711,1.442,712,2.235,713,2.235,714,1.442,715,1.442,716,2.036,717,1.442,718,1.442,719,1.207,720,1.442,721,1.442,722,1.442]],["title/interfaces/GraphNode.html",[201,0.863,589,1.787]],["body/interfaces/GraphNode.html",[3,0.154,4,0.212,9,0.118,11,0.322,12,1.164,17,0.628,29,0.866,30,0.865,43,0.025,45,0.645,46,1.47,51,1.078,54,0.877,59,2.115,65,0.986,68,0.865,71,0.269,74,0.473,77,1.137,85,1.269,94,1.283,149,0.007,150,0.011,151,0.011,191,1.849,201,1.443,203,0.999,205,0.761,223,0.812,228,2.977,244,1.874,246,1.67,247,1.818,252,1.584,261,1.795,264,1.916,266,1.456,315,1.076,327,1.357,329,0.868,341,2.436,359,2.588,364,0.93,369,2.52,376,1.681,383,0.93,384,1.453,386,0.812,389,2.196,409,2.774,419,2.238,430,1.818,435,1.67,442,3.145,444,3.369,501,2.048,519,0.868,529,3.04,538,1.681,573,1.267,574,1.681,575,1.076,576,1.164,577,1.076,578,1.164,579,2.537,580,0.999,581,0.812,582,1.39,583,2.754,584,2.53,585,2.238,586,2.674,587,2.674,588,2.172,589,2.689,590,3.221,591,3.167,592,2.53,593,2.754,594,3.022,595,3.022,596,3.022,597,3.476,598,3.022,599,1.39,600,2.069,601,1.39,602,1.39,603,2.172,604,2.172,605,1.164,606,1.267,607,0.999,608,3.167,609,2.674,610,1.979,611,3.758,612,3.145,613,1.267,614,1.39,615,1.39,616,1.267,617,1.39,618,2.754,619,2.754,620,1.267,621,1.39,622,1.39,623,1.39,624,1.39,625,3.022,626,1.39,627,1.979,628,2.436,629,1.267,630,1.267,631,1.39,632,1.979,633,1.39,634,1.39,635,1.818,636,1.979,637,1.267,638,1.267,639,2.172,640,2.172,641,2.172,642,2.172,643,1.39,644,2.172,645,2.172,646,2.172,647,1.39,648,1.267,649,2.436,650,1.39,651,1.39,652,1.39,653,3.631,654,1.267,655,2.674,656,3.279,657,2.172,658,2.172,659,1.267,660,2.172,661,2.172,662,1.39,663,1.39,664,1.39,665,1.39,666,2.172,667,1.39,668,2.172,669,2.172,670,2.172,671,2.172,672,1.39,673,1.39,674,1.39,675,1.39,676,1.39,677,1.39,678,1.39,679,2.172,680,2.172,681,2.754,682,2.172,683,1.979,684,1.39,685,3.022,686,2.172,687,2.172,688,2.172,689,2.172,690,2.172,691,1.39,692,2.172,693,1.39,694,1.818,695,1.39,696,1.164,697,1.39,698,2.674,699,1.39,700,3.022,701,1.267,702,2.436,703,1.39,704,1.39,705,1.39,706,2.172,707,1.39,708,2.674,709,1.39,710,2.172,711,1.39,712,2.172,713,2.172,714,1.39,715,1.39,716,1.979,717,1.39,718,1.39,719,1.164,720,1.39,721,1.39,722,1.39]],["title/modules/HomeModule.html",[152,1.113,1135,2.31]],["body/modules/HomeModule.html",[3,0.31,4,0.274,9,0.238,43,0.025,71,0.586,72,0.468,74,0.31,75,0.511,121,1.35,128,2.258,130,2.258,133,2.258,135,2.258,137,2.258,139,2.258,143,2.119,145,2.119,149,0.015,150,0.019,151,0.015,152,1.35,154,1.439,155,2.169,156,3.307,157,2.554,158,2.554,159,1.875,165,3.404,166,3,167,2.554,168,2.169,170,2.574,171,2.574,176,3.116,219,1.751,432,3.534,515,3.116,738,2.554,742,3.116,1135,4.811,1136,3.534,1137,3.534,1138,3.534,1139,4.009,1140,4.168,1141,3.983,1142,2.804,1143,3.534,1144,4.517,1145,5.328,1146,3.116,1147,4.168,1148,4.168,1149,4.168,1150,4.168,1151,4.168,1152,5.328,1153,2.554,1154,3.534,1155,4.168,1156,4.168,1157,4.168,1158,3.265,1159,4.168]],["title/modules/HomeRoutes.html",[152,1.113,1139,2.105]],["body/modules/HomeRoutes.html",[0,0.882,3,0.392,4,0.345,9,0.301,18,3.665,43,0.025,71,0.543,72,0.591,74,0.392,75,0.645,139,2.122,149,0.018,150,0.021,151,0.018,154,1.817,159,2.368,170,2.543,171,2.969,183,4.134,184,2.739,191,1.41,192,3.934,1139,3.766,1143,4.462,1160,5.263,1161,4.462]],["title/components/InitComponent.html",[0,0.576,141,1.113]],["body/components/InitComponent.html",[0,0.798,1,0.679,2,1.073,3,0.146,4,0.129,5,0.885,6,0.885,7,0.885,8,0.885,9,0.348,11,0.825,13,2.463,14,2.634,16,1.324,17,0.598,21,0.637,22,2.36,23,2.073,25,1.221,27,1.221,29,0.521,30,0.833,35,0.833,37,1.617,40,1.551,42,1.276,43,0.025,44,1.249,45,0.635,46,1.122,47,2.463,51,1.06,52,2.211,53,0.725,54,0.85,55,2.301,61,1.324,65,0.816,68,1.42,69,2.323,71,0.442,72,0.221,74,0.146,75,0.241,77,0.971,78,2.463,85,2.159,87,2.918,89,1.471,91,2.918,92,2.323,93,1.904,94,1.513,95,1.471,96,3.183,97,2.942,98,3.093,99,3.26,100,3.248,101,2.859,102,4.196,103,3.961,104,2.984,105,2.36,106,2.36,107,1.471,108,1.668,109,1.904,111,2.168,112,1.206,113,2.36,114,1.324,115,3.565,117,2.68,118,2.323,120,1.206,121,0.637,122,1.306,123,1.398,124,0.885,125,1.968,126,0.885,127,0.885,128,0.679,129,0.885,130,0.679,131,0.827,132,0.885,133,0.679,134,0.885,135,0.679,136,0.885,137,0.679,138,0.885,139,0.679,140,0.885,141,1.417,142,0.885,143,0.637,144,0.885,145,0.637,146,0.827,147,0.885,148,0.885,149,0.007,150,0.011,151,0.007,184,1.024,191,1.032,211,1.398,213,1.306,219,2.126,223,0.968,226,2.323,232,1.306,236,1.024,244,1.76,246,1.306,249,2.323,252,0.968,277,1.324,293,1.668,327,2.432,355,1.324,356,3.073,358,2.323,359,2.416,362,1.501,363,1.75,375,2.276,376,1.617,398,2.68,399,2.004,414,1.471,431,1.324,434,1.206,435,1.306,437,2.323,479,1.206,482,1.471,483,1.471,484,1.324,488,1.75,489,1.904,490,1.471,491,1.471,492,1.668,501,2.727,504,1.324,507,2.323,508,1.668,509,1.471,510,1.471,511,1.668,513,1.668,539,1.471,564,1.668,565,2.634,569,1.668,571,1.668,724,2.09,725,2.323,770,2.634,849,2.323,851,4.908,854,2.942,864,2.323,965,1.668,1127,2.634,1130,1.668,1132,1.668,1162,1.668,1163,3.108,1164,3.108,1165,6.299,1166,5.3,1167,3.851,1168,3.108,1169,3.851,1170,3.851,1171,3.851,1172,3.851,1173,5.166,1174,3.108,1175,3.108,1176,4.374,1177,4.374,1178,3.108,1179,3.108,1180,4.374,1181,4.374,1182,3.695,1183,5.654,1184,4.374,1185,3.108,1186,3.108,1187,3.108,1188,4.291,1189,2.323,1190,4.374,1191,4.374,1192,3.108,1193,3.108,1194,3.108,1195,1.968,1196,2.323,1197,4.374,1198,3.851,1199,3.108,1200,1.968,1201,3.108,1202,2.09,1203,1.968,1204,1.968,1205,3.108,1206,4.762,1207,3.108,1208,1.968,1209,3.108,1210,3.108,1211,5.062,1212,5.79,1213,1.968,1214,3.108,1215,2.634,1216,4.374,1217,3.108,1218,3.108,1219,1.968,1220,5.493,1221,1.968,1222,1.968,1223,1.968,1224,3.708,1225,3.108,1226,3.961,1227,1.968,1228,3.108,1229,1.968,1230,3.108,1231,2.634,1232,3.851,1233,3.108,1234,1.968,1235,1.968,1236,1.968,1237,1.968,1238,1.668,1239,1.968,1240,1.968,1241,4.762,1242,1.968,1243,3.108,1244,3.108,1245,3.108,1246,3.108,1247,1.668,1248,1.968,1249,1.968,1250,3.108,1251,1.968,1252,1.968,1253,1.968,1254,1.968,1255,1.968,1256,1.968,1257,3.108,1258,1.968,1259,3.108,1260,1.968,1261,1.968,1262,1.968,1263,1.668,1264,1.471,1265,1.968,1266,1.968,1267,1.968,1268,1.668,1269,1.968,1270,1.968,1271,1.968,1272,1.968,1273,1.968,1274,3.108,1275,2.634,1276,3.108,1277,3.108,1278,3.108,1279,3.108,1280,1.968,1281,3.108,1282,3.851,1283,3.108,1284,1.968,1285,1.968,1286,1.968,1287,1.968,1288,1.968,1289,1.968,1290,2.323,1291,1.968,1292,1.968,1293,1.968,1294,1.108,1295,3.108,1296,3.108,1297,1.668,1298,1.968,1299,1.968,1300,1.968,1301,1.968,1302,1.968]],["title/modules/InitModule.html",[152,1.113,1303,2.31]],["body/modules/InitModule.html",[3,0.362,4,0.319,9,0.278,43,0.025,71,0.567,72,0.546,74,0.362,75,0.597,121,1.577,141,2.202,149,0.017,150,0.02,151,0.017,152,1.577,154,1.68,155,2.533,156,3.546,157,2.982,158,2.982,159,2.19,165,3.537,166,3.303,167,2.982,168,2.533,170,2.834,171,2.834,176,3.638,1141,4.385,1142,3.274,1144,4.973,1146,3.638,1303,4.722,1304,4.126,1305,4.126,1306,4.126,1307,4.165,1308,4.867,1309,4.126,1310,4.867]],["title/modules/InitRoutes.html",[152,1.113,1307,2.105]],["body/modules/InitRoutes.html",[0,0.882,3,0.392,4,0.345,9,0.301,18,3.665,43,0.025,71,0.543,72,0.591,74,0.392,75,0.645,141,1.991,149,0.018,150,0.021,151,0.018,154,1.817,159,2.368,170,2.543,171,2.969,183,4.134,184,2.739,191,1.41,192,3.934,1161,4.462,1307,3.766,1309,4.462,1311,5.263]],["title/injectables/JsonValidateService.html",[859,1.659,1182,2.31]],["body/injectables/JsonValidateService.html",[3,0.296,4,0.261,9,0.328,11,0.805,24,2.436,29,0.666,30,1.065,35,1.384,40,0.999,42,1.065,43,0.025,44,0.937,45,0.793,46,0.937,47,2.909,51,0.767,55,2.496,59,1.571,65,0.877,71,0.479,72,0.446,74,0.296,75,0.487,77,0.666,104,2.909,149,0.014,150,0.018,151,0.02,191,1.538,211,2.325,223,0.999,244,1.571,252,1.299,359,2.421,396,3.476,399,2.068,434,2.436,574,2.689,575,2.689,576,2.909,577,2.689,578,2.909,854,2.673,859,2.496,861,2.673,955,2.971,1173,4.381,1182,3.476,1188,5.154,1189,3.863,1215,4.381,1226,4.292,1263,3.37,1264,4.292,1268,3.37,1312,2.673,1313,3.863,1314,2.971,1315,5.167,1316,5.167,1317,3.975,1318,5.154,1319,4.381,1320,3.37,1321,3.975,1322,3.975,1323,2.971,1324,5.653,1325,5.576,1326,4.381,1327,3.37,1328,3.975,1329,3.975]],["title/injectables/LoadingService.html",[39,2.105,859,1.659]],["body/injectables/LoadingService.html",[2,1.667,3,0.267,4,0.235,9,0.205,11,0.909,16,3.927,24,2.198,29,0.601,30,1.294,31,5.166,32,5.166,33,5.166,35,1.294,39,2.959,40,1.66,42,1.462,43,0.025,44,1.286,45,0.613,46,1.286,47,2.719,48,4.093,51,1.053,52,2.311,53,2.311,54,1.574,59,1.66,61,3.927,62,3.248,63,2.82,64,4.093,65,0.787,71,0.403,72,0.403,74,0.267,75,0.44,77,0.915,78,3.82,149,0.013,150,0.017,151,0.013,211,2.456,223,1.577,232,2.637,244,1.468,327,2.028,362,2.333,579,3.266,580,1.733,859,2.333,861,2.413,1003,5.321,1312,2.413,1330,3.041,1331,4.828,1332,6.093,1333,6.093,1334,6.093,1335,4.828,1336,4.828,1337,4.828,1338,4.828,1339,3.587,1340,5.321,1341,4.828,1342,3.587,1343,4.828,1344,3.587,1345,4.828,1346,3.587,1347,4.691,1348,4.828,1349,3.587,1350,5.321,1351,4.828,1352,4.828,1353,3.587,1354,4.828,1355,3.587,1356,4.828,1357,3.587,1358,4.627,1359,3.587,1360,3.587,1361,3.587,1362,3.587]],["title/modules/MaterialModule.html",[152,1.113,165,1.787]],["body/modules/MaterialModule.html",[3,0.328,4,0.29,9,0.252,43,0.024,71,0.603,72,0.495,74,0.328,75,0.541,118,3.298,149,0.015,150,0.019,151,0.015,154,2.182,156,2.484,159,1.985,165,2.874,170,2.132,171,2.668,191,1.182,411,3.741,539,4.129,545,3.741,1238,3.741,1363,3.298,1364,4.683,1365,4.412,1366,4.683,1367,4.412,1368,4.683,1369,4.412,1370,4.683,1371,4.412,1372,4.683,1373,5.523,1374,4.683,1375,4.412,1376,4.683,1377,4.412,1378,4.683,1379,4.412,1380,4.683,1381,4.683,1382,4.412,1383,4.683,1384,4.412,1385,4.683,1386,4.412,1387,4.683,1388,4.412,1389,5.523,1390,4.683,1391,4.412,1392,4.683,1393,4.412,1394,4.412,1395,4.683,1396,4.412,1397,4.683,1398,4.412,1399,4.683,1400,4.412,1401,4.683,1402,4.683,1403,5.523,1404,4.683,1405,4.683,1406,4.412,1407,4.683,1408,4.412,1409,4.683,1410,4.683,1411,4.412,1412,4.683,1413,4.412,1414,4.683,1415,4.412,1416,4.683,1417,4.412,1418,4.683,1419,4.412,1420,4.683,1421,4.412]],["title/pipes/PairSplitFirstPipe.html",[759,1.186,1422,1.659]],["body/pipes/PairSplitFirstPipe.html",[3,0.284,4,0.25,9,0.218,11,0.783,17,1.16,19,2.514,21,1.236,35,1.022,40,0.959,42,1.022,43,0.025,44,1.505,45,0.429,46,0.899,49,3.084,51,0.737,53,1.405,54,1.373,65,1.02,71,0.42,72,0.429,74,0.445,75,0.733,77,1.121,149,0.013,150,0.018,151,0.013,227,3.114,244,1.891,252,1.504,261,2.29,264,2.212,266,1.824,389,1.5,519,2.365,581,2.51,752,1.717,759,2.399,763,3.812,801,2.149,866,2.149,872,3.597,876,3.812,1294,3.971,1422,2.431,1423,3.084,1424,2.339,1425,4.025,1426,3.786,1427,4.025,1428,3.816,1429,4.184,1430,3.786,1431,2.567,1432,1.844,1433,2.567,1434,2.567,1435,1.844,1436,2.567,1437,3.384,1438,3.384,1439,2.567,1440,2.567,1441,2.567,1442,2.567,1443,2.567,1444,2.567,1445,2.567]],["title/pipes/PairSplitSecondPipe.html",[759,1.186,1432,1.659]],["body/pipes/PairSplitSecondPipe.html",[3,0.284,4,0.25,9,0.218,11,0.783,17,1.16,19,2.514,21,1.236,35,1.022,40,0.959,42,1.022,43,0.025,44,1.505,45,0.429,46,0.899,49,3.084,51,0.737,53,1.405,54,1.373,65,1.02,71,0.42,72,0.429,74,0.445,75,0.733,77,1.121,149,0.013,150,0.018,151,0.013,227,3.114,244,1.891,252,1.504,261,2.073,264,2.445,266,1.824,389,1.5,519,2.365,581,2.51,752,1.717,759,2.399,763,3.812,801,2.149,866,2.149,872,3.597,876,3.812,1294,3.971,1422,1.844,1423,3.084,1424,2.339,1425,4.025,1426,3.786,1427,4.025,1429,4.184,1430,3.786,1431,2.567,1432,2.431,1433,2.567,1434,2.567,1435,1.844,1436,2.567,1437,3.384,1438,3.384,1439,2.567,1440,2.567,1441,2.567,1442,2.567,1443,2.567,1444,2.567,1445,2.567,1446,3.816]],["title/pipes/PairUpPipe.html",[759,1.186,1435,1.659]],["body/pipes/PairUpPipe.html",[3,0.28,4,0.247,9,0.215,11,0.775,17,1.514,19,2.499,21,1.217,35,1.007,40,0.944,42,1.007,43,0.025,44,1.499,45,0.422,46,0.885,49,3.423,51,0.725,53,1.383,54,1.313,65,1.022,71,0.415,72,0.422,74,0.443,75,0.729,77,1.118,149,0.013,150,0.017,151,0.013,227,3.095,244,1.882,252,1.495,261,2.19,264,2.338,266,2.005,389,1.957,519,2.092,581,2.5,752,1.691,759,2.395,763,4.037,801,2.116,866,2.116,872,3.581,876,3.792,1294,3.965,1422,1.815,1423,3.052,1424,2.303,1425,3.757,1426,3.35,1427,3.757,1429,4.001,1430,3.757,1431,2.527,1432,1.815,1433,2.527,1434,3.35,1435,2.406,1436,3.35,1437,4.001,1438,4.001,1439,3.35,1440,3.35,1441,3.35,1442,2.527,1443,2.527,1444,2.527,1445,2.527,1447,3.758]],["title/modules/PipesModule.html",[152,1.113,1158,2.105]],["body/modules/PipesModule.html",[3,0.329,4,0.29,9,0.253,43,0.025,71,0.528,72,0.497,74,0.329,75,0.542,121,1.433,149,0.015,150,0.019,151,0.015,152,1.433,154,1.528,155,2.303,156,3.399,157,2.711,158,3.391,159,2.716,166,3.115,167,2.711,168,2.303,170,2.138,171,2.673,752,3.159,757,3.953,796,3.751,798,3.307,803,3.751,1141,4.136,1142,2.976,1158,4.37,1422,3.392,1432,3.392,1435,3.392,1448,3.751,1449,3.751,1450,3.751,1451,4.425,1452,3.751]],["title/injectables/QueryService.html",[356,1.787,859,1.659]],["body/injectables/QueryService.html",[3,0.135,4,0.119,9,0.104,11,0.954,16,1.96,24,1.113,29,0.304,30,0.781,35,0.781,37,1.9,38,1.539,39,3.146,40,1.585,42,1.622,43,0.025,44,1.427,45,0.702,46,1.603,47,2.353,51,1.297,52,1.073,53,1.344,54,1.01,59,1.816,61,1.96,65,0.989,68,0.781,71,0.408,72,0.204,74,0.135,75,0.223,77,1.123,78,3.311,149,0.006,150,0.01,151,0.006,152,0.588,191,0.486,196,0.763,223,1.15,228,0.877,232,1.224,243,2.471,244,0.886,247,1.641,249,2.179,252,1.522,261,2.23,264,2.311,266,1.83,327,1.756,329,1.224,356,1.517,359,2.654,369,2.573,376,2.175,386,1.642,389,1.145,396,1.221,401,2.179,409,2.36,410,2.471,433,1.357,434,1.786,439,1.539,442,3.181,444,3.703,479,1.786,501,2.722,519,2.774,529,3.311,538,2.175,543,1.96,574,1.517,575,1.517,579,2.866,580,0.877,590,3.313,605,2.353,607,2.211,610,2.561,612,1.641,613,1.786,616,1.786,618,2.994,619,3.271,620,1.786,627,1.786,628,2.804,629,1.786,635,2.353,636,2.561,637,1.786,638,1.786,648,1.786,654,1.786,659,1.786,683,1.113,719,2.056,759,0.627,859,1.408,860,1.539,861,1.221,1312,1.221,1340,2.471,1347,2.179,1350,3.88,1358,1.539,1453,1.539,1454,2.914,1455,2.914,1456,4.179,1457,4.576,1458,3.651,1459,3.651,1460,5.88,1461,3.651,1462,2.471,1463,2.471,1464,2.471,1465,2.471,1466,2.471,1467,2.471,1468,2.471,1469,2.914,1470,2.471,1471,2.471,1472,2.914,1473,2.471,1474,2.914,1475,2.914,1476,2.914,1477,2.914,1478,2.914,1479,1.816,1480,5.773,1481,6.48,1482,6.546,1483,1.816,1484,2.914,1485,1.816,1486,1.816,1487,2.914,1488,1.816,1489,2.914,1490,1.816,1491,1.816,1492,2.914,1493,1.816,1494,2.914,1495,2.471,1496,2.471,1497,2.914,1498,2.914,1499,1.816,1500,1.816,1501,2.914,1502,1.816,1503,1.816,1504,2.914,1505,1.816,1506,2.914,1507,2.914,1508,2.914,1509,2.914,1510,2.914,1511,1.816,1512,2.914,1513,2.914,1514,1.816,1515,1.816,1516,2.914,1517,2.914,1518,2.471,1519,1.816,1520,1.816,1521,1.816,1522,1.816,1523,1.816,1524,1.816,1525,1.816,1526,1.816,1527,1.816,1528,2.914,1529,1.816,1530,5.773,1531,1.816,1532,1.816,1533,1.816,1534,1.816,1535,1.816,1536,1.816,1537,1.816,1538,1.816,1539,1.816,1540,1.816,1541,1.816,1542,1.816,1543,1.816,1544,1.816,1545,1.816,1546,2.914,1547,1.816,1548,1.816,1549,1.816]],["title/interfaces/SelectedDocument.html",[201,0.863,360,1.934]],["body/interfaces/SelectedDocument.html",[0,0.909,2,1.223,3,0.264,4,0.233,9,0.202,11,0.552,15,3.221,22,1.392,23,1.223,25,1.392,27,1.392,29,0.594,30,1.283,34,4.342,43,0.025,45,0.652,52,2.234,54,0.782,55,1.712,65,0.988,68,1.283,71,0.399,72,0.398,74,0.356,75,0.434,77,0.974,101,3.023,131,2.549,145,1.148,146,2.44,149,0.012,150,0.017,151,0.012,191,0.949,196,2.279,201,1.363,203,1.712,205,1.997,212,2.822,213,2.279,214,2.822,215,2.822,219,2.732,220,2.696,221,2.171,223,1.689,232,2.627,329,2.012,330,3.718,336,2.171,351,2.648,360,3.054,362,2.806,363,1.995,364,2.154,369,2.385,375,1.844,379,2.648,383,1.594,384,2.73,386,1.392,392,3.054,398,3.56,399,2.492,420,3.521,435,1.489,477,2.648,543,2.383,590,2.806,694,1.995,724,3.221,728,2.383,729,2.383,730,2.383,738,2.171,820,3.579,850,3.221,936,2.648,948,3.579,957,2.648,977,2.648,1089,2.648,1153,2.171,1196,2.648,1202,2.383,1290,4.054,1550,2.648,1551,4.925,1552,3.004,1553,2.648,1554,3.004,1555,3.004,1556,3.004,1557,3.004,1558,3.004,1559,3.004,1560,3.004,1561,3.004,1562,3.004,1563,3.004,1564,4.059,1565,4.059,1566,4.059,1567,3.004,1568,4.059,1569,3.004,1570,4.059,1571,3.004,1572,3.004,1573,3.004,1574,3.004,1575,3.004,1576,3.004,1577,3.004,1578,3.004,1579,3.004,1580,3.004,1581,4.059,1582,3.004,1583,4.059,1584,3.004,1585,3.004]],["title/components/SettingsComponent.html",[0,0.576,143,1.113]],["body/components/SettingsComponent.html",[0,1.024,1,1.248,2,1.676,3,0.269,4,0.237,5,1.627,6,1.627,7,1.627,8,1.627,9,0.207,11,0.756,13,2.036,17,1.099,21,1.171,22,2.67,23,2.383,25,1.908,27,1.908,29,0.606,35,1.3,40,1.377,42,0.969,43,0.025,44,1.291,45,0.615,46,0.852,51,0.698,52,1.787,54,1.419,59,1.476,63,2.345,65,0.927,68,0.969,71,0.302,72,0.406,74,0.361,75,0.443,77,0.814,93,2.216,94,1.564,98,2.733,99,3.085,100,2.216,101,1.882,105,2.216,106,2.216,111,3.085,112,2.216,117,2.216,120,2.216,121,1.171,122,2.039,123,2.184,124,1.627,125,2.635,126,1.627,127,1.627,128,1.248,129,1.627,130,1.248,131,1.519,132,1.627,133,1.248,134,1.627,135,1.248,136,1.627,137,1.248,138,1.627,139,1.248,140,1.627,141,1.171,142,1.627,143,1.897,144,1.627,145,1.171,146,1.519,147,1.627,148,1.627,149,0.013,150,0.017,151,0.013,201,1.472,202,4.109,204,2.703,205,2.017,206,5.794,207,2.703,208,2.703,209,3.065,210,2.703,211,2.184,212,2.852,213,2.039,214,2.526,215,2.526,216,4.646,217,4.115,218,4.646,219,2.039,220,2.733,221,2.975,222,4.646,223,0.909,224,2.975,225,3.265,226,4.702,227,2.526,228,3.156,229,4.115,230,4.115,231,3.629,232,2.039,233,4.115,234,3.065,235,3.065,261,1.331,277,2.432,350,2.526,352,2.975,500,2.703,696,2.733,702,2.975,778,4.115,943,4.115,979,4.115,1586,4.854,1587,3.616,1588,3.616,1589,3.616,1590,4.854,1591,4.854,1592,4.854,1593,4.854,1594,3.616]],["title/components/SidenavComponent.html",[0,0.576,145,1.113]],["body/components/SidenavComponent.html",[0,0.877,1,0.835,2,1.684,3,0.18,4,0.159,5,2.195,6,1.088,7,1.088,8,1.088,9,0.138,11,0.815,13,1.361,15,3.281,17,0.735,21,0.783,22,2.477,23,2.201,25,1.431,27,1.431,29,0.405,30,0.976,34,1.807,35,0.976,40,1.602,42,1.307,43,0.025,44,1.296,45,0.675,46,1.149,51,1.01,52,2.255,53,1.927,54,1.26,55,1.759,65,0.867,68,1.174,71,0.304,72,0.271,74,0.271,75,0.296,77,0.818,85,2.162,87,1.481,94,0.69,96,2.746,97,2.862,98,2.467,99,2.746,100,1.481,101,2.28,105,1.481,106,2.232,107,1.807,109,1.481,112,1.481,113,2.686,117,2.686,119,1.626,120,1.481,121,0.783,122,1.53,123,1.639,124,1.088,125,2.195,126,1.088,127,1.088,128,0.835,129,1.088,130,0.835,131,2.648,132,1.088,133,0.835,134,1.088,135,0.835,136,1.088,137,0.835,138,1.088,139,0.835,140,1.088,141,0.783,142,1.088,143,0.783,144,1.088,145,1.58,146,2.678,147,1.088,148,1.088,149,0.008,150,0.013,151,0.008,191,0.648,196,2.198,201,0.915,205,2.025,212,2.723,213,1.841,214,2.28,215,2.862,219,2.749,220,2.746,221,2.232,223,1.632,232,2.573,277,1.626,329,2.049,330,3.753,336,2.686,350,1.895,351,3.276,352,2.232,360,2.467,362,2.838,363,2.051,364,2.195,369,2.362,375,1.895,379,2.723,383,1.639,384,2.756,386,1.431,392,3.097,398,3.6,399,2.538,420,3.503,435,1.53,477,1.807,482,2.723,483,1.807,484,2.948,485,2.723,487,3.088,488,2.051,489,2.232,543,2.45,557,2.049,590,1.168,592,1.361,635,1.361,694,1.361,724,1.626,728,2.948,729,2.948,730,2.948,738,1.481,820,2.723,850,3.281,936,2.723,948,3.646,957,2.723,977,2.723,1089,1.807,1153,2.232,1196,2.723,1202,2.45,1290,4.111,1550,1.807,1551,2.049,1552,3.088,1553,2.723,1554,3.088,1555,3.715,1556,3.715,1557,3.088,1558,3.715,1559,3.088,1560,3.088,1561,3.715,1562,3.715,1563,3.088,1564,4.135,1565,4.135,1566,4.135,1567,3.088,1568,4.663,1569,2.049,1570,3.088,1571,3.088,1572,3.088,1573,2.049,1574,3.088,1575,2.049,1576,2.049,1577,2.049,1578,2.049,1579,2.049,1580,2.049,1581,3.088,1582,2.049,1583,3.088,1584,4.135,1585,3.088,1595,3.642,1596,3.642,1597,3.642,1598,3.642,1599,2.417,1600,2.417,1601,2.417,1602,2.417,1603,2.417,1604,2.417,1605,2.417,1606,2.417,1607,2.417,1608,2.417,1609,2.417,1610,2.417,1611,2.417,1612,3.642,1613,3.642,1614,2.417,1615,2.417,1616,2.417,1617,5.708,1618,3.642,1619,4.878,1620,3.642,1621,3.642,1622,2.417,1623,2.417,1624,3.642,1625,2.049,1626,3.642]],["title/pipes/SplitUpPipe.html",[752,1.545,759,1.186]],["body/pipes/SplitUpPipe.html",[3,0.284,4,0.25,9,0.218,11,0.783,17,1.159,19,2.513,21,1.235,35,1.021,40,0.958,42,1.021,43,0.025,44,1.505,45,0.428,46,0.898,49,3.448,51,0.736,53,1.403,54,1.373,65,1.017,71,0.419,72,0.428,74,0.445,75,0.733,77,1.121,149,0.013,150,0.018,151,0.013,227,2.928,244,1.891,252,1.503,261,2.071,264,2.211,266,1.938,389,1.498,519,2.112,581,2.51,752,2.262,759,2.399,763,3.99,801,2.146,866,2.146,872,3.595,876,3.81,1294,3.971,1422,1.841,1423,3.081,1424,2.336,1425,4.023,1426,3.382,1427,4.023,1429,4.295,1430,3.784,1431,2.564,1432,1.841,1433,2.564,1434,2.564,1435,1.841,1436,2.564,1437,3.382,1438,3.382,1439,2.564,1440,2.564,1441,2.564,1442,2.564,1443,3.382,1444,3.382,1445,2.564,1627,3.812]],["title/coverage.html",[1628,3.975]],["body/coverage.html",[0,1.11,1,1.187,9,0.196,10,2.916,39,2.108,43,0.025,45,0.386,85,2.819,90,2.313,94,1.525,128,1.187,130,1.187,133,1.187,135,1.187,137,1.187,139,1.187,141,1.114,143,1.114,145,1.114,149,0.012,150,0.016,151,0.012,154,1.187,188,2.313,201,1.594,202,2.313,204,3.508,223,0.864,236,1.79,237,5.551,244,2.146,326,2.313,356,1.79,359,1.266,360,1.936,382,5.091,514,2.916,515,2.571,516,2.916,573,4.279,581,1.352,589,1.79,600,1.79,607,1.661,723,2.916,741,2.916,742,2.571,743,2.916,752,1.547,757,1.936,759,2.073,800,2.571,841,2.571,843,2.916,844,2.916,859,2.58,867,2.916,868,2.916,885,2.916,1162,2.916,1182,2.313,1313,3.508,1314,3.508,1323,2.571,1330,2.916,1363,2.571,1422,1.661,1423,3.516,1424,3.516,1432,1.661,1435,1.661,1453,2.916,1462,2.916,1463,2.916,1464,2.916,1465,2.916,1466,2.916,1467,2.916,1468,2.916,1470,2.916,1471,2.916,1473,2.916,1550,3.508,1625,2.916,1628,2.916,1629,3.439,1630,3.439,1631,3.439,1632,3.439,1633,3.439,1634,3.439,1635,3.439,1636,3.439,1637,3.439,1638,3.439,1639,3.439,1640,3.439,1641,3.439,1642,3.439,1643,3.439,1644,3.439,1645,5.341,1646,5.341,1647,3.439,1648,3.439,1649,3.439,1650,3.439,1651,3.439,1652,3.439,1653,5.341,1654,7.127,1655,3.439,1656,3.439,1657,3.439,1658,3.439,1659,3.439,1660,3.439,1661,3.439,1662,3.439,1663,3.439,1664,3.439,1665,3.439,1666,3.439,1667,3.439,1668,3.439,1669,3.439,1670,3.439,1671,3.439,1672,3.439,1673,3.439,1674,3.439,1675,3.439,1676,3.439,1677,3.439,1678,3.978,1679,2.916,1680,3.978,1681,2.916,1682,3.439,1683,3.439]],["title/dependencies.html",[155,2.15,1684,2.868]],["body/dependencies.html",[43,0.025,65,0.715,72,0.557,149,0.017,150,0.021,151,0.017,155,2.58,173,5.029,174,4.434,181,4.204,182,3.706,184,2.58,219,2.083,580,2.395,584,3.34,798,3.706,799,4.204,1142,3.335,1146,3.706,1153,3.039,1154,4.204,1318,4.204,1553,3.706,1685,4.958,1686,6.957,1687,4.958,1688,5.932,1689,4.958,1690,4.958,1691,4.958,1692,4.958,1693,4.958,1694,4.958,1695,4.958,1696,4.958,1697,4.958,1698,4.958,1699,4.958,1700,4.958,1701,4.958,1702,4.958,1703,4.958,1704,4.958,1705,4.958,1706,4.958,1707,4.958,1708,4.958]],["title/miscellaneous/enumerations.html",[1709,1.615,1710,3.502]],["body/miscellaneous/enumerations.html",[29,0.919,43,0.022,45,0.616,149,0.019,150,0.022,151,0.019,219,2.303,326,3.687,335,5.334,394,4.648,415,4.648,435,2.303,436,4.648,437,4.098,1709,3.087,1710,4.648,1711,4.648]],["title/index.html",[29,0.481,1712,2.868,1713,2.868]],["body/index.html",[0,1.048,4,0.314,23,1.652,43,0.02,44,1.128,58,4.057,68,1.282,69,3.577,149,0.017,150,0.02,151,0.017,168,2.491,223,1.203,414,4.673,488,3.858,577,2.491,1007,4.923,1153,3.831,1202,3.219,1224,4.057,1231,4.057,1247,4.057,1275,4.057,1297,4.057,1347,3.577,1496,5.3,1518,4.057,1714,4.786,1715,5.807,1716,6.252,1717,4.786,1718,4.786,1719,5.807,1720,6.66,1721,4.786,1722,4.786,1723,4.786,1724,4.786,1725,4.786,1726,4.786,1727,4.786,1728,4.786,1729,6.66,1730,4.786,1731,4.786,1732,4.786,1733,4.786,1734,4.057,1735,5.807,1736,6.501,1737,4.786,1738,5.807,1739,5.807,1740,4.786,1741,6.501,1742,4.786,1743,4.786,1744,4.786,1745,6.252,1746,4.786,1747,4.786,1748,4.786,1749,3.577,1750,4.786]],["title/modules.html",[154,1.619]],["body/modules.html",[43,0.021,149,0.018,150,0.021,151,0.018,153,3.546,154,1.82,164,3.231,165,2.744,174,5.017,585,3.779,890,5.689,1135,3.546,1139,3.231,1158,3.231,1303,3.546,1307,3.231,1751,6.711,1752,7.031,1753,6.711]],["title/overview.html",[1749,3.504]],["body/overview.html",[1,2.29,2,1.424,43,0.025,90,2.774,94,1.177,121,1.336,128,2.018,130,2.018,133,2.018,135,2.018,137,2.018,139,2.018,141,1.893,143,1.893,145,1.893,149,0.014,150,0.018,151,0.014,152,1.336,153,4.565,154,1.424,155,2.147,156,2.322,157,2.528,158,2.528,159,1.856,160,3.497,161,3.497,162,3.497,163,3.497,164,3.581,165,3.318,166,2.98,167,2.528,168,2.147,203,1.993,246,1.733,752,2.985,757,3.735,841,3.083,866,2.322,1135,4.794,1136,3.497,1137,3.497,1138,3.497,1139,3.581,1158,4.323,1303,4.519,1304,3.497,1305,3.497,1306,3.497,1307,3.581,1312,2.774,1422,3.205,1432,3.205,1435,3.205,1448,3.497,1449,3.497,1450,3.497,1749,3.083,1754,4.125,1755,4.125,1756,4.125,1757,4.125]],["title/routes.html",[18,2.64]],["body/routes.html",[18,3.158,43,0.022,149,0.02,150,0.022,151,0.02]],["title/miscellaneous/typealiases.html",[1709,1.615,1758,4.131]],["body/miscellaneous/typealiases.html",[29,0.917,43,0.022,45,0.706,149,0.019,150,0.022,151,0.019,196,2.299,266,1.773,326,3.681,329,2.299,420,3.539,428,4.091,435,2.299,438,4.64,1709,3.081,1711,4.64,1759,5.473]],["title/miscellaneous/variables.html",[554,2.532,1709,1.615]],["body/miscellaneous/variables.html",[9,0.229,23,1.383,29,0.671,30,1.073,43,0.025,45,0.797,53,2.383,54,1.394,55,2.509,59,1.579,65,0.934,94,1.143,104,2.924,149,0.014,150,0.018,151,0.02,154,1.793,554,2.454,574,2.702,575,2.702,576,2.924,577,2.702,578,2.924,581,2.041,850,2.694,854,3.493,864,2.994,955,2.994,1189,2.994,1226,2.994,1264,2.994,1294,2.255,1313,2.994,1314,3.882,1319,3.395,1320,3.395,1323,3.882,1324,5.772,1325,5.586,1326,4.402,1327,3.395,1363,2.994,1364,3.395,1366,3.395,1368,3.395,1370,3.395,1372,3.395,1374,3.395,1376,3.395,1378,3.395,1380,3.395,1381,3.395,1383,3.395,1385,3.395,1387,3.395,1390,3.395,1392,3.395,1395,3.395,1397,3.395,1399,3.395,1401,3.395,1402,3.395,1404,3.395,1405,3.395,1407,3.395,1409,3.395,1410,3.395,1412,3.395,1414,3.395,1416,3.395,1418,3.395,1420,3.395,1452,3.395,1495,3.395,1678,3.395,1679,3.395,1680,5.169,1681,3.395,1709,2.255,1734,4.402,1760,4.005,1761,4.005,1762,4.005,1763,4.005,1764,4.005,1765,4.005,1766,4.005,1767,4.005,1768,4.005,1769,4.005]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0).tostring(16",{"_index":313,"title":{},"body":{"interfaces/Color.html":{}}}],["0.0",{"_index":625,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["0.0031308",{"_index":296,"title":{},"body":{"interfaces/Color.html":{}}}],["0.04045",{"_index":284,"title":{},"body":{"interfaces/Color.html":{}}}],["0.05",{"_index":1287,"title":{},"body":{"components/InitComponent.html":{}}}],["0.055",{"_index":286,"title":{},"body":{"interfaces/Color.html":{}}}],["0.075em",{"_index":1110,"title":{},"body":{"components/GraphComponent.html":{}}}],["0.11.3",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":1132,"title":{},"body":{"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["0.25em",{"_index":555,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.4em",{"_index":570,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.5.5",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["0.5em",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["0.7",{"_index":566,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.9em",{"_index":568,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0/1",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["039",{"_index":884,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["0px",{"_index":837,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1",{"_index":246,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"overview.html":{}}}],["1.0",{"_index":621,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["1.055",{"_index":287,"title":{},"body":{"interfaces/Color.html":{}}}],["1.25",{"_index":1106,"title":{},"body":{"components/GraphComponent.html":{}}}],["1.4",{"_index":505,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["1.65",{"_index":836,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1.65em",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1625,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["1/4",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/GraphComponent.html":{},"coverage.html":{},"overview.html":{}}}],["10/10",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1035,"title":{},"body":{"components/GraphComponent.html":{}}}],["100px",{"_index":503,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["10em",{"_index":1291,"title":{},"body":{"components/InitComponent.html":{}}}],["11.0.0",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["11.1.4",{"_index":1717,"title":{},"body":{"index.html":{}}}],["11.2.11",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["11.2.12",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["119px",{"_index":1300,"title":{},"body":{"components/InitComponent.html":{}}}],["12.92",{"_index":289,"title":{},"body":{"interfaces/Color.html":{}}}],["12/15",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":558,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["12em",{"_index":1302,"title":{},"body":{"components/InitComponent.html":{}}}],["12px",{"_index":513,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["14",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["140px",{"_index":1296,"title":{},"body":{"components/InitComponent.html":{}}}],["15px",{"_index":512,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["19/19",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["19/22",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["1em",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["1fr",{"_index":1619,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1px",{"_index":493,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["2",{"_index":315,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["2.0.8",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["2.4",{"_index":288,"title":{},"body":{"interfaces/Color.html":{}}}],["2/2",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1299,"title":{},"body":{"components/InitComponent.html":{}}}],["25",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":970,"title":{},"body":{"components/GraphComponent.html":{}}}],["255",{"_index":281,"title":{},"body":{"interfaces/Color.html":{}}}],["2em",{"_index":508,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["2px",{"_index":563,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["3",{"_index":1755,"title":{},"body":{"overview.html":{}}}],["32/36",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["35em",{"_index":1108,"title":{},"body":{"components/GraphComponent.html":{}}}],["38/40",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":560,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4/4",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1616,"title":{},"body":{"components/SidenavComponent.html":{}}}],["40px",{"_index":1621,"title":{},"body":{"components/SidenavComponent.html":{}}}],["4em",{"_index":567,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4px",{"_index":511,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["5",{"_index":1756,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":485,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SidenavComponent.html":{}}}],["5000",{"_index":1256,"title":{},"body":{"components/InitComponent.html":{}}}],["57",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":492,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["6.6.7",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["66",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1757,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["96px",{"_index":1293,"title":{},"body":{"components/InitComponent.html":{}}}],["a.concat([...c",{"_index":1578,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["absolute",{"_index":507,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["actual",{"_index":744,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["actual_component",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["additionalproperties",{"_index":1327,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":886,"title":{},"body":{"components/GraphComponent.html":{}}}],["ajv",{"_index":1318,"title":{},"body":{"injectables/JsonValidateService.html":{},"dependencies.html":{}}}],["ajv.compile(searchqueryschema",{"_index":1328,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["aliases",{"_index":1759,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["allowed",{"_index":939,"title":{},"body":{"components/GraphComponent.html":{}}}],["allwords",{"_index":818,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["amount",{"_index":934,"title":{},"body":{"components/GraphComponent.html":{}}}],["amp",{"_index":878,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["angular",{"_index":1153,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1142,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1146,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1382,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1373,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1396,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":545,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1421,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1384,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":1406,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1400,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1386,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1393,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1369,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1411,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1371,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1391,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1375,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":1403,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1413,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1415,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1365,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":1388,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1417,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":1238,"title":{},"body":{"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1377,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":1398,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1379,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1419,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1367,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1408,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"dependencies.html":{}}}],["angularresizedeventmodule",{"_index":1152,"title":{},"body":{"modules/HomeModule.html":{}}}],["animation",{"_index":971,"title":{},"body":{"components/GraphComponent.html":{}}}],["any).default",{"_index":1273,"title":{},"body":{"components/InitComponent.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append('svg",{"_index":1052,"title":{},"body":{"components/GraphComponent.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["applied",{"_index":994,"title":{},"body":{"components/GraphComponent.html":{}}}],["apply",{"_index":986,"title":{},"body":{"components/GraphComponent.html":{}}}],["appmodule",{"_index":153,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":773,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["approuter",{"_index":164,"title":{"modules/AppRouter.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":202,"title":{"interfaces/AppSettings.html":{}},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["array",{"_index":1326,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["array.from(wordmap.values",{"_index":1576,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["arrays",{"_index":602,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["arrow_backback",{"_index":1281,"title":{},"body":{"components/InitComponent.html":{}}}],["artifacts",{"_index":1730,"title":{},"body":{"index.html":{}}}],["asking",{"_index":1164,"title":{},"body":{"components/InitComponent.html":{}}}],["assets/example.json",{"_index":1240,"title":{},"body":{"components/InitComponent.html":{}}}],["associated",{"_index":429,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["attempts",{"_index":929,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('class",{"_index":1091,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('dx",{"_index":1105,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('dy",{"_index":1107,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('font",{"_index":1109,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('height",{"_index":1056,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('id",{"_index":1053,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('preserveaspectratio",{"_index":1057,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('r",{"_index":1093,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('viewbox",{"_index":1060,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('width",{"_index":1055,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr('z",{"_index":1095,"title":{},"body":{"components/GraphComponent.html":{}}}],["attr(data",{"_index":832,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["auto",{"_index":487,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SidenavComponent.html":{}}}],["automatically",{"_index":1724,"title":{},"body":{"index.html":{}}}],["available",{"_index":1753,"title":{},"body":{"modules.html":{}}}],["b",{"_index":240,"title":{},"body":{"interfaces/Color.html":{}}}],["back",{"_index":293,"title":{},"body":{"interfaces/Color.html":{},"components/InitComponent.html":{}}}],["background",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["bag",{"_index":666,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["bar",{"_index":539,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["base",{"_index":318,"title":{},"body":{"interfaces/Color.html":{}}}],["based",{"_index":961,"title":{},"body":{"components/GraphComponent.html":{}}}],["behaviorsubject",{"_index":1358,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["behaviorsubject(0",{"_index":1354,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(false",{"_index":1348,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(undefined",{"_index":1510,"title":{},"body":{"injectables/QueryService.html":{}}}],["behaviour",{"_index":1010,"title":{},"body":{"components/GraphComponent.html":{}}}],["behaviours",{"_index":991,"title":{},"body":{"components/GraphComponent.html":{}}}],["being",{"_index":231,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["beta.33",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["block",{"_index":571,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["boolean",{"_index":211,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{}}}],["bootstrap",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":490,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["bottom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["bound",{"_index":534,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{}}}],["bowentries1",{"_index":655,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["bowentries2",{"_index":656,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["box",{"_index":509,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["browse",{"_index":1752,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1729,"title":{},"body":{"index.html":{}}}],["button",{"_index":1290,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["buttons",{"_index":1289,"title":{},"body":{"components/InitComponent.html":{}}}],["c",{"_index":1089,"title":{},"body":{"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["c.id",{"_index":1113,"title":{},"body":{"components/GraphComponent.html":{}}}],["c1",{"_index":304,"title":{},"body":{"interfaces/Color.html":{}}}],["c2",{"_index":306,"title":{},"body":{"interfaces/Color.html":{}}}],["calc(100vh",{"_index":1301,"title":{},"body":{"components/InitComponent.html":{}}}],["calc(50",{"_index":569,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["calculate",{"_index":960,"title":{},"body":{"components/GraphComponent.html":{}}}],["calculatecosinedistance",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["calculatecosinedistance(weight",{"_index":704,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["calculatecoverzoom",{"_index":891,"title":{},"body":{"components/GraphComponent.html":{}}}],["calculatelinkdistance",{"_index":892,"title":{},"body":{"components/GraphComponent.html":{}}}],["calculatelinkdistance(link",{"_index":958,"title":{},"body":{"components/GraphComponent.html":{}}}],["calculates",{"_index":538,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["calculating",{"_index":721,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["calculation",{"_index":697,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["called",{"_index":1216,"title":{},"body":{"components/InitComponent.html":{}}}],["camera",{"_index":928,"title":{},"body":{"components/GraphComponent.html":{}}}],["canactivate",{"_index":187,"title":{},"body":{"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{}}}],["card",{"_index":1626,"title":{},"body":{"components/SidenavComponent.html":{}}}],["catch",{"_index":1268,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["catch(err",{"_index":1244,"title":{},"body":{"components/InitComponent.html":{}}}],["center",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["centercamera",{"_index":893,"title":{},"body":{"components/GraphComponent.html":{}}}],["centercamera(x",{"_index":963,"title":{},"body":{"components/GraphComponent.html":{}}}],["change",{"_index":1202,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["changed",{"_index":221,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["changedetection",{"_index":746,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy",{"_index":794,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":747,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetector",{"_index":912,"title":{},"body":{"components/GraphComponent.html":{}}}],["changedetectorref",{"_index":913,"title":{},"body":{"components/GraphComponent.html":{}}}],["changes",{"_index":224,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["changes.selecteddocuments",{"_index":448,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changes.selecteddocuments.currentvalue.length",{"_index":449,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changesetting",{"_index":1586,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changesetting(setting",{"_index":233,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["characters",{"_index":871,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["check",{"_index":1748,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":499,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["checked",{"_index":401,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{}}}],["checking",{"_index":1506,"title":{},"body":{"injectables/QueryService.html":{}}}],["checkmark",{"_index":544,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["checkoverflow",{"_index":342,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checkoverflow(element",{"_index":371,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checks",{"_index":374,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child",{"_index":778,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["child(even",{"_index":497,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child(odd",{"_index":495,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["circle",{"_index":1127,"title":{},"body":{"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["class",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["clearhighlightedwords",{"_index":1584,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clears",{"_index":379,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clearwordselection",{"_index":343,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["cli",{"_index":1716,"title":{},"body":{"index.html":{}}}],["clickable",{"_index":1111,"title":{},"body":{"components/GraphComponent.html":{}}}],["clickedcompare",{"_index":1595,"title":{},"body":{"components/SidenavComponent.html":{}}}],["clickedcompare(e",{"_index":1572,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicking",{"_index":1571,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicks",{"_index":948,"title":{},"body":{"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["close",{"_index":1612,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closed",{"_index":1565,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closes",{"_index":1560,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closesidenav",{"_index":1596,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closesidenav(e",{"_index":1567,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clumping",{"_index":702,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{}}}],["clumpingmodifier",{"_index":207,"title":{},"body":{"interfaces/AppSettings.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1136,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1137,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":1138,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_initmodule",{"_index":1304,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_declarations",{"_index":1305,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_imports",{"_index":1306,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1448,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1449,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1450,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":1726,"title":{},"body":{"index.html":{}}}],["color",{"_index":236,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"coverage.html":{}}}],["color.b",{"_index":283,"title":{},"body":{"interfaces/Color.html":{}}}],["color.g",{"_index":282,"title":{},"body":{"interfaces/Color.html":{}}}],["color.r",{"_index":280,"title":{},"body":{"interfaces/Color.html":{}}}],["color1",{"_index":260,"title":{},"body":{"interfaces/Color.html":{}}}],["color1.b",{"_index":273,"title":{},"body":{"interfaces/Color.html":{}}}],["color1.g",{"_index":271,"title":{},"body":{"interfaces/Color.html":{}}}],["color1.r",{"_index":269,"title":{},"body":{"interfaces/Color.html":{}}}],["color2",{"_index":263,"title":{},"body":{"interfaces/Color.html":{}}}],["color2.b",{"_index":274,"title":{},"body":{"interfaces/Color.html":{}}}],["color2.g",{"_index":272,"title":{},"body":{"interfaces/Color.html":{}}}],["color2.r",{"_index":270,"title":{},"body":{"interfaces/Color.html":{}}}],["colormix",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["colormix(color1",{"_index":268,"title":{},"body":{"interfaces/Color.html":{}}}],["colors",{"_index":267,"title":{},"body":{"interfaces/Color.html":{}}}],["colorsrgbgradient",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["colorsrgbgradient(color1",{"_index":303,"title":{},"body":{"interfaces/Color.html":{}}}],["colortohex",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["colortohex(color",{"_index":312,"title":{},"body":{"interfaces/Color.html":{}}}],["column",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["columns",{"_index":1618,"title":{},"body":{"components/SidenavComponent.html":{}}}],["command",{"_index":1750,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1141,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{}}}],["compare",{"_index":619,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["compareclick",{"_index":1562,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["compared",{"_index":530,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["comparekeyboard_arrow_right",{"_index":1613,"title":{},"body":{"components/SidenavComponent.html":{}}}],["comparing",{"_index":1556,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparingwindowopen",{"_index":1558,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparison",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["comparison'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["comparison.component.html",{"_index":333,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison.component.scss",{"_index":332,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison/comparison",{"_index":1149,"title":{},"body":{"modules/HomeModule.html":{}}}],["comparison/comparison.component",{"_index":738,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparisoncomponent",{"_index":128,"title":{"components/ComparisonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["comparisonentrycomponent",{"_index":130,"title":{"components/ComparisonEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"overview.html":{}}}],["compressed",{"_index":294,"title":{},"body":{"interfaces/Color.html":{}}}],["compresses",{"_index":292,"title":{},"body":{"interfaces/Color.html":{}}}],["compression",{"_index":258,"title":{},"body":{"interfaces/Color.html":{}}}],["const",{"_index":191,"title":{},"body":{"modules/AppRouter.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"modules/MaterialModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(escapehtml",{"_index":756,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["constructor(loadingservice",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(private",{"_index":439,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(queryservice",{"_index":355,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["contain",{"_index":956,"title":{},"body":{"components/GraphComponent.html":{}}}],["contained",{"_index":1552,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["container",{"_index":1615,"title":{},"body":{"components/SidenavComponent.html":{}}}],["containing",{"_index":205,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["contains",{"_index":1563,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["content'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["content.component",{"_index":1157,"title":{},"body":{"modules/HomeModule.html":{}}}],["content.component.html",{"_index":749,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.scss",{"_index":748,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts",{"_index":743,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:103",{"_index":769,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:22",{"_index":764,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:26",{"_index":765,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:30",{"_index":766,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:34",{"_index":767,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:38",{"_index":768,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:43",{"_index":758,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:50",{"_index":792,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:51",{"_index":793,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:54",{"_index":791,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:58",{"_index":790,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:67",{"_index":774,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:89",{"_index":782,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content/document",{"_index":742,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["continue",{"_index":673,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["converted",{"_index":311,"title":{},"body":{"interfaces/Color.html":{}}}],["convertedcontent",{"_index":750,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converting",{"_index":760,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converts",{"_index":309,"title":{},"body":{"interfaces/Color.html":{}}}],["coordinate",{"_index":968,"title":{},"body":{"components/GraphComponent.html":{}}}],["coordinates",{"_index":967,"title":{},"body":{"components/GraphComponent.html":{}}}],["corpus",{"_index":359,"title":{"interfaces/Corpus.html":{}},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["corpus.dictionary[id",{"_index":617,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.dictionary[key",{"_index":615,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities",{"_index":623,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities[id1",{"_index":624,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities[id1][id2",{"_index":626,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpussource",{"_index":1457,"title":{},"body":{"injectables/QueryService.html":{}}}],["corresponding",{"_index":229,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cosine",{"_index":529,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["cover",{"_index":1286,"title":{},"body":{"components/InitComponent.html":{}}}],["coverage",{"_index":1628,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":708,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["createlinks",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["createlinks(nodes",{"_index":722,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["createnodes",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["createnodes(corpus",{"_index":709,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["creating",{"_index":706,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["current",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{}}}],["currentcorpus",{"_index":1458,"title":{},"body":{"injectables/QueryService.html":{}}}],["currently",{"_index":362,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["d",{"_index":716,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["d.id",{"_index":1038,"title":{},"body":{"components/GraphComponent.html":{}}}],["d.y",{"_index":1083,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3",{"_index":584,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"dependencies.html":{}}}],["d3.forcecenter(0",{"_index":1048,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3.forcecollide",{"_index":1045,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3.forcelink(this.data.links",{"_index":1036,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3.forcemanybody",{"_index":1042,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3.forcesimulation(this.data.nodes",{"_index":1025,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3.select('figure#graph",{"_index":1051,"title":{},"body":{"components/GraphComponent.html":{}}}],["d3.zoom",{"_index":1064,"title":{},"body":{"components/GraphComponent.html":{}}}],["data",{"_index":719,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["data(this.data.nodes",{"_index":1087,"title":{},"body":{"components/GraphComponent.html":{}}}],["data.data",{"_index":1546,"title":{},"body":{"injectables/QueryService.html":{}}}],["data.worker",{"_index":1524,"title":{},"body":{"injectables/QueryService.html":{}}}],["dblclick",{"_index":1068,"title":{},"body":{"components/GraphComponent.html":{}}}],["declarations",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decompressed",{"_index":278,"title":{},"body":{"interfaces/Color.html":{}}}],["decompresses",{"_index":275,"title":{},"body":{"interfaces/Color.html":{}}}],["decorators",{"_index":1229,"title":{},"body":{"components/InitComponent.html":{}}}],["deep",{"_index":489,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["defaulting",{"_index":1509,"title":{},"body":{"injectables/QueryService.html":{}}}],["defaults",{"_index":1481,"title":{},"body":{"injectables/QueryService.html":{}}}],["defaultzoom",{"_index":904,"title":{},"body":{"components/GraphComponent.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["dependencies",{"_index":155,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["description&nbsp;use",{"_index":1280,"title":{},"body":{"components/InitComponent.html":{}}}],["detectchanges",{"_index":894,"title":{},"body":{"components/GraphComponent.html":{}}}],["detects",{"_index":975,"title":{},"body":{"components/GraphComponent.html":{}}}],["determines",{"_index":783,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["dev",{"_index":1722,"title":{},"body":{"index.html":{}}}],["development",{"_index":1718,"title":{},"body":{"index.html":{}}}],["deviations",{"_index":1591,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionary",{"_index":574,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["directive",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["directives",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1728,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1005,"title":{},"body":{"components/GraphComponent.html":{}}}],["directory",{"_index":1732,"title":{},"body":{"index.html":{}}}],["display",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["displayed",{"_index":724,"title":{},"body":{"components/DocumentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["displayerror",{"_index":1174,"title":{},"body":{"components/InitComponent.html":{}}}],["displayerror(msg",{"_index":1194,"title":{},"body":{"components/InitComponent.html":{}}}],["displaying",{"_index":1196,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["dist",{"_index":1731,"title":{},"body":{"index.html":{}}}],["distance",{"_index":696,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{}}}],["distance(this.calculatelinkdistance.bind(this",{"_index":1017,"title":{},"body":{"components/GraphComponent.html":{}}}],["distancemodifier",{"_index":208,"title":{},"body":{"interfaces/AppSettings.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["doc",{"_index":717,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["docs",{"_index":712,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["document",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["document'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["document.component.html",{"_index":727,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.component.scss",{"_index":726,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.subtitle",{"_index":740,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.title",{"_index":739,"title":{},"body":{"components/DocumentComponent.html":{}}}],["documentation",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["documentcomponent",{"_index":133,"title":{"components/DocumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentcontentcomponent",{"_index":135,"title":{"components/DocumentContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentloadedguard",{"_index":188,"title":{"guards/DocumentLoadedGuard.html":{}},"body":{"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["documents",{"_index":364,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["documentsimilarities",{"_index":334,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["documentsimilarity",{"_index":524,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["draw",{"_index":979,"title":{},"body":{"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["drawer",{"_index":1614,"title":{},"body":{"components/SidenavComponent.html":{}}}],["drawgraph",{"_index":895,"title":{},"body":{"components/GraphComponent.html":{}}}],["drawlabels",{"_index":896,"title":{},"body":{"components/GraphComponent.html":{}}}],["drawnodes",{"_index":897,"title":{},"body":{"components/GraphComponent.html":{}}}],["draws",{"_index":983,"title":{},"body":{"components/GraphComponent.html":{}}}],["duration",{"_index":965,"title":{},"body":{"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["dynamic",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":399,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["e.checked",{"_index":550,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["e.target.id",{"_index":1076,"title":{},"body":{"components/GraphComponent.html":{}}}],["e.transform",{"_index":1071,"title":{},"body":{"components/GraphComponent.html":{}}}],["e2e",{"_index":1742,"title":{},"body":{"index.html":{}}}],["e?.sourceevent?.type",{"_index":1066,"title":{},"body":{"components/GraphComponent.html":{}}}],["e?.target?.files",{"_index":1248,"title":{},"body":{"components/InitComponent.html":{}}}],["e?.target?.id",{"_index":1100,"title":{},"body":{"components/GraphComponent.html":{}}}],["eeeeee",{"_index":498,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["element",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["element.offsetheight",{"_index":469,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["elements",{"_index":707,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ellipsis",{"_index":502,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["emits",{"_index":220,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["emitter",{"_index":366,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["emitting",{"_index":536,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["empty",{"_index":933,"title":{},"body":{"components/GraphComponent.html":{}}}],["emptyclicked",{"_index":908,"title":{},"body":{"components/GraphComponent.html":{}}}],["end",{"_index":1741,"title":{},"body":{"index.html":{}}}],["enter",{"_index":437,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enter().append('g",{"_index":1088,"title":{},"body":{"components/GraphComponent.html":{}}}],["entire",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["entries",{"_index":649,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries.length",{"_index":714,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries1",{"_index":639,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries2",{"_index":641,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entry",{"_index":393,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["entry'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["entry.component",{"_index":1150,"title":{},"body":{"modules/HomeModule.html":{}}}],["entry.component.html",{"_index":521,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.scss",{"_index":520,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts",{"_index":516,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:17",{"_index":533,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":532,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":527,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":531,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":535,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":537,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:47",{"_index":542,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.delete(matchword",{"_index":472,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entry/comparison",{"_index":515,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["entry?.size",{"_index":471,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entryhoverevent",{"_index":335,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entryhoverevent.enter",{"_index":478,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["enum",{"_index":415,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1710,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1191,"title":{},"body":{"components/InitComponent.html":{}}}],["escape",{"_index":798,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["escapedword",{"_index":823,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["escapehtml",{"_index":751,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{}}}],["escapehtmlpipe",{"_index":757,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["escapestringregexp",{"_index":797,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["evaluated",{"_index":789,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["event",{"_index":219,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":212,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["events",{"_index":988,"title":{},"body":{"components/GraphComponent.html":{}}}],["eventually",{"_index":1516,"title":{},"body":{"injectables/QueryService.html":{}}}],["exact",{"_index":383,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["exactmatches",{"_index":687,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactmatches[ids[0",{"_index":691,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactpairs",{"_index":455,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["exactpairs[key",{"_index":458,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["example",{"_index":1206,"title":{},"body":{"components/InitComponent.html":{}}}],["exampledocument",{"_index":1239,"title":{},"body":{"components/InitComponent.html":{}}}],["execute",{"_index":1738,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1507,"title":{},"body":{"injectables/QueryService.html":{}}}],["exponent",{"_index":703,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exponentially",{"_index":918,"title":{},"body":{"components/GraphComponent.html":{}}}],["export",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["exports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["extendedmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["fade",{"_index":506,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fafafa",{"_index":496,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["false",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["field",{"_index":411,"title":{},"body":{"components/ComparisonComponent.html":{},"modules/MaterialModule.html":{}}}],["figure",{"_index":1123,"title":{},"body":{"components/GraphComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file/text",{"_index":1190,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadinsert",{"_index":1278,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadupload",{"_index":1283,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader",{"_index":1259,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.onloadend",{"_index":1261,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.readasbinarystring(this.jsonfile",{"_index":1260,"title":{},"body":{"components/InitComponent.html":{}}}],["files",{"_index":1247,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["files?.length",{"_index":1249,"title":{},"body":{"components/InitComponent.html":{}}}],["files[0",{"_index":1251,"title":{},"body":{"components/InitComponent.html":{}}}],["fill",{"_index":1128,"title":{},"body":{"components/GraphComponent.html":{}}}],["filter",{"_index":683,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["filter(a",{"_index":1579,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["filter(data",{"_index":1545,"title":{},"body":{"injectables/QueryService.html":{}}}],["filters",{"_index":680,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["first",{"_index":261,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["first[1",{"_index":461,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fixed",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1224,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["flex",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["flexmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["font",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["force",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["force('center",{"_index":1047,"title":{},"body":{"components/GraphComponent.html":{}}}],["force('charge",{"_index":1041,"title":{},"body":{"components/GraphComponent.html":{}}}],["force('collide",{"_index":1044,"title":{},"body":{"components/GraphComponent.html":{}}}],["forces",{"_index":993,"title":{},"body":{"components/GraphComponent.html":{}}}],["form",{"_index":1298,"title":{},"body":{"components/InitComponent.html":{}}}],["formsmodule",{"_index":1144,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["formula",{"_index":698,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["function",{"_index":244,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Corpus.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["further",{"_index":1744,"title":{},"body":{"index.html":{}}}],["fx",{"_index":596,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["fy",{"_index":598,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["g",{"_index":241,"title":{},"body":{"interfaces/Color.html":{},"components/GraphComponent.html":{}}}],["g)}${(b.length",{"_index":317,"title":{},"body":{"interfaces/Color.html":{}}}],["gap",{"_index":1623,"title":{},"body":{"components/SidenavComponent.html":{}}}],["generate",{"_index":1496,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["generated",{"_index":1347,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["generateexactpairs",{"_index":344,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generates",{"_index":388,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatesoftpairs",{"_index":345,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatewordpairs",{"_index":346,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generating",{"_index":1517,"title":{},"body":{"injectables/QueryService.html":{}}}],["get($color",{"_index":561,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{}}}],["getbarwidth",{"_index":522,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["getdocumenttext",{"_index":1462,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getdocumenttext(id",{"_index":1478,"title":{},"body":{"injectables/QueryService.html":{}}}],["getformattedcontent",{"_index":753,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getmostimportantexactmatches",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["getmostimportantexactmatches(wordimportancepairs",{"_index":684,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getmostimportantsoftmatches",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["getmostimportantsoftmatches(wordimportancepairs",{"_index":693,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getnormalizedwordimportancepairs",{"_index":1463,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getnormalizedwordimportancepairs(id1",{"_index":654,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getreversedwordmap",{"_index":754,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["gets",{"_index":775,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getsimilarity",{"_index":1464,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getsimilarity(id1",{"_index":620,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getsimilarity(w1",{"_index":634,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(w1id",{"_index":647,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(wid1",{"_index":672,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarityword",{"_index":1465,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getsimilarityword(word1",{"_index":629,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getsoftcosinemeasure",{"_index":1466,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getsoftcosinemeasure(id1",{"_index":1487,"title":{},"body":{"injectables/QueryService.html":{}}}],["getting",{"_index":1712,"title":{"index.html":{}},"body":{}}],["getword",{"_index":1467,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getword(id",{"_index":616,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getword(wid1",{"_index":674,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(wid2",{"_index":675,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(word",{"_index":651,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid",{"_index":1468,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getwordid(word",{"_index":613,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getwordid(word1",{"_index":631,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid(word2",{"_index":633,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordimportancepairs",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["getwordimportancepairs(bowentries1",{"_index":657,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["given",{"_index":376,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["global",{"_index":1482,"title":{},"body":{"injectables/QueryService.html":{}}}],["go",{"_index":1747,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":265,"title":{},"body":{"interfaces/Color.html":{}}}],["gradient(45deg",{"_index":840,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["graph",{"_index":585,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["graph.component.html",{"_index":888,"title":{},"body":{"components/GraphComponent.html":{}}}],["graph.component.scss",{"_index":887,"title":{},"body":{"components/GraphComponent.html":{}}}],["graph/graph.component",{"_index":1148,"title":{},"body":{"modules/HomeModule.html":{}}}],["graphcomponent",{"_index":137,"title":{"components/GraphComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graphdata",{"_index":607,"title":{"interfaces/GraphData.html":{}},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["graphlink",{"_index":600,"title":{"interfaces/GraphLink.html":{}},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["graphlinks",{"_index":604,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["graphnode",{"_index":589,"title":{"interfaces/GraphNode.html":{}},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["graphnodes",{"_index":603,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["graphpadding",{"_index":905,"title":{},"body":{"components/GraphComponent.html":{}}}],["grid",{"_index":1617,"title":{},"body":{"components/SidenavComponent.html":{}}}],["group",{"_index":591,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["groups",{"_index":1004,"title":{},"body":{"components/GraphComponent.html":{}}}],["grow",{"_index":559,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["gt",{"_index":880,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["guard",{"_index":841,"title":{"guards/DocumentLoadedGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":842,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["guards/document",{"_index":189,"title":{},"body":{"modules/AppRouter.html":{}}}],["h1",{"_index":1288,"title":{},"body":{"components/InitComponent.html":{}}}],["h2",{"_index":486,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["hammerjs",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["handlechange",{"_index":523,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handlechange(e",{"_index":540,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handleentryhover",{"_index":347,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handleentryhover(word",{"_index":390,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlefileupload",{"_index":1175,"title":{},"body":{"components/InitComponent.html":{}}}],["handlefileupload(e",{"_index":1199,"title":{},"body":{"components/InitComponent.html":{}}}],["handler",{"_index":398,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handles",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handletextupload",{"_index":1176,"title":{},"body":{"components/InitComponent.html":{}}}],["handlewordhovered",{"_index":1597,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordhovered(word",{"_index":1585,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordschanged",{"_index":1598,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordschanged(wordmap",{"_index":1574,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordselection",{"_index":348,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlewordselection(e",{"_index":395,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handling",{"_index":543,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["happen",{"_index":1444,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["happened",{"_index":976,"title":{},"body":{"components/GraphComponent.html":{}}}],["happening",{"_index":847,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["hard",{"_index":481,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["height",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["heightmult",{"_index":1121,"title":{},"body":{"components/GraphComponent.html":{}}}],["help",{"_index":1745,"title":{},"body":{"index.html":{}}}],["helper",{"_index":410,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["hexcode",{"_index":310,"title":{},"body":{"interfaces/Color.html":{}}}],["hidden",{"_index":483,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["hierarchical",{"_index":422,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["highlight",{"_index":827,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.both",{"_index":839,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.soft",{"_index":838,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlighted",{"_index":330,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedexactmatches",{"_index":728,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedsoftmatches",{"_index":729,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedwordmap",{"_index":730,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlighting",{"_index":771,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlights",{"_index":745,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["holding",{"_index":358,"title":{},"body":{"components/ComparisonComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["holds",{"_index":418,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["home'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["home.component",{"_index":1143,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{}}}],["home.routes",{"_index":1147,"title":{},"body":{"modules/HomeModule.html":{}}}],["homecomponent",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1135,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepage",{"_index":856,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["homeroutes",{"_index":1139,"title":{"modules/HomeRoutes.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules.html":{},"overview.html":{}}}],["hover",{"_index":436,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hovered",{"_index":392,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoverednode",{"_index":889,"title":{},"body":{"components/GraphComponent.html":{}}}],["hoveredword",{"_index":336,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword.includes(pairseparator",{"_index":812,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["hovers",{"_index":367,"title":{},"body":{"components/ComparisonComponent.html":{},"components/GraphComponent.html":{}}}],["html",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["html.pipe",{"_index":796,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["html.pipe.ts",{"_index":868,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:14",{"_index":874,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["htmlelement",{"_index":372,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["htmltextareaelement",{"_index":1228,"title":{},"body":{"components/InitComponent.html":{}}}],["http://localhost:4200",{"_index":1723,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1292,"title":{},"body":{"components/InitComponent.html":{}}}],["icons",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":590,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["id((d",{"_index":1037,"title":{},"body":{"components/GraphComponent.html":{}}}],["id.split(pairseparator",{"_index":688,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["id1",{"_index":442,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["id2",{"_index":444,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["id2][0",{"_index":622,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["id^=\"node_1_\"]:not([fill",{"_index":1134,"title":{},"body":{"components/GraphComponent.html":{}}}],["id^=\"node_2_\"]:not([fill",{"_index":1133,"title":{},"body":{"components/GraphComponent.html":{}}}],["identifier",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":618,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["ids[0",{"_index":689,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ids[1",{"_index":690,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ignore",{"_index":1322,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["image",{"_index":1284,"title":{},"body":{"components/InitComponent.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["import('./home/home.module').then(m",{"_index":197,"title":{},"body":{"modules/AppRouter.html":{}}}],["import('./init/init.module').then(m",{"_index":194,"title":{},"body":{"modules/AppRouter.html":{}}}],["importance",{"_index":653,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["importances",{"_index":1484,"title":{},"body":{"injectables/QueryService.html":{}}}],["important",{"_index":1129,"title":{},"body":{"components/GraphComponent.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["incline",{"_index":250,"title":{},"body":{"interfaces/Color.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirectly",{"_index":586,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["individual",{"_index":238,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["information",{"_index":419,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["inherits",{"_index":587,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["init",{"_index":1166,"title":{},"body":{"components/InitComponent.html":{}}}],["init'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["init.component",{"_index":1309,"title":{},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{}}}],["init.component.html",{"_index":1168,"title":{},"body":{"components/InitComponent.html":{}}}],["init.component.scss",{"_index":1167,"title":{},"body":{"components/InitComponent.html":{}}}],["init.routes",{"_index":1310,"title":{},"body":{"modules/InitModule.html":{}}}],["initcomponent",{"_index":141,"title":{"components/InitComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["initevents",{"_index":898,"title":{},"body":{"components/GraphComponent.html":{}}}],["initforces",{"_index":899,"title":{},"body":{"components/GraphComponent.html":{}}}],["initgraphdata",{"_index":1469,"title":{},"body":{"injectables/QueryService.html":{}}}],["initgraphdata(corpus",{"_index":1492,"title":{},"body":{"injectables/QueryService.html":{}}}],["initial",{"_index":249,"title":{},"body":{"interfaces/Color.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["initialization",{"_index":927,"title":{},"body":{"components/GraphComponent.html":{}}}],["initialize",{"_index":990,"title":{},"body":{"components/GraphComponent.html":{}}}],["initializing",{"_index":1476,"title":{},"body":{"injectables/QueryService.html":{}}}],["initmodule",{"_index":1303,"title":{"modules/InitModule.html":{}},"body":{"modules/InitModule.html":{},"modules.html":{},"overview.html":{}}}],["initroutes",{"_index":1307,"title":{"modules/InitRoutes.html":{}},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules.html":{},"overview.html":{}}}],["initsimulation",{"_index":900,"title":{},"body":{"components/GraphComponent.html":{}}}],["initsvg",{"_index":901,"title":{},"body":{"components/GraphComponent.html":{}}}],["injectable",{"_index":859,"title":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["injectables",{"_index":1312,"title":{},"body":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["inner",{"_index":635,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{}}}],["innerproduct",{"_index":1470,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["innerproduct(id1",{"_index":638,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["innerproductsingle",{"_index":1471,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["innerproductsingle(id",{"_index":648,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["input",{"_index":213,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["inputs",{"_index":350,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["insert",{"_index":1282,"title":{},"body":{"components/InitComponent.html":{}}}],["inserted",{"_index":1165,"title":{},"body":{"components/InitComponent.html":{}}}],["insertedtext",{"_index":1169,"title":{},"body":{"components/InitComponent.html":{}}}],["inserting",{"_index":1233,"title":{},"body":{"components/InitComponent.html":{}}}],["insertingtext",{"_index":1170,"title":{},"body":{"components/InitComponent.html":{}}}],["interaction",{"_index":987,"title":{},"body":{"components/GraphComponent.html":{}}}],["interactive",{"_index":980,"title":{},"body":{"components/GraphComponent.html":{}}}],["interface",{"_index":201,"title":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{}},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":203,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"overview.html":{}}}],["inversesrgbcompanding",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["inversesrgbcompanding(color",{"_index":279,"title":{},"body":{"interfaces/Color.html":{}}}],["inversesrgbcompanding(color1",{"_index":305,"title":{},"body":{"interfaces/Color.html":{}}}],["inversesrgbcompanding(color2",{"_index":307,"title":{},"body":{"interfaces/Color.html":{}}}],["isloading",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["isloadingsource",{"_index":1332,"title":{},"body":{"injectables/LoadingService.html":{}}}],["iswordlowlighted",{"_index":755,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["iswordlowlighted(word",{"_index":780,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["italic",{"_index":834,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["items",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["items.sort((first",{"_index":459,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["iterations(10",{"_index":1040,"title":{},"body":{"components/GraphComponent.html":{}}}],["itself",{"_index":1456,"title":{},"body":{"injectables/QueryService.html":{}}}],["json",{"_index":1226,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(text",{"_index":1265,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonfile",{"_index":1171,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonschematype",{"_index":1319,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["jsontextarea",{"_index":1172,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonvalidateservice",{"_index":1182,"title":{"injectables/JsonValidateService.html":{}},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"coverage.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["k",{"_index":964,"title":{},"body":{"components/GraphComponent.html":{}}}],["karma",{"_index":1740,"title":{},"body":{"index.html":{}}}],["keep",{"_index":930,"title":{},"body":{"components/GraphComponent.html":{}}}],["key",{"_index":228,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{}}}],["keys",{"_index":685,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["kickstarting",{"_index":1494,"title":{},"body":{"injectables/QueryService.html":{}}}],["label",{"_index":500,"title":{},"body":{"components/ComparisonComponent.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["label').raise",{"_index":1115,"title":{},"body":{"components/GraphComponent.html":{}}}],["labels",{"_index":943,"title":{},"body":{"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["last",{"_index":1594,"title":{},"body":{"components/SettingsComponent.html":{}}}],["layout",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"dependencies.html":{}}}],["leave",{"_index":394,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["legend",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"overview.html":{}}}],["less",{"_index":786,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["level",{"_index":969,"title":{},"body":{"components/GraphComponent.html":{}}}],["line",{"_index":504,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["linear",{"_index":701,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["linearly",{"_index":925,"title":{},"body":{"components/GraphComponent.html":{}}}],["link",{"_index":921,"title":{},"body":{"components/GraphComponent.html":{}}}],["links",{"_index":609,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["list",{"_index":1394,"title":{},"body":{"modules/MaterialModule.html":{}}}],["literal",{"_index":396,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["loadchildren",{"_index":193,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded",{"_index":849,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["loaded.guard",{"_index":190,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded.guard.ts",{"_index":844,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["loaded.guard.ts:13",{"_index":852,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["loaded.guard.ts:26",{"_index":857,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["loadexample",{"_index":1177,"title":{},"body":{"components/InitComponent.html":{}}}],["loading",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["loading.service",{"_index":1519,"title":{},"body":{"injectables/QueryService.html":{}}}],["loadingprogress",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingprogresssource",{"_index":1333,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":39,"title":{"injectables/LoadingService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["loadingstage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingstagesource",{"_index":1334,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loads",{"_index":1205,"title":{},"body":{"components/InitComponent.html":{}}}],["located",{"_index":853,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["log2",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["log2(n",{"_index":321,"title":{},"body":{"interfaces/Color.html":{}}}],["logarithm",{"_index":319,"title":{},"body":{"interfaces/Color.html":{}}}],["logic",{"_index":518,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["long",{"_index":1331,"title":{},"body":{"injectables/LoadingService.html":{}}}],["lowlight",{"_index":830,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighted",{"_index":785,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighting",{"_index":772,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["m.homemodule",{"_index":198,"title":{},"body":{"modules/AppRouter.html":{}}}],["m.initmodule",{"_index":195,"title":{},"body":{"modules/AppRouter.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["making",{"_index":412,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["map",{"_index":196,"title":{},"body":{"modules/AppRouter.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map(data",{"_index":1547,"title":{},"body":{"injectables/QueryService.html":{}}}],["mapping",{"_index":777,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["maps",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["margin",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["marked",{"_index":784,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["mat",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["matautocompletemodule",{"_index":1381,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1372,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":1401,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1395,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":403,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["matcheckboxchange",{"_index":541,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["matcheckboxmodule",{"_index":1380,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matched",{"_index":428,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/typealiases.html":{}}}],["matches",{"_index":384,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1420,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matchword",{"_index":470,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["matdatepickermodule",{"_index":1383,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":1405,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1553,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["material.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["materialmodule",{"_index":165,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1399,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1385,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":1392,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(value",{"_index":253,"title":{},"body":{"interfaces/Color.html":{}}}],["math.log2(n",{"_index":322,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow((b",{"_index":291,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow((g",{"_index":290,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow((r",{"_index":285,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(1",{"_index":705,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["math.pow(2",{"_index":325,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(b",{"_index":299,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(g",{"_index":298,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(r",{"_index":297,"title":{},"body":{"interfaces/Color.html":{}}}],["maticonmodule",{"_index":1368,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1410,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1370,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1390,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginatormodule",{"_index":1374,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1404,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1402,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":1412,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":1414,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":1364,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidermodule",{"_index":1416,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":1387,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1184,"title":{},"body":{"components/InitComponent.html":{}}}],["matsnackbarmodule",{"_index":1409,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsortmodule",{"_index":1376,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsteppermodule",{"_index":1397,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":1378,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":1418,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1366,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1407,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["maximal",{"_index":938,"title":{},"body":{"components/GraphComponent.html":{}}}],["maxzoom",{"_index":906,"title":{},"body":{"components/GraphComponent.html":{}}}],["measure",{"_index":1489,"title":{},"body":{"injectables/QueryService.html":{}}}],["meet",{"_index":1059,"title":{},"body":{"components/GraphComponent.html":{}}}],["menu",{"_index":216,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["message",{"_index":1197,"title":{},"body":{"components/InitComponent.html":{}}}],["messages",{"_index":1192,"title":{},"body":{"components/InitComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["method",{"_index":302,"title":{},"body":{"interfaces/Color.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["milliseconds",{"_index":973,"title":{},"body":{"components/GraphComponent.html":{}}}],["min",{"_index":1295,"title":{},"body":{"components/InitComponent.html":{}}}],["mind",{"_index":259,"title":{},"body":{"interfaces/Color.html":{}}}],["minimal",{"_index":941,"title":{},"body":{"components/GraphComponent.html":{}}}],["minmax(200px",{"_index":1622,"title":{},"body":{"components/SidenavComponent.html":{}}}],["minzoom",{"_index":907,"title":{},"body":{"components/GraphComponent.html":{}}}],["miscellaneous",{"_index":1709,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":300,"title":{},"body":{"interfaces/Color.html":{}}}],["mixed",{"_index":262,"title":{},"body":{"interfaces/Color.html":{}}}],["mixing",{"_index":256,"title":{},"body":{"interfaces/Color.html":{}}}],["modifier",{"_index":917,"title":{},"body":{"components/GraphComponent.html":{}}}],["modifier:{{settings.clumpingmodifier",{"_index":1593,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifier:{{settings.distancemodifier",{"_index":1592,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifiers",{"_index":699,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["module",{"_index":152,"title":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["modules",{"_index":154,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1746,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":1566,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["mouseevent",{"_index":1568,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["msg",{"_index":1198,"title":{},"body":{"components/InitComponent.html":{}}}],["multiplier",{"_index":700,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["n",{"_index":320,"title":{},"body":{"interfaces/Color.html":{}}}],["naive",{"_index":254,"title":{},"body":{"interfaces/Color.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"index.html":{}}}],["nav",{"_index":1624,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigate",{"_index":1297,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["navigating",{"_index":855,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["navigation",{"_index":1193,"title":{},"body":{"components/InitComponent.html":{}}}],["needs",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":223,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":984,"title":{},"body":{"components/GraphComponent.html":{}}}],["ng",{"_index":488,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":902,"title":{},"body":{"components/GraphComponent.html":{}}}],["ngmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["ngonchanges",{"_index":349,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{}}}],["ngonchanges(changes",{"_index":404,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["node",{"_index":583,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["node_${c.group}_${c.id",{"_index":1094,"title":{},"body":{"components/GraphComponent.html":{}}}],["nodeclicked",{"_index":909,"title":{},"body":{"components/GraphComponent.html":{}}}],["nodehovered",{"_index":910,"title":{},"body":{"components/GraphComponent.html":{}}}],["nodes",{"_index":608,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes.push(doc",{"_index":718,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes.push(node",{"_index":715,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["non",{"_index":665,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["none",{"_index":1125,"title":{},"body":{"components/GraphComponent.html":{}}}],["norm",{"_index":658,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normal",{"_index":276,"title":{},"body":{"interfaces/Color.html":{}}}],["normalization",{"_index":243,"title":{},"body":{"interfaces/Color.html":{},"injectables/QueryService.html":{}}}],["normalized",{"_index":247,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["normalizedeviation",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["normalizedeviation(value",{"_index":251,"title":{},"body":{"interfaces/Color.html":{}}}],["normalizing",{"_index":245,"title":{},"body":{"interfaces/Color.html":{}}}],["normwordpairs",{"_index":660,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normwordpairs[id",{"_index":663,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["notes",{"_index":962,"title":{},"body":{"components/GraphComponent.html":{}}}],["nothing",{"_index":949,"title":{},"body":{"components/GraphComponent.html":{}}}],["nth",{"_index":494,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["null",{"_index":597,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["number",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1324,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(corpus.results",{"_index":711,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id",{"_index":650,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id1",{"_index":640,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id2",{"_index":642,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(corpus.dictionary).find(key",{"_index":614,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(exactpairs).map((key",{"_index":457,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(softpairs).map((key",{"_index":465,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(wordimportancepairs",{"_index":686,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs",{"_index":662,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs).includes(wordskey",{"_index":678,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["observable",{"_index":579,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["observable(subscriber",{"_index":710,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["on('click",{"_index":1096,"title":{},"body":{"components/GraphComponent.html":{}}}],["on('mouseenter",{"_index":1098,"title":{},"body":{"components/GraphComponent.html":{}}}],["on('mouseleave",{"_index":1102,"title":{},"body":{"components/GraphComponent.html":{}}}],["on('zoom",{"_index":1065,"title":{},"body":{"components/GraphComponent.html":{}}}],["once",{"_index":1187,"title":{},"body":{"components/InitComponent.html":{}}}],["onchanges",{"_index":331,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{}}}],["one",{"_index":519,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["open",{"_index":1557,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["operating",{"_index":1455,"title":{},"body":{"injectables/QueryService.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["otherwise",{"_index":1508,"title":{},"body":{"injectables/QueryService.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"index.html":{},"overview.html":{}}}],["out.get(match).add(parent",{"_index":809,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.has(match",{"_index":808,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.set(match",{"_index":810,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["output",{"_index":214,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["outputs",{"_index":352,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["over",{"_index":368,"title":{},"body":{"components/ComparisonComponent.html":{},"components/GraphComponent.html":{}}}],["overflow",{"_index":482,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["overflowing",{"_index":377,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["overview",{"_index":1749,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":831,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["package",{"_index":1684,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":484,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["page",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pair",{"_index":1452,"title":{},"body":{"modules/PipesModule.html":{},"miscellaneous/variables.html":{}}}],["paired",{"_index":1437,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairs",{"_index":389,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["pairseparator",{"_index":581,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pairsplitfirstpipe",{"_index":1422,"title":{"pipes/PairSplitFirstPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairsplitsecondpipe",{"_index":1432,"title":{"pipes/PairSplitSecondPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairup",{"_index":1434,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairuppipe",{"_index":1435,"title":{"pipes/PairUpPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["panelclass",{"_index":1254,"title":{},"body":{"components/InitComponent.html":{}}}],["param",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["parent",{"_index":779,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["parse",{"_index":1246,"title":{},"body":{"components/InitComponent.html":{}}}],["parsed",{"_index":1264,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["parsing",{"_index":1214,"title":{},"body":{"components/InitComponent.html":{}}}],["part",{"_index":981,"title":{},"body":{"components/GraphComponent.html":{}}}],["passed",{"_index":605,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["passing",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["path",{"_index":192,"title":{},"body":{"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["patternproperties",{"_index":1325,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["percent:'.2",{"_index":552,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percent:\\'.2",{"_index":572,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percentage",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonEntryComponent.html":{},"injectables/LoadingService.html":{}}}],["perform",{"_index":611,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["phrase",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe",{"_index":759,"title":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["pipe(map((corpus",{"_index":863,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["pipes",{"_index":866,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"overview.html":{}}}],["pipes/escape",{"_index":795,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pair",{"_index":802,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pipes.module",{"_index":1159,"title":{},"body":{"modules/HomeModule.html":{}}}],["pipesmodule",{"_index":1158,"title":{"modules/PipesModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":876,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["placed",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pointer",{"_index":1124,"title":{},"body":{"components/GraphComponent.html":{}}}],["populates",{"_index":381,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["position",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["possible",{"_index":413,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["potentially",{"_index":402,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["pow2",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["pow2(n",{"_index":324,"title":{},"body":{"interfaces/Color.html":{}}}],["power",{"_index":323,"title":{},"body":{"interfaces/Color.html":{}}}],["present",{"_index":858,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["prevents",{"_index":845,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["prevword",{"_index":476,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["primary",{"_index":562,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["process",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["processed",{"_index":1209,"title":{},"body":{"components/InitComponent.html":{}}}],["prod",{"_index":1733,"title":{},"body":{"index.html":{}}}],["product",{"_index":636,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["production",{"_index":1734,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["project",{"_index":1715,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1220,"title":{},"body":{"components/InitComponent.html":{}}}],["promise((resolve",{"_index":1257,"title":{},"body":{"components/InitComponent.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":1743,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":861,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["providers",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["put",{"_index":1439,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["query",{"_index":612,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["querying",{"_index":1454,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryservice",{"_index":356,"title":{"injectables/QueryService.html":{}},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["queryutils",{"_index":433,"title":{},"body":{"components/ComparisonComponent.html":{},"components/GraphComponent.html":{},"injectables/QueryService.html":{}}}],["queryutils.getdocumenttext(id",{"_index":1538,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getmostimportantexactmatches(this.wordpairs",{"_index":456,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getmostimportantsoftmatches(this.wordpairs",{"_index":464,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getnormalizedwordimportancepairs(id1",{"_index":1539,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarity(id1",{"_index":1532,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarityword(word1",{"_index":1533,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsoftcosinemeasure(id1",{"_index":1537,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getword(id",{"_index":1531,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getwordid(word",{"_index":1529,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproduct(id1",{"_index":1534,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproductsingle(id",{"_index":1535,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.softcosinemeasurenorm(id1",{"_index":1536,"title":{},"body":{"injectables/QueryService.html":{}}}],["quot",{"_index":882,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["r",{"_index":242,"title":{},"body":{"interfaces/Color.html":{}}}],["r)}${(g.length",{"_index":316,"title":{},"body":{"interfaces/Color.html":{}}}],["r.length",{"_index":314,"title":{},"body":{"interfaces/Color.html":{}}}],["radius",{"_index":491,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["radius(1",{"_index":1046,"title":{},"body":{"components/GraphComponent.html":{}}}],["re",{"_index":825,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reactiveformsmodule",{"_index":1145,"title":{},"body":{"modules/HomeModule.html":{}}}],["readonly",{"_index":1459,"title":{},"body":{"injectables/QueryService.html":{}}}],["red",{"_index":1255,"title":{},"body":{"components/InitComponent.html":{}}}],["redirectto",{"_index":199,"title":{},"body":{"modules/AppRouter.html":{}}}],["reduce((a",{"_index":1577,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["reference",{"_index":1231,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["regexp",{"_index":799,"title":{},"body":{"components/DocumentContentComponent.html":{},"dependencies.html":{}}}],["regexp(`(?${escapedword",{"_index":826,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reject",{"_index":1212,"title":{},"body":{"components/InitComponent.html":{}}}],["reject(e",{"_index":1269,"title":{},"body":{"components/InitComponent.html":{}}}],["relation",{"_index":438,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relations",{"_index":735,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{}}}],["relationships",{"_index":1564,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["relative",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["reload",{"_index":1725,"title":{},"body":{"index.html":{}}}],["rendered",{"_index":944,"title":{},"body":{"components/GraphComponent.html":{}}}],["replace(/\"/g",{"_index":881,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/&/g",{"_index":877,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/'/g",{"_index":883,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(//g",{"_index":879,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replaces",{"_index":869,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["reports",{"_index":1477,"title":{},"body":{"injectables/QueryService.html":{}}}],["representations",{"_index":1277,"title":{},"body":{"components/InitComponent.html":{}}}],["required",{"_index":955,"title":{},"body":{"components/GraphComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resize",{"_index":1154,"title":{},"body":{"modules/HomeModule.html":{},"dependencies.html":{}}}],["resolve",{"_index":1211,"title":{},"body":{"components/InitComponent.html":{}}}],["resolve(parsed",{"_index":1267,"title":{},"body":{"components/InitComponent.html":{}}}],["responsible",{"_index":327,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["result",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":610,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["retrieves",{"_index":1426,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["return",{"_index":252,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["reversed",{"_index":776,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap",{"_index":781,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap.get(word)?.has(hoveredword",{"_index":817,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["rgb",{"_index":239,"title":{},"body":{"interfaces/Color.html":{}}}],["rgba(0",{"_index":565,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["rgba(map",{"_index":1131,"title":{},"body":{"components/GraphComponent.html":{}}}],["right",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["root'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["route",{"_index":846,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["router",{"_index":851,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["routermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forchild(routes",{"_index":1161,"title":{},"body":{"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forroot(routes",{"_index":200,"title":{},"body":{"modules/AppRouter.html":{}}}],["routes",{"_index":18,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{},"routes.html":{}}}],["rows",{"_index":1620,"title":{},"body":{"components/SidenavComponent.html":{}}}],["run",{"_index":1720,"title":{},"body":{"index.html":{}}}],["running",{"_index":1007,"title":{},"body":{"components/GraphComponent.html":{},"index.html":{}}}],["rxjs",{"_index":580,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":860,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/QueryService.html":{}}}],["safe",{"_index":761,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["saying",{"_index":1225,"title":{},"body":{"components/InitComponent.html":{}}}],["scaffolding",{"_index":1727,"title":{},"body":{"index.html":{}}}],["scaleextent([this.minzoom",{"_index":1072,"title":{},"body":{"components/GraphComponent.html":{}}}],["scales",{"_index":919,"title":{},"body":{"components/GraphComponent.html":{}}}],["schema",{"_index":1320,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":957,"title":{},"body":{"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["scrollable",{"_index":337,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["searchqueryschema",{"_index":1323,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["second",{"_index":264,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["second[1",{"_index":460,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["secondary",{"_index":828,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{}}}],["select",{"_index":1126,"title":{},"body":{"components/GraphComponent.html":{}}}],["selectall('.node",{"_index":1086,"title":{},"body":{"components/GraphComponent.html":{}}}],["selected",{"_index":363,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["selectedchange",{"_index":526,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["selecteddocument",{"_index":360,"title":{"interfaces/SelectedDocument.html":{}},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["selecteddocuments",{"_index":351,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["selectedwords",{"_index":338,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selection",{"_index":328,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["semantic",{"_index":1276,"title":{},"body":{"components/InitComponent.html":{}}}],["sending",{"_index":1201,"title":{},"body":{"components/InitComponent.html":{}}}],["separator",{"_index":1294,"title":{},"body":{"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1721,"title":{},"body":{"index.html":{}}}],["server",{"_index":1719,"title":{},"body":{"index.html":{}}}],["service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["services/json",{"_index":1236,"title":{},"body":{"components/InitComponent.html":{}}}],["services/loading.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["services/query.service",{"_index":431,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["set",{"_index":232,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["set([...this.highlightedsoftmatches",{"_index":819,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set([parent",{"_index":811,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set(softmatches",{"_index":1582,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["set(wordmap.keys",{"_index":1575,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["setcorpus",{"_index":1472,"title":{},"body":{"injectables/QueryService.html":{}}}],["setcorpus(corpus",{"_index":1501,"title":{},"body":{"injectables/QueryService.html":{}}}],["setisloading",{"_index":1335,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setisloading(value",{"_index":1338,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress",{"_index":1336,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress(value",{"_index":1341,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage",{"_index":1337,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage(value",{"_index":1343,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setquery",{"_index":1178,"title":{},"body":{"components/InitComponent.html":{}}}],["setquery(corpus",{"_index":1207,"title":{},"body":{"components/InitComponent.html":{}}}],["sets",{"_index":770,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["setter",{"_index":1340,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["settimeout",{"_index":1032,"title":{},"body":{"components/GraphComponent.html":{}}}],["setting",{"_index":226,"title":{},"body":{"interfaces/AppSettings.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":206,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["settings.component.html",{"_index":217,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":218,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":1151,"title":{},"body":{"modules/HomeModule.html":{}}}],["settingschange",{"_index":222,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":143,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setzoom",{"_index":903,"title":{},"body":{"components/GraphComponent.html":{}}}],["setzoom(value",{"_index":999,"title":{},"body":{"components/GraphComponent.html":{}}}],["shadow",{"_index":510,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["show",{"_index":1590,"title":{},"body":{"components/SettingsComponent.html":{}}}],["showdeviations",{"_index":209,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["showing",{"_index":725,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["showlabels",{"_index":210,"title":{},"body":{"interfaces/AppSettings.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["shrink",{"_index":557,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["sidebar",{"_index":1559,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidebarclose",{"_index":1561,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component",{"_index":737,"title":{},"body":{"components/DocumentComponent.html":{}}}],["sidenav.component.html",{"_index":1554,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1555,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav/document/document",{"_index":1156,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/document/document.component",{"_index":1155,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/sidenav.component",{"_index":432,"title":{},"body":{"components/ComparisonComponent.html":{},"modules/HomeModule.html":{}}}],["sidenavcomponent",{"_index":145,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sides",{"_index":931,"title":{},"body":{"components/GraphComponent.html":{}}}],["similarities",{"_index":637,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["similarity",{"_index":409,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["simplechanges",{"_index":405,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{}}}],["simulating",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simulation",{"_index":606,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationlinkdatum",{"_index":599,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationnodedatum",{"_index":588,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["size",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["snackbar",{"_index":1183,"title":{},"body":{"components/InitComponent.html":{}}}],["soft",{"_index":386,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["softcosinemeasurenorm",{"_index":1473,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["softcosinemeasurenorm(id1",{"_index":659,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["softmatch",{"_index":525,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["softmatches",{"_index":694,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["softmatches[id",{"_index":695,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["softpairs",{"_index":463,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["softpairs[key",{"_index":466,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["something",{"_index":1351,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sorted",{"_index":425,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairsexact",{"_index":339,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairssoft",{"_index":340,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"index.html":{}}}],["space",{"_index":277,"title":{},"body":{"interfaces/Color.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["spacing",{"_index":835,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["span",{"_index":564,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["special",{"_index":870,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["specific",{"_index":230,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["specified",{"_index":225,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/GraphComponent.html":{},"components/SettingsComponent.html":{}}}],["specifies",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GraphComponent.html":{}}}],["specifying",{"_index":435,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["spinner",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["split",{"_index":1429,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["split.pipe",{"_index":803,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["split.pipe.ts",{"_index":1424,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["split.pipe.ts:16",{"_index":1428,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{}}}],["split.pipe.ts:33",{"_index":1446,"title":{},"body":{"pipes/PairSplitSecondPipe.html":{}}}],["split.pipe.ts:51",{"_index":1447,"title":{},"body":{"pipes/PairUpPipe.html":{}}}],["split.pipe.ts:68",{"_index":1627,"title":{},"body":{"pipes/SplitUpPipe.html":{}}}],["splits",{"_index":1425,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splitting",{"_index":762,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["splitup",{"_index":1443,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splituppipe",{"_index":752,"title":{"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../comparison.component.ts",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.ts",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../various.utils.ts",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routes.ts",{"_index":186,"title":{},"body":{"modules/AppRouter.html":{}}}],["src/app/guards/document",{"_index":843,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["src/app/home/comparison/comparison",{"_index":514,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["src/app/home/comparison/comparison.component.ts",{"_index":326,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/home/comparison/comparison.component.ts:102",{"_index":387,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:112",{"_index":380,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:124",{"_index":385,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:137",{"_index":373,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:146",{"_index":397,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:168",{"_index":378,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:178",{"_index":391,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:31",{"_index":361,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:36",{"_index":370,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:40",{"_index":365,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:45",{"_index":427,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:49",{"_index":424,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:53",{"_index":426,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:57",{"_index":421,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:61",{"_index":417,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:65",{"_index":416,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:69",{"_index":408,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:74",{"_index":357,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:81",{"_index":407,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:90",{"_index":406,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/graph/graph.component.ts",{"_index":885,"title":{},"body":{"components/GraphComponent.html":{},"coverage.html":{}}}],["src/app/home/graph/graph.component.ts:103",{"_index":914,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:114",{"_index":997,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:118",{"_index":998,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:137",{"_index":995,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:154",{"_index":992,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:173",{"_index":996,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:18",{"_index":920,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:188",{"_index":989,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:211",{"_index":978,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:22",{"_index":945,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:223",{"_index":985,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:251",{"_index":982,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:26",{"_index":935,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:270",{"_index":954,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:284",{"_index":966,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:297",{"_index":959,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:30",{"_index":924,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:306",{"_index":1000,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:315",{"_index":974,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:34",{"_index":916,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:38",{"_index":940,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:42",{"_index":937,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:46",{"_index":922,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:50",{"_index":942,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:54",{"_index":926,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:59",{"_index":950,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:63",{"_index":946,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:67",{"_index":951,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:71",{"_index":952,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:77",{"_index":1008,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:82",{"_index":1001,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:87",{"_index":1006,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:92",{"_index":1009,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/graph/graph.component.ts:98",{"_index":1002,"title":{},"body":{"components/GraphComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.module.ts",{"_index":1140,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routes.ts",{"_index":1160,"title":{},"body":{"modules/HomeRoutes.html":{}}}],["src/app/home/settings/settings.component.ts",{"_index":204,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/home/settings/settings.component.ts:26",{"_index":1587,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/home/settings/settings.component.ts:30",{"_index":1588,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/home/settings/settings.component.ts:37",{"_index":1589,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/home/sidenav/document/document",{"_index":741,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts",{"_index":723,"title":{},"body":{"components/DocumentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts:18",{"_index":731,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:22",{"_index":732,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:26",{"_index":733,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:30",{"_index":734,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:34",{"_index":736,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts",{"_index":1550,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:102",{"_index":1606,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:26",{"_index":1600,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:30",{"_index":1599,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:35",{"_index":1602,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:39",{"_index":1601,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:44",{"_index":1608,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:48",{"_index":1609,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:52",{"_index":1610,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:56",{"_index":1611,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:62",{"_index":1605,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:71",{"_index":1604,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:80",{"_index":1607,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:92",{"_index":1603,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/init/init.component.ts",{"_index":1162,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{}}}],["src/app/init/init.component.ts:107",{"_index":1219,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:116",{"_index":1221,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:132",{"_index":1213,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:153",{"_index":1208,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:161",{"_index":1204,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:21",{"_index":1223,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:25",{"_index":1222,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:29",{"_index":1227,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:33",{"_index":1234,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:38",{"_index":1185,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:56",{"_index":1203,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:70",{"_index":1200,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:91",{"_index":1195,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.module.ts",{"_index":1308,"title":{},"body":{"modules/InitModule.html":{}}}],["src/app/init/init.routes.ts",{"_index":1311,"title":{},"body":{"modules/InitRoutes.html":{}}}],["src/app/material.module.ts",{"_index":1363,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pipes/escape",{"_index":867,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pair",{"_index":1423,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1451,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/json",{"_index":1313,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/loading.service.ts",{"_index":1330,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:16",{"_index":1349,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:20",{"_index":1346,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:26",{"_index":1355,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:30",{"_index":1353,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:36",{"_index":1359,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:40",{"_index":1357,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:46",{"_index":1339,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:54",{"_index":1342,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:62",{"_index":1344,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/query.service.ts",{"_index":1453,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/services/query.service.ts:103",{"_index":1486,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:113",{"_index":1499,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:122",{"_index":1500,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:132",{"_index":1503,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:142",{"_index":1488,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:151",{"_index":1479,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:161",{"_index":1483,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:169",{"_index":1493,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:19",{"_index":1511,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:23",{"_index":1514,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:28",{"_index":1515,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:34",{"_index":1475,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:53",{"_index":1502,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:62",{"_index":1505,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:74",{"_index":1491,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:83",{"_index":1490,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:93",{"_index":1485,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/utils/graph.utils.ts",{"_index":237,"title":{},"body":{"interfaces/Color.html":{},"coverage.html":{}}}],["src/app/utils/query.utils.ts",{"_index":573,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["src/app/utils/various.utils.ts",{"_index":1678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":301,"title":{},"body":{"interfaces/Color.html":{}}}],["srgbcompanding",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["srgbcompanding(color",{"_index":295,"title":{},"body":{"interfaces/Color.html":{}}}],["srgbcompanding(colormix(c1",{"_index":308,"title":{},"body":{"interfaces/Color.html":{}}}],["stage",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["started",{"_index":1713,"title":{"index.html":{}},"body":{}}],["starting",{"_index":923,"title":{},"body":{"components/GraphComponent.html":{}}}],["statements",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["stiffness",{"_index":248,"title":{},"body":{"interfaces/Color.html":{}}}],["store",{"_index":1186,"title":{},"body":{"components/InitComponent.html":{}}}],["stored",{"_index":1518,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["stores",{"_index":1003,"title":{},"body":{"components/GraphComponent.html":{},"injectables/LoadingService.html":{}}}],["storing",{"_index":1512,"title":{},"body":{"injectables/QueryService.html":{}}}],["str1",{"_index":1436,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str1}${separator}${str2",{"_index":1442,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str2",{"_index":1438,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["strength",{"_index":1043,"title":{},"body":{"components/GraphComponent.html":{}}}],["strength(0",{"_index":1049,"title":{},"body":{"components/GraphComponent.html":{}}}],["strength(1",{"_index":1039,"title":{},"body":{"components/GraphComponent.html":{}}}],["stretch",{"_index":556,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1440,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["stroke",{"_index":1130,"title":{},"body":{"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["structure",{"_index":423,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["style",{"_index":833,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["subject",{"_index":1350,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["subscriber.complete",{"_index":720,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscriber.next({progress",{"_index":713,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscription",{"_index":1498,"title":{},"body":{"injectables/QueryService.html":{}}}],["subtitle",{"_index":1551,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["successful",{"_index":1217,"title":{},"body":{"components/InitComponent.html":{}}}],["support",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":890,"title":{},"body":{"components/GraphComponent.html":{},"modules.html":{}}}],["svg_wrapper",{"_index":1054,"title":{},"body":{"components/GraphComponent.html":{}}}],["table",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":972,"title":{},"body":{"components/GraphComponent.html":{}}}],["taking",{"_index":257,"title":{},"body":{"interfaces/Color.html":{}}}],["tap",{"_index":1520,"title":{},"body":{"injectables/QueryService.html":{}}}],["tap(progress",{"_index":1542,"title":{},"body":{"injectables/QueryService.html":{}}}],["target",{"_index":601,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["tertiary",{"_index":829,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["test",{"_index":1737,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1736,"title":{},"body":{"index.html":{}}}],["text",{"_index":501,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["text(c",{"_index":1112,"title":{},"body":{"components/GraphComponent.html":{}}}],["text.join",{"_index":652,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["textarea",{"_index":1232,"title":{},"body":{"components/InitComponent.html":{}}}],["texts",{"_index":575,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["texts_bow",{"_index":576,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["that's",{"_index":788,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.calculatecoverzoom",{"_index":1034,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.centercamera(0",{"_index":1030,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.clearhighlightedwords",{"_index":1570,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.clearwordselection",{"_index":450,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.compareclick.emit(e",{"_index":1573,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.convertedcontent",{"_index":804,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.corpussource.asobservable",{"_index":1513,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.getvalue",{"_index":1528,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.next(corpus",{"_index":1527,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.defaultzoom",{"_index":1031,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.displayerror('couldn\\'t",{"_index":1245,"title":{},"body":{"components/InitComponent.html":{}}}],["this.documentsimilarities",{"_index":446,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.documentsimilarity",{"_index":547,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.drawgraph",{"_index":1029,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.drawlabels",{"_index":1013,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.drawnodes",{"_index":1079,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.emptyclicked.emit({click",{"_index":1078,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.escapehtml.transform(this.content",{"_index":821,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.escapehtml.transform(word",{"_index":824,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.g",{"_index":1061,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.g.append('g",{"_index":1085,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.g.attr('transform",{"_index":1070,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.g.node().getboundingclientrect",{"_index":1117,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.generateexactpairs",{"_index":453,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatesoftpairs",{"_index":454,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatewordpairs",{"_index":441,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.getformattedcontent",{"_index":805,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.getreversedwordmap",{"_index":822,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.graphpadding",{"_index":1119,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.height",{"_index":1023,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.highlightedexactmatches",{"_index":820,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedexactmatches.has(a",{"_index":1580,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedsoftmatches",{"_index":1581,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap",{"_index":1583,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap.entries",{"_index":807,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.hoverednode",{"_index":1099,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.hoveredword",{"_index":477,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.initevents",{"_index":1028,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.initforces",{"_index":1026,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.initsimulation",{"_index":1011,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.initsvg",{"_index":1027,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.isloading",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloadingsource.asobservable",{"_index":1345,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.isloadingsource.next(value",{"_index":1360,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.jsonfile",{"_index":1250,"title":{},"body":{"components/InitComponent.html":{}}}],["this.jsonvalidateservice.validatecorpus(parsed",{"_index":1266,"title":{},"body":{"components/InitComponent.html":{}}}],["this.loadingprogress",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingprogresssource.asobservable",{"_index":1352,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingprogresssource.next(value",{"_index":1361,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.isloading.subscribe(value",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingprogress.subscribe(value",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingstage.subscribe(value",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.setisloading(false",{"_index":1548,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setisloading(true",{"_index":1540,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingprogress(progress.value",{"_index":1544,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingstage(progress.stage",{"_index":1543,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingstage",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingstagesource.asobservable",{"_index":1356,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingstagesource.next(value",{"_index":1362,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.maxzoom",{"_index":1073,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodeclicked.emit({click",{"_index":1097,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodehovered.emit({nodeid",{"_index":1101,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodes",{"_index":1084,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodes.append('circle",{"_index":1092,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodes.append('text",{"_index":1104,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodes.attr('transform",{"_index":1081,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodes.select('node",{"_index":1114,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.nodes.selectall('text').remove",{"_index":1116,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.queryservice.currentcorpus",{"_index":862,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["this.queryservice.getnormalizedwordimportancepairs(this.selecteddocuments[0].id",{"_index":452,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.getsoftcosinemeasure(id1",{"_index":447,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.setcorpus(corpus",{"_index":1270,"title":{},"body":{"components/InitComponent.html":{}}}],["this.router.navigate",{"_index":865,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["this.router.navigate(['/map",{"_index":1271,"title":{},"body":{"components/InitComponent.html":{}}}],["this.scrollable[element.id",{"_index":468,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedchange.emit",{"_index":548,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.selecteddocuments?.length",{"_index":440,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[0].id",{"_index":443,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[1].id",{"_index":445,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.clear",{"_index":475,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.delete(e.word",{"_index":473,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.setquery((exampledocument",{"_index":1272,"title":{},"body":{"components/InitComponent.html":{}}}],["this.setquery(res",{"_index":1243,"title":{},"body":{"components/InitComponent.html":{}}}],["this.settings[setting",{"_index":234,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.settingschange.emit(this.settings",{"_index":235,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.setzoom(this.defaultzoom",{"_index":1033,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.showlabels",{"_index":1103,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.sidebarclose.emit(e",{"_index":1569,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.simulation",{"_index":1024,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.simulation.alpha(0.1).restart",{"_index":1018,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.simulation.force('link",{"_index":1016,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.simulation.on('tick",{"_index":1080,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.snackbar.open",{"_index":1253,"title":{},"body":{"components/InitComponent.html":{}}}],["this.softmatch",{"_index":551,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.sortedwordpairsexact",{"_index":462,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.sortedwordpairssoft",{"_index":467,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.splituppipe.transform(hoveredword",{"_index":813,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.svg",{"_index":1050,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.svg.append('g",{"_index":1062,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.svg.attr('id",{"_index":1077,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.svg.attr('viewbox",{"_index":1021,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.svg.call(this.zoom",{"_index":1074,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.svg.on('click",{"_index":1075,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.usedcorpus(corpus",{"_index":1530,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.validateandparse(filereader.result",{"_index":1262,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateandparse(this.insertedtext",{"_index":1258,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validatetext().then(res",{"_index":1242,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateuploadedfile().then(res",{"_index":1252,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validating",{"_index":1241,"title":{},"body":{"components/InitComponent.html":{}}}],["this.weight",{"_index":546,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.width",{"_index":1022,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.word",{"_index":549,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.wordhovered.emit(this.hoveredword",{"_index":480,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordpairs",{"_index":451,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordschanged.emit(this.selectedwords",{"_index":474,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.worker",{"_index":1522,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.onmessage",{"_index":1525,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.postmessage({query",{"_index":1549,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.asobservable",{"_index":1541,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.next(data",{"_index":1526,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.zoom",{"_index":1063,"title":{},"body":{"components/GraphComponent.html":{}}}],["this.zoomed.emit(e",{"_index":1069,"title":{},"body":{"components/GraphComponent.html":{}}}],["through",{"_index":681,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["time",{"_index":947,"title":{},"body":{"components/GraphComponent.html":{}}}],["title",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["toggle",{"_index":1389,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tool",{"_index":1275,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["top",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["total",{"_index":528,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["transform",{"_index":872,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(str1",{"_index":1441,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(text",{"_index":873,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["transform(value",{"_index":1427,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform.height",{"_index":1122,"title":{},"body":{"components/GraphComponent.html":{}}}],["transform.width",{"_index":1120,"title":{},"body":{"components/GraphComponent.html":{}}}],["transformed",{"_index":875,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["translate(${d.x",{"_index":1082,"title":{},"body":{"components/GraphComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["true",{"_index":864,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1263,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["ts",{"_index":1321,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["tslib",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["tuples",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":266,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1758,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1521,"title":{},"body":{"injectables/QueryService.html":{}}}],["ui",{"_index":517,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["undefined",{"_index":479,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["unit",{"_index":1735,"title":{},"body":{"index.html":{}}}],["unless",{"_index":848,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["unsuccessful",{"_index":1218,"title":{},"body":{"components/InitComponent.html":{}}}],["up",{"_index":763,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["updated",{"_index":400,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["updates",{"_index":977,"title":{},"body":{"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["updating",{"_index":915,"title":{},"body":{"components/GraphComponent.html":{}}}],["upon",{"_index":1497,"title":{},"body":{"injectables/QueryService.html":{}}}],["url(\"../../../src/assets/background.jpg",{"_index":1285,"title":{},"body":{"components/InitComponent.html":{}}}],["use",{"_index":414,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["used",{"_index":854,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["usedcorpus",{"_index":1474,"title":{},"body":{"injectables/QueryService.html":{}}}],["usedcorpus(corpus",{"_index":1504,"title":{},"body":{"injectables/QueryService.html":{}}}],["user",{"_index":215,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["using",{"_index":227,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["utility",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/query.utils",{"_index":434,"title":{},"body":{"components/ComparisonComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["utils/various.utils",{"_index":801,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["validate",{"_index":1189,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["validate(corpus",{"_index":1329,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validate.service",{"_index":1237,"title":{},"body":{"components/InitComponent.html":{}}}],["validate.service.ts",{"_index":1314,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate.service.ts:87",{"_index":1317,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validateandparse",{"_index":1179,"title":{},"body":{"components/InitComponent.html":{}}}],["validateandparse(text",{"_index":1210,"title":{},"body":{"components/InitComponent.html":{}}}],["validatecorpus",{"_index":1315,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validatecorpus(corpus",{"_index":1316,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validated",{"_index":1215,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validatetext",{"_index":1180,"title":{},"body":{"components/InitComponent.html":{}}}],["validateuploadedfile",{"_index":1181,"title":{},"body":{"components/InitComponent.html":{}}}],["validating",{"_index":1173,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validation",{"_index":1188,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["value?.includes(separator",{"_index":1430,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator",{"_index":1445,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[0",{"_index":1431,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[1",{"_index":1433,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valuechanged",{"_index":800,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"coverage.html":{}}}],["valuechanged(changes?.clumpingmodifier",{"_index":1015,"title":{},"body":{"components/GraphComponent.html":{}}}],["valuechanged(changes?.distancemodifier",{"_index":1014,"title":{},"body":{"components/GraphComponent.html":{}}}],["valuechanged(changes?.height",{"_index":1020,"title":{},"body":{"components/GraphComponent.html":{}}}],["valuechanged(changes?.highlightedwords",{"_index":806,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["valuechanged(changes?.showlabels",{"_index":1012,"title":{},"body":{"components/GraphComponent.html":{}}}],["valuechanged(changes?.width",{"_index":1019,"title":{},"body":{"components/GraphComponent.html":{}}}],["values",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["variable",{"_index":382,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{}}}],["variables",{"_index":554,"title":{"miscellaneous/variables.html":{}},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"miscellaneous/variables.html":{}}}],["various.utils",{"_index":582,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["version",{"_index":577,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":1739,"title":{},"body":{"index.html":{}}}],["view",{"_index":932,"title":{},"body":{"components/GraphComponent.html":{}}}],["viewchild",{"_index":1235,"title":{},"body":{"components/InitComponent.html":{}}}],["viewchild('jsontextarea",{"_index":1230,"title":{},"body":{"components/InitComponent.html":{}}}],["visible",{"_index":787,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["visualisation",{"_index":1714,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1274,"title":{},"body":{"components/InitComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["vx",{"_index":594,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["vy",{"_index":595,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1",{"_index":630,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1id",{"_index":643,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1weight",{"_index":644,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2",{"_index":632,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2id",{"_index":645,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2weight",{"_index":646,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["way",{"_index":255,"title":{},"body":{"interfaces/Color.html":{}}}],["webworker",{"_index":1495,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":430,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["welcoming",{"_index":1163,"title":{},"body":{"components/InitComponent.html":{}}}],["wheel",{"_index":1067,"title":{},"body":{"components/GraphComponent.html":{}}}],["whether",{"_index":375,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["wid1",{"_index":667,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wid2",{"_index":669,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["widthmult",{"_index":1118,"title":{},"body":{"components/GraphComponent.html":{}}}],["window",{"_index":936,"title":{},"body":{"components/GraphComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["within",{"_index":850,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["word",{"_index":369,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["word1",{"_index":627,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["word1}${pairseparator}${word2",{"_index":677,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word2",{"_index":628,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["word_similarities",{"_index":578,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["wordhovered",{"_index":353,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordimportancepairs",{"_index":682,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordimportancepairs[id",{"_index":692,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordmap",{"_index":420,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["wordpairs",{"_index":341,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[id",{"_index":664,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[wordskey",{"_index":679,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairskeys",{"_index":661,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["words",{"_index":329,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["words.has(hoveredword",{"_index":816,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(w1",{"_index":814,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(w2",{"_index":815,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["wordschanged",{"_index":354,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordsimilarity",{"_index":671,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordskey",{"_index":676,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word}}{{softmatch",{"_index":553,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["worker",{"_index":1460,"title":{},"body":{"injectables/QueryService.html":{}}}],["worker('../workers/graph",{"_index":1523,"title":{},"body":{"injectables/QueryService.html":{}}}],["workerdata",{"_index":1461,"title":{},"body":{"injectables/QueryService.html":{}}}],["wrapper",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["wrapper_${c.id",{"_index":1090,"title":{},"body":{"components/GraphComponent.html":{}}}],["wweight1",{"_index":668,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wweight2",{"_index":670,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wysiwyginsert",{"_index":1279,"title":{},"body":{"components/InitComponent.html":{}}}],["x",{"_index":592,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SidenavComponent.html":{}}}],["xminymin",{"_index":1058,"title":{},"body":{"components/GraphComponent.html":{}}}],["y",{"_index":593,"title":{},"body":{"interfaces/Corpus.html":{},"components/GraphComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["yes",{"_index":1480,"title":{},"body":{"injectables/QueryService.html":{}}}],["z",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/GraphComponent.html":{},"components/InitComponent.html":{}}}],["zone.js",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/GraphComponent.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["zoomed",{"_index":911,"title":{},"body":{"components/GraphComponent.html":{}}}],["zooms",{"_index":953,"title":{},"body":{"components/GraphComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main wrapper component of the application, handles only the loading between routes\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                loadingStage\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe loading service, passing values of loading\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Specifies if the page is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Specifies the progress in percentage value of the current stage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Specifies the current loading stage of the entire loading process\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Document Maps'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoadingService} from './services/loading.service';\n\n\n/**\n * Main wrapper component of the application, handles only the loading between routes\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Document Maps';\n\n  /**\n   * Specifies if the page is loading\n   * @public\n   */\n  isLoading = false;\n  /**\n   * Specifies the progress in percentage value of the current stage\n   * @public\n   */\n  loadingProgress: number;\n  /**\n   * Specifies the current loading stage of the entire loading process\n   * @public\n   */\n  loadingStage: string;\n\n  /**\n   * @param loadingService - The loading service, passing values of loading\n   */\n  constructor(\n    private loadingService: LoadingService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadingService.loadingProgress.subscribe(value => {\n      if (this.loadingProgress !== value){\n        this.loadingProgress = value;\n      }\n    });\n    this.loadingService.loadingStage.subscribe(value => {\n      if (this.loadingStage !== value) {\n        this.loadingStage = value;\n      }\n    });\n    this.loadingService.isLoading.subscribe(value => {\n      if (this.isLoading !== value) {\n        this.isLoading = value;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        {{loadingStage}} {{(loadingProgress / 100) | percent}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .loading-wrapper{\n  position: fixed;\n  z-index: 10;\n  background: #fff;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .loading{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    max-width: 600px;\n    width: 100%;\n    height: 100%;\n    position: relative;\n\n    .loading-phrase{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 1em;\n      width: 100%;\n      font-size: 1.65em;\n    }\n    mat-spinner{\n      margin-right: 0.5em;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{loadingStage}} {{(loadingProgress / 100) | percent}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRouter\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport {MaterialModule} from './material.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ExtendedModule, FlexModule} from '@angular/flex-layout';\nimport {RouterModule} from '@angular/router';\nimport {AppRouter} from './app.routes';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    MaterialModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexModule,\n    ExtendedModule,\n    RouterModule,\n    AppRouter\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRouter.html":{"url":"modules/AppRouter.html","title":"module - AppRouter","body":"\n                   \n\n\n\n\n    Modules\n    AppRouter\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CanActivate, RouterModule, Routes} from '@angular/router';\nimport {DocumentLoadedGuard} from './guards/document-loaded.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./init/init.module').then(m => m.InitModule)\"\n  },\n  {\n    path: 'map',\n    canActivate: ([DocumentLoadedGuard]),\n    loadChildren: () => \"import('./home/home.module').then(m => m.HomeModule)\"\n  },\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRouter {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppSettings.html":{"url":"interfaces/AppSettings.html","title":"interface - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/settings/settings.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface containing the app settings\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clumpingModifier\n                                \n                                \n                                        distanceModifier\n                                \n                                \n                                        showDeviations\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clumpingModifier\n                                    \n                                \n                                \n                                    \n                                        clumpingModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceModifier\n                                    \n                                \n                                \n                                    \n                                        distanceModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeviations\n                                    \n                                \n                                \n                                    \n                                        showDeviations:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/graph.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, containing the individual components of an RGB color\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        b\n                                \n                                \n                                        g\n                                \n                                \n                                        r\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                    \n                                \n                                \n                                    \n                                        b:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        g\n                                    \n                                \n                                \n                                    \n                                        g:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        r\n                                    \n                                \n                                \n                                    \n                                        r:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color{\n  r: number;\n  g: number;\n  b: number;\n}\n\n/**\n * A normalization function, normalizing between -1 and 1\n * @param value       The value to be normalized\n * @param stiffness   The initial incline of the function\n */\nexport function normalizeDeviation(value: number, stiffness: number = 1): number{\n  return ((1 + value / (1 + Math.abs(value * stiffness))) - 1)  * stiffness;\n}\n\n/**\n * A naive way of color mixing, not taking color compression in mind\n * @param color1    First color to be mixed\n * @param color2    Second color to be mixed\n * @param gradient  The gradient percentage between the two colors\n */\nexport function colorMix(color1: Color, color2: Color, gradient: number): Color {\n  const r = color1.r * (1 - gradient) + color2.r * (gradient);\n  const g = color1.g * (1 - gradient) + color2.g * (gradient);\n  const b = color1.b * (1 - gradient) + color2.b * (gradient);\n  return {r, g, b};\n}\n\n/**\n * A function that decompresses the color value from normal color space\n * @param color The color to be decompressed\n */\nexport function inverseSrgbCompanding(color: Color): Color {\n  let r = color.r / 255;\n  let g = color.g / 255;\n  let b = color.b / 255;\n\n  r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  return {r: r * 255, g: g * 255, b: b * 255};\n}\n\n/**\n * A function that compresses the color value back to normal color space\n * @param color The color to be compressed\n */\nexport function srgbCompanding(color: Color): Color {\n  let r = color.r / 255;\n  let g = color.g / 255;\n  let b = color.b / 255;\n\n  r = (r > 0.0031308) ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;\n  g = (g > 0.0031308) ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;\n  b = (b > 0.0031308) ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;\n\n  return {r: r * 255, g: g * 255, b: b * 255};\n}\n\n/**\n * A color mix of two colors using the sRGB method\n * @param color1    First color to be mixed\n * @param color2    Second color to be mixed\n * @param gradient  The gradient percentage between the two colors\n */\nexport function colorSrgbGradient(color1: Color, color2: Color, gradient: number): Color {\n  const c1 = inverseSrgbCompanding(color1);\n  const c2 = inverseSrgbCompanding(color2);\n\n  return srgbCompanding(colorMix(c1, c2, gradient));\n}\n\n/**\n * Converts a color interface to a hexcode string\n * @param color The color to be converted\n */\nexport function colorToHex(color: Color): string{\n  const r = (color.r >> 0).toString(16);\n  const g = (color.g >> 0).toString(16);\n  const b = (color.b >> 0).toString(16);\n  return `#${(r.length === 2 ? r : '0' + r)}${(g.length === 2 ? g : '0' + g)}${(b.length === 2 ? b : '0' + b)}`;\n}\n\n/**\n * Returns the base 2 logarithm of a number\n * @param n The number to return the logarithm of\n */\nexport function log2(n: number): number{\n  return Math.log2(n);\n}\n\n/**\n * Returns the 2 to the power of the specified number\n * @param n The number to return the 2 to the power of\n */\nexport function pow2(n: number): number{\n  return Math.pow(2, n);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonComponent.html":{"url":"components/ComparisonComponent.html","title":"component - ComparisonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/comparison/comparison.component.ts\n\n\n    \n        Description\n    \n    \n        A component responsible for the user interface for the selection of words which are to be highlighted\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison\n            \n\n            \n                styleUrls\n                ./comparison.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarities\n                            \n                            \n                                entryHoverEvent\n                            \n                            \n                                hoveredWord\n                            \n                            \n                                scrollable\n                            \n                            \n                                selectedWords\n                            \n                            \n                                sortedWordPairsExact\n                            \n                            \n                                sortedWordPairsSoft\n                            \n                            \n                                wordPairs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkOverflow\n                            \n                            \n                                clearWordSelection\n                            \n                            \n                                generateExactPairs\n                            \n                            \n                                generateSoftPairs\n                            \n                            \n                                generateWordPairs\n                            \n                            \n                                handleEntryHover\n                            \n                            \n                                handleWordSelection\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                wordHovered\n                            \n                            \n                                wordsChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService holding the corpus\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        wordHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:40\n                            \n                        \n                \n                    \n                        An event emitter that emits when the user hovers over a word\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wordsChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:36\n                            \n                        \n                \n                    \n                        An event emitter that emits when the word selection has been changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkOverflow\n                        \n                        \n                    \n                \n            \n            \n                \ncheckOverflow(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:137\n                \n            \n\n\n            \n                \n                    Checks whether a given HTML element is overflowing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HTML element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nclearWordSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:168\n                \n            \n\n\n            \n                \n                    Clears the selected words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateExactPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateExactPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:112\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsExact variable with just exact matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateSoftPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateSoftPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:124\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsSoft variable with just soft matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateWordPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateWordPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:102\n                \n            \n\n\n            \n                \n                    Generates the word pairs from the corpus in QueryService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleEntryHover\n                        \n                        \n                    \n                \n            \n            \n                \nhandleEntryHover(word: string, event: EntryHoverEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:178\n                \n            \n\n\n            \n                \n                    Handles when the user hovers over a word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that was hovered on\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                                EntryHoverEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event type, whether it was an entry or leave event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordSelection(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:146\n                \n            \n\n\n            \n                \n                    The event handler of when the word selection changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event holding which word was updated, whether it was checked or not and potentially its soft match\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentSimilarities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:69\n                            \n                        \n\n                \n                    \n                        The similarity between the two selected documents\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryHoverEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EntryHoverEvent\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                        A helper field, making it possible to use enum in the HTML template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:65\n                            \n                        \n\n                \n                    \n                        The currently hovered on word\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:61\n                            \n                        \n\n                \n                    \n                        Holds the information of if an HTML element is scrollable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds the selected words in a hierarchical structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsExact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:49\n                            \n                        \n\n                \n                    \n                        Holds the sorted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsSoft\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:53\n                            \n                        \n\n                \n                    \n                        Holds the sorted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wordPairs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:45\n                            \n                        \n\n                \n                    \n                        Holds the all matched word pairs and their associated weight\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges, EventEmitter, Output} from '@angular/core';\nimport {QueryService} from '../../services/query.service';\nimport {SelectedDocument} from '../sidenav/sidenav.component';\nimport * as queryUtils from '../../utils/query.utils';\n\n/**\n * An enum, specifying the hover event type\n */\nexport enum EntryHoverEvent{\n  Enter, Leave\n}\n\n/**\n * A type, specifying the relation of two matched words\n */\nexport type WordMap = Map>;\n\n/**\n * A component responsible for the user interface for the selection of words which are to be highlighted\n */\n@Component({\n  selector: 'app-comparison',\n  templateUrl: './comparison.component.html',\n  styleUrls: ['./comparison.component.scss']\n})\nexport class ComparisonComponent implements OnInit, OnChanges {\n\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[];\n\n  /**\n   * An event emitter that emits when the word selection has been changed\n   */\n  @Output() wordsChanged = new EventEmitter();\n  /**\n   * An event emitter that emits when the user hovers over a word\n   */\n  @Output() wordHovered = new EventEmitter();\n\n  /**\n   * Holds the all matched word pairs and their associated weight\n   */\n  wordPairs: {[key: string]: number};\n  /**\n   * Holds the sorted exact matches\n   */\n  sortedWordPairsExact: any[];\n  /**\n   * Holds the sorted soft matches\n   */\n  sortedWordPairsSoft: any[];\n  /**\n   * Holds the selected words in a hierarchical structure\n   */\n  selectedWords: WordMap = new Map>();\n  /**\n   * Holds the information of if an HTML element is scrollable\n   */\n  scrollable: {[key: string]: boolean} = {};\n  /**\n   * The currently hovered on word\n   */\n  hoveredWord: string;\n  /**\n   * The similarity between the two selected documents\n   */\n  documentSimilarities: number;\n\n  /**\n   * A helper field, making it possible to use enum in the HTML template\n   */\n  entryHoverEvent = EntryHoverEvent;\n\n  /**\n   * @param queryService  The QueryService holding the corpus\n   */\n  constructor(private queryService: QueryService) {}\n\n  ngOnInit(): void {\n    if (this.selectedDocuments?.length === 2){\n      this.generateWordPairs();\n      const id1 = this.selectedDocuments[0].id;\n      const id2 = this.selectedDocuments[1].id;\n      this.documentSimilarities = this.queryService.getSoftCosineMeasure(id1, id2);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedDocuments){\n      if (changes.selectedDocuments.currentValue.length === 2) {\n        this.generateWordPairs();\n      }\n      this.clearWordSelection();\n    }\n  }\n\n  /**\n   * Generates the word pairs from the corpus in QueryService\n   */\n  generateWordPairs(): void{\n    this.wordPairs = this.queryService.getNormalizedWordImportancePairs(this.selectedDocuments[0].id, this.selectedDocuments[1].id);\n\n    this.generateExactPairs();\n    this.generateSoftPairs();\n  }\n\n  /**\n   * Populates the sortedWordPairsExact variable with just exact matches\n   */\n  generateExactPairs(): void{\n    const exactPairs = queryUtils.getMostImportantExactMatches(this.wordPairs);\n    const items = Object.keys(exactPairs).map((key) => {\n      return [key, exactPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    this.sortedWordPairsExact = items;\n  }\n\n  /**\n   * Populates the sortedWordPairsSoft variable with just soft matches\n   */\n  generateSoftPairs(): void{\n    const softPairs = queryUtils.getMostImportantSoftMatches(this.wordPairs);\n    const items = Object.keys(softPairs).map((key) => {\n      return [key, softPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    this.sortedWordPairsSoft = items;\n  }\n\n  /**\n   * Checks whether a given HTML element is overflowing\n   * @param element   The HTML element\n   */\n  checkOverflow(element: HTMLElement): void {\n    this.scrollable[element.id] = element.offsetHeight ([matchWord]));\n      }\n    } else {\n      if (entry?.size > 1){\n        entry.delete(matchWord);\n      } else {\n        this.selectedWords.delete(e.word);\n      }\n    }\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Clears the selected words\n   */\n  clearWordSelection(): void{\n    this.selectedWords.clear();\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Handles when the user hovers over a word\n   * @param word  The word that was hovered on\n   * @param event The event type, whether it was an entry or leave event\n   */\n  handleEntryHover(word: string, event: EntryHoverEvent): void{\n    const prevWord = this.hoveredWord;\n    if (event === EntryHoverEvent.Enter){\n      this.hoveredWord = word;\n    } else if (this.hoveredWord === word){\n      this.hoveredWord = undefined;\n    }\n    if (prevWord !== this.hoveredWord){\n      this.wordHovered.emit(this.hoveredWord);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Exact matches\n    \n      \n        \n      \n      No hard matches\n    \n    \n  \n  \n    Soft matches\n    \n      \n        \n      \n      No soft matches\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./comparison.component.scss\n                \n                .comparison-wrapper{\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  padding-top: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 100%;\n  .matches-exact, .matches-soft{\n    width: 50%;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    h2{\n      margin: 0 1em 0.5em 1em;\n    }\n  }\n  .comparison-matches {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow: auto;\n    padding: 0 1em;\n    position: relative;\n\n    ::ng-deep {\n      app-comparison-entry {\n        border-radius: 5px;\n        padding: 0 1em;\n        margin-bottom: 1px;\n        &:nth-child(odd){\n          background-color: #fafafa;\n        }\n        &:nth-child(even){\n          background-color: #eeeeee;\n        }\n\n        .mat-checkbox-layout .mat-checkbox-label{\n          overflow: hidden;\n          text-overflow: ellipsis;\n          width: 100px;\n          line-height: 1.4;\n        }\n      }\n    }\n  }\n\n  .matches-fade{\n    position: absolute;\n    bottom: 0;\n    left: 1em;\n    right: 2em;\n    height: 1px;\n    background: #fff;\n    box-shadow: 0 -4px 15px 12px #fff;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Exact matches                              No hard matches                Soft matches                              No soft matches          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonEntryComponent.html":{"url":"components/ComparisonEntryComponent.html","title":"component - ComparisonEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/comparison/comparison-entry/comparison-entry.component.ts\n\n\n    \n        Description\n    \n    \n        The individual word entry, containing the UI and logic for one word\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison-entry\n            \n\n            \n                styleUrls\n                ./comparison-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBarWidth\n                            \n                            \n                                handleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarity\n                            \n                            \n                                softMatch\n                            \n                            \n                                weight\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentSimilarity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:25\n                            \n                        \n                \n                    \n                        The total cosine similarity of the two compared documents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        softMatch\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:29\n                            \n                        \n                \n                    \n                        The soft match this word has\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:21\n                            \n                        \n                \n                    \n                        The weight of the current word match in the document comparison\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        word\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:17\n                            \n                        \n                \n                    \n                        The word this entry is bound to\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:34\n                            \n                        \n                \n                    \n                        The event emitter, emitting when the user has selected this word\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBarWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetBarWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:39\n                \n            \n\n\n            \n                \n                    Calculates the bar width percentage\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleChange(e: MatCheckboxChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:47\n                \n            \n\n\n            \n                \n                    An event handler, handling when the checkmark is checked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The checkbox event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\n\n/**\n * The individual word entry, containing the UI and logic for one word\n */\n@Component({\n  selector: 'app-comparison-entry',\n  templateUrl: './comparison-entry.component.html',\n  styleUrls: ['./comparison-entry.component.scss']\n})\nexport class ComparisonEntryComponent {\n\n  /**\n   * The word this entry is bound to\n   */\n  @Input() word: string;\n  /**\n   * The weight of the current word match in the document comparison\n   */\n  @Input() weight: number;\n  /**\n   * The total cosine similarity of the two compared documents\n   */\n  @Input() documentSimilarity: number;\n  /**\n   * The soft match this word has\n   */\n  @Input() softMatch: string;\n\n  /**\n   * The event emitter, emitting when the user has selected this word\n   */\n  @Output() selectedChange = new EventEmitter();\n\n  /**\n   * Calculates the bar width percentage\n   */\n  getBarWidth(): number{\n    return this.weight / this.documentSimilarity;\n  }\n\n  /**\n   * An event handler, handling when the checkmark is checked\n   * @param e The checkbox event\n   */\n  handleChange(e: MatCheckboxChange): void{\n    this.selectedChange.emit({ word: this.word, checked: e.checked, softMatch: this.softMatch});\n  }\n}\n\n    \n\n    \n        \n  {{word}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n\n  {{word}}{{softMatch}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n    \n\n    \n                \n                    ./comparison-entry.component.scss\n                \n                @import \"../../../../variables\";\n\n.comparison-entry{\n  padding: 0.25em 0;\n  display: flex;\n  align-items: center;\n  justify-content: stretch;\n}\n\n.word-wrapper{\n  flex-shrink: 0;\n  width: 120px;\n  margin-right: 1em;\n}\n\n.bar-wrapper{\n  flex-grow: 1;\n  width: 100%;\n  height: 1em;\n  margin-right: 3em;\n}\n\n.bar{\n  height: 100%;\n  background: map-get($color, primary);\n  border-radius: 2px;\n  position: relative;\n\n  span{\n    color: rgba(0, 0, 0, 0.7);\n    position: absolute;\n    right: -4em;\n    line-height: 1em;\n    font-size: 0.9em;\n    top: calc(50% - 0.4em);\n    display: block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{word}}  {{getBarWidth() | percent:\\'.2\\'}}  {{word}}{{softMatch}}  {{getBarWidth() | percent:\\'.2\\'}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Corpus.html":{"url":"interfaces/Corpus.html","title":"interface - Corpus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Corpus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                The main corpus interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        results\n                                \n                                \n                                        texts\n                                \n                                \n                                        texts_bow\n                                \n                                \n                                        version\n                                \n                                \n                                        word_similarities\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                    \n                                \n                                \n                                    \n                                        texts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts_bow\n                                    \n                                \n                                \n                                    \n                                        texts_bow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        word_similarities\n                                    \n                                \n                                \n                                    \n                                        word_similarities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentComponent.html":{"url":"components/DocumentComponent.html","title":"component - DocumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document.component.ts\n\n\n    \n        Description\n    \n    \n        The displayed document component, showing the documents text\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document\n            \n\n            \n                styleUrls\n                ./document.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        document\n                    \n                \n                \n                    \n                        Type :         SelectedDocument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:18\n                            \n                        \n                \n                    \n                        The bound displayed document to this component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:22\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:30\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:34\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {SelectedDocument} from '../sidenav.component';\nimport {WordMap} from '../../comparison/comparison.component';\n\n/**\n * The displayed document component, showing the documents text\n */\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent {\n\n  /**\n   * The bound displayed document to this component\n   */\n  @Input() document: SelectedDocument;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: Set;\n  /**\n   * The current WordMap containing the relations of matches\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n\n}\n\n    \n\n    \n        \n  \n    {{document.title}}\n    {{document.subtitle}}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./document.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{document.title}}    {{document.subtitle}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentContentComponent.html":{"url":"components/DocumentContentComponent.html","title":"component - DocumentContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document-content/document-content.component.ts\n\n\n    \n        Description\n    \n    \n        The content of a document, showing the actual text of the document and the highlights\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-content\n            \n\n            \n                styleUrls\n                ./document-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                convertedContent\n                            \n                            \n                                    Public\n                                escapeHtml\n                            \n                            \n                                    Public\n                                splitUpPipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedContent\n                            \n                            \n                                getReversedWordMap\n                            \n                            \n                                isWordLowlighted\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(escapeHtml: EscapeHtmlPipe, splitUpPipe: SplitUpPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        escapeHtml\n                                                  \n                                                        \n                                                                    EscapeHtmlPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pipe, responsible for converting text to HTML safe text\n\n                                                        \n                                                \n                                                \n                                                        splitUpPipe\n                                                  \n                                                        \n                                                                    SplitUpPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A pipe, splitting up the pairs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:22\n                            \n                        \n                \n                    \n                        The text of the document\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:30\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:34\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matched words\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:38\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:103\n                \n            \n\n\n            \n                \n                    Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReversedWordMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetReversedWordMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:67\n                \n            \n\n\n            \n                \n                    Gets the reversed WordMap, mapping child words to their parent words\n\n\n                    \n                        Returns :         WordMap\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isWordLowlighted\n                        \n                        \n                    \n                \n            \n            \n                \nisWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:89\n                \n            \n\n\n            \n                \n                    Determines whether a word should be marked as lowlighted, making it less visible in the document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that's being evaluated\n\n                                    \n                                \n                                \n                                    hoveredWord\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The currently hovered on word\n\n                                    \n                                \n                                \n                                    words\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The set, containing all the matched words\n\n                                    \n                                \n                                \n                                    reversedWordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reversed WordMap\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertedContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:43\n                            \n                        \n\n                \n                    \n                        The HTML safe content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            escapeHtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EscapeHtmlPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:50\n                            \n                        \n\n                \n                    \n                        The pipe, responsible for converting text to HTML safe text\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splitUpPipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SplitUpPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:51\n                            \n                        \n\n                \n                    \n                        A pipe, splitting up the pairs\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {EscapeHtmlPipe} from '../../../../pipes/escape-html.pipe';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport {WordMap} from '../../../comparison/comparison.component';\nimport {pairSeparator, valueChanged} from '../../../../utils/various.utils';\nimport {SplitUpPipe} from '../../../../pipes/pair-split.pipe';\n\n/**\n * The content of a document, showing the actual text of the document and the highlights\n */\n@Component({\n  selector: 'app-document-content',\n  templateUrl: './document-content.component.html',\n  styleUrls: ['./document-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocumentContentComponent implements OnInit, OnChanges {\n\n  /**\n   * The text of the document\n   */\n  @Input() content: string;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: Set;\n  /**\n   * The current WordMap containing the relations of matched words\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n\n  /**\n   * The HTML safe content\n   */\n  convertedContent: string;\n\n  /**\n   * @param escapeHtml  The pipe, responsible for converting text to HTML safe text\n   * @param splitUpPipe A pipe, splitting up the pairs\n   */\n  constructor(\n    public escapeHtml: EscapeHtmlPipe,\n    public splitUpPipe: SplitUpPipe\n  ) { }\n\n  ngOnInit(): void {\n    this.convertedContent = this.getFormattedContent();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (valueChanged(changes?.highlightedWords)){\n      this.convertedContent = this.getFormattedContent();\n    }\n  }\n\n  /**\n   * Gets the reversed WordMap, mapping child words to their parent words\n   */\n  getReversedWordMap(): WordMap{\n    const entries = this.highlightedWordMap.entries();\n    const out = new Map>();\n    for (const [parent, set] of entries){\n      for (const match of set){\n        if (out.has(match)){\n          out.get(match).add(parent);\n        } else {\n          out.set(match, new Set([parent]));\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * Determines whether a word should be marked as lowlighted, making it less visible in the document\n   * @param word              The word that's being evaluated\n   * @param hoveredWord       The currently hovered on word\n   * @param words             The set, containing all the matched words\n   * @param reversedWordMap   The reversed WordMap\n   */\n  isWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap): boolean{\n    if (!hoveredWord){\n      return false;\n    }\n    if (hoveredWord.includes(pairSeparator)){\n      const [w1, w2] = this.splitUpPipe.transform(hoveredWord);\n      return (words.has(w1) || words.has(w2)) && !(word === w1 || word === w2);\n    }\n    return words.has(hoveredWord) && !(hoveredWord === word || reversedWordMap.get(word)?.has(hoveredWord));\n  }\n\n  /**\n   * Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n   */\n  getFormattedContent(): string{\n    const allWords = new Set([...this.highlightedSoftMatches, ...this.highlightedExactMatches]);\n    let content = this.escapeHtml.transform(this.content);\n    const reversedWordMap = this.getReversedWordMap();\n    for (const word of allWords){\n      const escapedWord = this.escapeHtml.transform(word);\n      const re = new RegExp(`(?${escapedWord}`);\n    }\n    return content;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./document-content.component.scss\n                \n                @import '../../../../../variables';\n\n$highlight: map-get($color, secondary);\n$soft-highlight: map-get($color, tertiary);\n$lowlight: map-get($color, lowlight);\n\np{\n  $hovered-word: attr(data-hovered);\n  font-style: italic;\n  word-spacing: 2px;\n  line-height: 1.65;\n\n  ::ng-deep .highlight{\n    background-color: $highlight;\n    box-shadow: -2px 0px 2px 0px $highlight, 2px 0px 2px 0px $highlight;\n  }\n\n  ::ng-deep .lowlight{\n    background-color: $lowlight;\n    box-shadow: -2px 0px 2px 0px $lowlight, 2px 0px 2px 0px $lowlight;\n  }\n\n  ::ng-deep .highlight.soft{\n    background-color: $soft-highlight;\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n\n  ::ng-deep .highlight.both{\n    background-color: linear-gradient(45deg, $soft-highlight 0%, $soft-highlight 50%, $highlight 50%, $highlight 50%);\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DocumentLoadedGuard.html":{"url":"guards/DocumentLoadedGuard.html","title":"guard - DocumentLoadedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    DocumentLoadedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/document-loaded.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents a route from happening unless a corpus is loaded within the QueryService\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/document-loaded.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The query service where the corpus is located\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router used for navigating to homepage if document is not loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/document-loaded.guard.ts:26\n                \n            \n\n\n            \n                \n                    Returns an observable that returns a boolean whether a corpus is present in the QueryService\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {QueryService} from '../services/query.service';\nimport {map} from 'rxjs/operators';\n\n/**\n * Prevents a route from happening unless a corpus is loaded within the QueryService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentLoadedGuard implements CanActivate {\n  /**\n   * @param queryService  The query service where the corpus is located\n   * @param router        The router used for navigating to homepage if document is not loaded\n   */\n  constructor(\n    private queryService: QueryService,\n    private router: Router\n  ) {}\n\n  /**\n   * Returns an observable that returns a boolean whether a corpus is present in the QueryService\n   */\n  canActivate(): Observable {\n    return this.queryService.currentCorpus\n      .pipe(map((corpus) => {\n        if (corpus !== undefined){\n          return true;\n        }\n        this.router.navigate(['']);\n        return false;\n      }));\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/escape-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe that replaces the HTML special characters\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        escapeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/escape-html.pipe.ts:14\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be transformed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * A pipe that replaces the HTML special characters\n */\n@Pipe({\n  name: 'escapeHtml'\n})\nexport class EscapeHtmlPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param text  The text to be transformed\n   */\n  transform(text: string): string {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(//g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphComponent.html":{"url":"components/GraphComponent.html","title":"component - GraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/graph/graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graph\n            \n\n            \n                styleUrls\n                ./graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                g\n                            \n                            \n                                    Private\n                                hoveredNode\n                            \n                            \n                                    Private\n                                nodes\n                            \n                            \n                                    Private\n                                simulation\n                            \n                            \n                                    Private\n                                svg\n                            \n                            \n                                    Private\n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateCoverZoom\n                            \n                            \n                                calculateLinkDistance\n                            \n                            \n                                centerCamera\n                            \n                            \n                                detectChanges\n                            \n                            \n                                drawGraph\n                            \n                            \n                                drawLabels\n                            \n                            \n                                drawNodes\n                            \n                            \n                                initEvents\n                            \n                            \n                                initForces\n                            \n                            \n                                initSimulation\n                            \n                            \n                                initSvg\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clumpingModifier\n                            \n                            \n                                data\n                            \n                            \n                                defaultZoom\n                            \n                            \n                                distanceModifier\n                            \n                            \n                                graphPadding\n                            \n                            \n                                height\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                showLabels\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emptyClicked\n                            \n                            \n                                nodeClicked\n                            \n                            \n                                nodeHovered\n                            \n                            \n                                zoomed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/graph/graph.component.ts:103\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the QueryService holding the corpus information\n\n                                                        \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the ChangeDetectorRef responsible for updating the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clumpingModifier\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:34\n                            \n                        \n                \n                    \n                        The modifier, that exponentially scales the distance between two nodes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         GraphData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:18\n                            \n                        \n                \n                    \n                        Node and link data passed to D3\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:46\n                            \n                        \n                \n                    \n                        Starting zoom, when the component is first loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        distanceModifier\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:30\n                            \n                        \n                \n                    \n                        The modifier, that linearly scales the distance between two nodes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        graphPadding\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:54\n                            \n                        \n                \n                    \n                        On initialization, the camera attempts to keep the sides of the graph view empty by this amount\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:26\n                            \n                        \n                \n                    \n                        Height of current window\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:42\n                            \n                        \n                \n                    \n                        Maximal allowed zoom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:38\n                            \n                        \n                \n                    \n                        Minimal allowed zoom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:50\n                            \n                        \n                \n                    \n                        Specifies, whether labels for individual nodes should be rendered\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:22\n                            \n                        \n                \n                    \n                        Width of current window\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emptyClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:63\n                            \n                        \n                \n                    \n                        Emits every time the user clicks on nothing\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:59\n                            \n                        \n                \n                    \n                        Emits every time the user clicks on a node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:67\n                            \n                        \n                \n                    \n                        Emits every time the user hovers over a node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:71\n                            \n                        \n                \n                    \n                        Emits every time the user zooms the graph\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateCoverZoom\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateCoverZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:270\n                \n            \n\n\n            \n                \n                    Calculates the required zoom value to contain all the nodes on screen\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateLinkDistance\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateLinkDistance(link: GraphLink)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:297\n                \n            \n\n\n            \n                \n                    Calculate the distance of two nodes based on their similarity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                GraphLink\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The link between two notes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            centerCamera\n                        \n                        \n                    \n                \n            \n            \n                \ncenterCamera(x: number, y: number, k: number, duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:284\n                \n            \n\n\n            \n                \n                    Center the camera to specified coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The x coordinate\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The y coordinate\n\n                                    \n                                \n                                \n                                    k\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The zoom level\n\n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        250\n                                    \n\n                                    \n                                        The duration the animation should take in milliseconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:315\n                \n            \n\n\n            \n                \n                    Detects whether changes have happened and updates the DOM\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawGraph\n                        \n                        \n                    \n                \n            \n            \n                \ndrawGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:211\n                \n            \n\n\n            \n                \n                    Draw the interactive part of the graph\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawLabels\n                        \n                        \n                    \n                \n            \n            \n                \ndrawLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:251\n                \n            \n\n\n            \n                \n                    Draws the labels next to the nodes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawNodes\n                        \n                        \n                    \n                \n            \n            \n                \ndrawNodes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:223\n                \n            \n\n\n            \n                \n                    Draw the nodes on the graph and apply interaction events on them\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initEvents\n                        \n                        \n                    \n                \n            \n            \n                \ninitEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:188\n                \n            \n\n\n            \n                \n                    Initialize the behaviours and events of the graph\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initForces\n                        \n                        \n                    \n                \n            \n            \n                \ninitForces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:154\n                \n            \n\n\n            \n                \n                    Initialize the forces applied to nodes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initSimulation\n                        \n                        \n                    \n                \n            \n            \n                \ninitSimulation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:137\n                \n            \n\n\n            \n                \n                    The initialization of the simulation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initSvg\n                        \n                        \n                    \n                \n            \n            \n                \ninitSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:173\n                \n            \n\n\n            \n                \n                    Initialize the main SVG component of the graph\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setZoom\n                        \n                        \n                    \n                \n            \n            \n                \nsetZoom(value: number, duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/graph/graph.component.ts:306\n                \n            \n\n\n            \n                \n                    Set the zoom level to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Value to set the zoom level to\n\n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        250\n                                    \n\n                                    \n                                        The duration of the animation should take in milliseconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            g\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:82\n                            \n                        \n\n                \n                    \n                        The SVG Group component holding the individual nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hoveredNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:103\n                            \n                        \n\n                \n                    \n                        The ID of the currently hovered on node\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:98\n                            \n                        \n\n                \n                    \n                        The SVG element that stores the groups of nodes directly\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:87\n                            \n                        \n\n                \n                    \n                        The running D3 simulation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            svg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:77\n                            \n                        \n\n                \n                    \n                        The SVG component holding all graph components\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/graph/graph.component.ts:92\n                            \n                        \n\n                \n                    \n                        The zoom behaviour applied to the graph\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, AfterViewInit} from '@angular/core';\nimport * as d3 from 'd3';\nimport {QueryService} from '../../services/query.service';\nimport * as queryUtils from '../../utils/query.utils';\nimport {GraphData, GraphLink, GraphNode} from '../../utils/query.utils';\nimport {valueChanged} from '../../utils/various.utils';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.scss']\n})\nexport class GraphComponent implements OnChanges, AfterViewInit {\n\n  /**\n   * Node and link data passed to D3\n   */\n  @Input() data: GraphData;\n  /**\n   * Width of current window\n   */\n  @Input() width: number;\n  /**\n   * Height of current window\n   */\n  @Input() height: number;\n  /**\n   * The modifier, that linearly scales the distance between two nodes\n   */\n  @Input() distanceModifier = 1;\n  /**\n   * The modifier, that exponentially scales the distance between two nodes\n   */\n  @Input() clumpingModifier = 1;\n  /**\n   * Minimal allowed zoom\n   */\n  @Input() minZoom: number;\n  /**\n   * Maximal allowed zoom\n   */\n  @Input() maxZoom: number;\n  /**\n   * Starting zoom, when the component is first loaded\n   */\n  @Input() defaultZoom: number;\n  /**\n   * Specifies, whether labels for individual nodes should be rendered\n   */\n  @Input() showLabels: boolean;\n  /**\n   * On initialization, the camera attempts to keep the sides of the graph view empty by this amount\n   */\n  @Input() graphPadding: number;\n\n  /**\n   * Emits every time the user clicks on a node\n   */\n  @Output() nodeClicked = new EventEmitter();\n  /**\n   * Emits every time the user clicks on nothing\n   */\n  @Output() emptyClicked = new EventEmitter();\n  /**\n   * Emits every time the user hovers over a node\n   */\n  @Output() nodeHovered = new EventEmitter();\n  /**\n   * Emits every time the user zooms the graph\n   */\n  @Output() zoomed = new EventEmitter();\n\n  /**\n   * The SVG component holding all graph components\n   * @private\n   */\n  private svg: any;\n  /**\n   * The SVG Group component holding the individual nodes\n   * @private\n   */\n  private g: any;\n  /**\n   * The running D3 simulation\n   * @private\n   */\n  private simulation: any;\n  /**\n   * The zoom behaviour applied to the graph\n   * @private\n   */\n  private zoom: any;\n\n  /**\n   * The SVG element that stores the groups of nodes directly\n   * @private\n   */\n  private nodes: any;\n  /**\n   * The ID of the currently hovered on node\n   * @private\n   */\n  private hoveredNode: string;\n\n  /**\n   * @param queryService    the QueryService holding the corpus information\n   * @param changeDetector  the ChangeDetectorRef responsible for updating the DOM\n   */\n  constructor(\n    private queryService: QueryService,\n    private changeDetector: ChangeDetectorRef\n  ) { }\n\n  ngAfterViewInit(): void{\n    this.initSimulation();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (valueChanged(changes?.showLabels)){\n      this.drawLabels();\n    }\n\n    if (valueChanged(changes?.distanceModifier) || valueChanged(changes?.clumpingModifier)){\n      this.simulation.force('link')\n        .distance(this.calculateLinkDistance.bind(this));\n      this.simulation.alpha(0.1).restart();\n    }\n\n    if (valueChanged(changes?.width) || valueChanged(changes?.height) ){\n        this.svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n    }\n  }\n\n  /**\n   * The initialization of the simulation\n   */\n  initSimulation(): void{\n    this.simulation = d3.forceSimulation(this.data.nodes);\n\n    this.initForces();\n    this.initSvg();\n    this.initEvents();\n    this.drawGraph();\n\n    this.centerCamera(0, 0, this.defaultZoom, 0);\n    setTimeout(() => {\n      this.setZoom(this.defaultZoom * this.calculateCoverZoom(), 1000);\n    }, 0);\n  }\n\n  /**\n   * Initialize the forces applied to nodes\n   */\n  initForces(): void{\n    this.simulation.force('link', d3.forceLink(this.data.links)\n      .id((d: GraphNode) => d.id)\n      .distance(this.calculateLinkDistance.bind(this))\n      .strength(1)\n      .iterations(10))\n      .force('charge', d3.forceManyBody()\n        .strength(-10))\n      .force('collide', d3.forceCollide()\n        .strength(1)\n        .iterations(10)\n        .radius(1))\n      .force('center', d3.forceCenter(0, 0)\n        .strength(0));\n  }\n\n  /**\n   * Initialize the main SVG component of the graph\n   */\n  initSvg(): void{\n    this.svg = d3.select('figure#graph')\n      .append('svg')\n      .attr('id', 'svg_wrapper')\n      .attr('width', '100%')\n      .attr('height', '100%')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', `0 0 ${this.width} ${this.height}`);\n\n    this.g = this.svg.append('g');\n  }\n\n  /**\n   * Initialize the behaviours and events of the graph\n   */\n  initEvents(): void{\n    this.zoom = d3.zoom()\n      .on('zoom', (e) => {\n        if (e?.sourceEvent?.type === 'wheel' || e?.sourceEvent?.type === 'dblclick'){\n          this.zoomed.emit(e);\n        }\n        this.g.attr('transform', e.transform);\n      })\n\n      .scaleExtent([this.minZoom, this.maxZoom]);\n\n    this.svg.call(this.zoom);\n\n    this.svg.on('click', (e) => {\n      if (e.target.id === this.svg.attr('id')){\n        this.emptyClicked.emit({click: e, d3});\n      }\n    });\n  }\n\n  /**\n   *  Draw the interactive part of the graph\n   */\n  drawGraph(): void{\n    this.drawNodes();\n    this.drawLabels();\n\n    this.simulation.on('tick', () => {\n      this.nodes.attr('transform', d => `translate(${d.x}, ${d.y})`);\n    });\n  }\n\n  /**\n   * Draw the nodes on the graph and apply interaction events on them\n   */\n  drawNodes(): void{\n    this.nodes = this.g.append('g')\n      .selectAll('.node-group')\n      .data(this.data.nodes)\n      .enter().append('g')\n      .attr('id', c => `wrapper_${c.id}`)\n      .attr('class', 'node-group');\n\n    this.nodes.append('circle')\n      .attr('r', 1)\n      .attr('id', c => `node_${c.group}_${c.id}`)\n      .attr('z-index', '1')\n      .on('click', (e) => {\n        this.nodeClicked.emit({click: e, nodes: this.nodes, d3});\n      })\n      .on('mouseenter', (e) => {\n        this.hoveredNode = e?.target?.id;\n        this.nodeHovered.emit({nodeId: this.hoveredNode, d3});\n      })\n      .on('mouseleave', () => {\n        this.hoveredNode = undefined;\n        this.nodeHovered.emit({nodeId: this.hoveredNode, d3});\n      });\n  }\n\n  /**\n   * Draws the labels next to the nodes\n   */\n  drawLabels(): void{\n    if (this.showLabels) {\n      this.nodes.append('text')\n        .attr('dx', 1.25)\n        .attr('dy', '.35em')\n        .attr('font-size', '0.075em')\n        .attr('class', 'clickable-through node-label')\n        .attr('z-index', '2')\n        .text(c => c.id);\n\n      this.nodes.select('node-label').raise();\n    } else {\n      this.nodes.selectAll('text').remove();\n    }\n  }\n\n  /**\n   * Calculates the required zoom value to contain all the nodes on screen\n   */\n  calculateCoverZoom(): number {\n    const transform = this.g.node().getBoundingClientRect();\n    const widthMult = (this.width - this.graphPadding) / transform.width;\n    const heightMult = (this.height - this.graphPadding) / transform.height;\n    return ((widthMult \n    \n\n    \n        \n\n    \n\n    \n                \n                    ./graph.component.scss\n                \n                @import \"../../../variables\";\n\nfigure {\n  margin: 0;\n  width: 100%;\n  height: 100%;\n}\n#graph {\n  >svg {\n    height: 100%;\n  }\n}\n::ng-deep {\n  .clickable-through {\n    pointer-events: none;\n    user-select: none;\n  }\n  .node-label {\n    z-index: 2;\n  }\n  circle {\n    &.selected {\n      fill: map-get($color, selected) !important;\n      stroke: rgba(map-get($color, selected), 0.25);\n    }\n    &[id^=\"node_2_\"]:not([fill]) {\n      fill: map-get($color, primary);\n    }\n    &[id^=\"node_1_\"]:not([fill]) {\n      fill: map-get($color, secondary);\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        links\n                                \n                                \n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         GraphLink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphLink[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         GraphNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphLink.html":{"url":"interfaces/GraphLink.html","title":"interface - GraphLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphNode.html":{"url":"interfaces/GraphNode.html","title":"interface - GraphNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fx\n                                \n                                \n                                            Optional\n                                        fy\n                                \n                                \n                                        group\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                            Optional\n                                        vx\n                                \n                                \n                                            Optional\n                                        vy\n                                \n                                \n                                            Optional\n                                        x\n                                \n                                \n                                            Optional\n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fx\n                                    \n                                \n                                \n                                    \n                                        fx:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fy\n                                    \n                                \n                                \n                                    \n                                        fy:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vx\n                                    \n                                \n                                \n                                    \n                                        vx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vy\n                                    \n                                \n                                \n                                    \n                                        vy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ComparisonComponent\n                        \n                        \n                            ComparisonEntryComponent\n                        \n                        \n                            DocumentComponent\n                        \n                        \n                            DocumentContentComponent\n                        \n                        \n                            GraphComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SidenavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HomeRoutes } from './home.routes';\nimport { GraphComponent } from './graph/graph.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { ComparisonComponent } from './comparison/comparison.component';\nimport { ComparisonEntryComponent } from './comparison/comparison-entry/comparison-entry.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport {AngularResizedEventModule} from 'angular-resize-event';\nimport { DocumentComponent } from './sidenav/document/document.component';\nimport { DocumentContentComponent } from './sidenav/document/document-content/document-content.component';\nimport {PipesModule} from '../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    GraphComponent,\n    SidenavComponent,\n    ComparisonComponent,\n    ComparisonEntryComponent,\n    SettingsComponent,\n    DocumentComponent,\n    DocumentContentComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularResizedEventModule,\n    PipesModule,\n    HomeRoutes\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutes.html":{"url":"modules/HomeRoutes.html","title":"module - HomeRoutes","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class HomeRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InitComponent.html":{"url":"components/InitComponent.html","title":"component - InitComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InitComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/init/init.component.ts\n\n\n    \n        Description\n    \n    \n        The initial welcoming component of the application, asking for the corpus to be inserted\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-init\n            \n\n            \n                styleUrls\n                ./init.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./init.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                insertedText\n                            \n                            \n                                insertingText\n                            \n                            \n                                jsonFile\n                            \n                            \n                                jsonTextarea\n                            \n                            \n                                validating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                            \n                                handleFileUpload\n                            \n                            \n                                handleTextUpload\n                            \n                            \n                                loadExample\n                            \n                            \n                                setQuery\n                            \n                            \n                                validateAndParse\n                            \n                            \n                                validateText\n                            \n                            \n                                validateUploadedFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, jsonValidateService: JsonValidateService, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService used to store the corpus once loaded\n\n                                                        \n                                                \n                                                \n                                                        jsonValidateService\n                                                  \n                                                        \n                                                                        JsonValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The validation service used to validate the inserted file/text\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar, showing error messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router responsible for the navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayError\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayError(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:91\n                \n            \n\n\n            \n                \n                    A function displaying an error message in the snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFileUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFileUpload(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:70\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating the inserted file and sending it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTextUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTextUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:56\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating and setting the inserted text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadExample\n                        \n                        \n                    \n                \n            \n            \n                \nloadExample()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:161\n                \n            \n\n\n            \n                \n                    Loads the example document\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsetQuery(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:153\n                \n            \n\n\n            \n                \n                    Sets the processed corpus to QueryService\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus that will be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAndParse\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAndParse(text: string, resolve: any, reject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:132\n                \n            \n\n\n            \n                \n                    The validation and parsing wrapper of a given text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be validated\n\n                                    \n                                \n                                \n                                    resolve\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if successful\n\n                                    \n                                \n                                \n                                    reject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if unsuccessful\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateText\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:107\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted text\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateUploadedFile\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateUploadedFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:116\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted file\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertedText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:25\n                            \n                        \n\n                \n                    \n                        A value, holding the inserted text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertingText\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:21\n                            \n                        \n\n                \n                    \n                        A flag, saying whether has selected to enter JSON as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:29\n                            \n                        \n\n                \n                    \n                        The file inserted in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonTextarea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTextAreaElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('jsonTextarea')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                        The reference to the textarea when inserting the corpus as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:33\n                            \n                        \n\n                \n                    \n                        A flag, specifying whether the validation service is currently validating the file/text\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {JsonValidateService} from '../services/json-validate.service';\nimport {QueryService} from '../services/query.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as exampleDocument from '../../assets/example.json';\nimport {Router} from '@angular/router';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The initial welcoming component of the application, asking for the corpus to be inserted\n */\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.component.html',\n  styleUrls: ['./init.component.scss']\n})\nexport class InitComponent {\n  /**\n   * A flag, saying whether has selected to enter JSON as text\n   */\n  insertingText = false;\n  /**\n   * A value, holding the inserted text\n   */\n  insertedText: string;\n  /**\n   * The file inserted in\n   */\n  jsonFile: File;\n  /**\n   * A flag, specifying whether the validation service is currently validating the file/text\n   */\n  validating: boolean;\n\n  /**\n   * The reference to the textarea when inserting the corpus as text\n   */\n  @ViewChild('jsonTextarea') jsonTextarea: HTMLTextAreaElement;\n\n  /**\n   * @param queryService          The QueryService used to store the corpus once loaded\n   * @param jsonValidateService   The validation service used to validate the inserted file/text\n   * @param snackBar              The snackbar, showing error messages\n   * @param router                The router responsible for the navigation\n   */\n  constructor(\n    private queryService: QueryService,\n    private jsonValidateService: JsonValidateService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * The event handler function responsible for validating and setting the inserted text\n   */\n  handleTextUpload(): void{\n    this.validating = true;\n    this.validateText().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * The event handler function responsible for validating the inserted file and sending it\n   * @param e The input change event\n   */\n  handleFileUpload(e: any): void{\n    this.validating = true;\n\n    const files = e?.target?.files;\n    if (files?.length !== 1) {\n      return;\n    }\n    this.jsonFile = files[0];\n\n    this.validateUploadedFile().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * A function displaying an error message in the snackbar\n   * @param msg The message to be displayed\n   */\n  displayError(msg: string): void{\n    this.jsonFile = undefined;\n    this.validating = false;\n    this.snackBar.open(\n      msg,\n      '',\n      {\n        panelClass: ['red-snackbar'],\n        duration: 5000\n      }\n    );\n  }\n\n  /**\n   * A promise responsible for validating the inserted text\n   */\n  validateText(): Promise{\n    return new Promise((resolve, reject) => {\n      this.validateAndParse(this.insertedText, resolve, reject);\n    });\n  }\n\n  /**\n   * A promise responsible for validating the inserted file\n   */\n  validateUploadedFile(): Promise{\n   return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsBinaryString(this.jsonFile);\n      fileReader.onloadend = () => {\n        this.validateAndParse(fileReader.result as string, resolve, reject);\n      };\n    });\n  }\n\n  /**\n   * The validation and parsing wrapper of a given text\n   * @param text    The text to be validated\n   * @param resolve The function to be called if successful\n   * @param reject  The function to be called if unsuccessful\n   */\n  validateAndParse(text: string, resolve: any, reject: any): void{\n    if (text) {\n      try{\n        const parsed = JSON.parse(text);\n        if (this.jsonValidateService.validateCorpus(parsed)){\n          resolve(parsed);\n        } else {\n          reject();\n        }\n      } catch (e) {\n        reject(e);\n      }\n    } else {\n      reject();\n    }\n  }\n\n  /**\n   * Sets the processed corpus to QueryService\n   * @param corpus  The corpus that will be set\n   */\n  setQuery(corpus: Corpus): void{\n    this.queryService.setCorpus(corpus);\n    this.router.navigate(['/map']);\n  }\n\n  /**\n   * Loads the example document\n   */\n  loadExample(): void{\n    this.setQuery((exampleDocument as any).default);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Document maps\n    visualization tool for semantic document representations\n    \n      file_uploadInsert corpus as file\n      wysiwygInsert corpus as JSON text\n    \n    \n      OR\n      description&nbsp;Use the example corpus\n    \n    \n      \n        arrow_backBack\n      \n      \n        Insert JSON\n        \n      \n      \n        file_uploadUpload\n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./init.component.scss\n                \n                .init-wrapper{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"../../../src/assets/background.jpg\");\n  background-position: center center;\n  background-size: cover;\n  width: 100%;\n  height: 100%;\n\n  .init-content{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 600px;\n    background: #fff;\n    border-radius: 5px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n    padding: 2em;\n    position: relative;\n    overflow: hidden;\n\n    h1{\n      margin-bottom: 0;\n    }\n\n    .init-buttons{\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n      align-items: center;\n\n      button{\n        width: calc(50% - 0.5em);\n        height: 10em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        ::ng-deep .mat-button-wrapper {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n\n          >span{\n            display: block;\n          }\n        }\n\n        mat-icon{\n          $size: 96px;\n          font-size: $size;\n          height: $size;\n          width: $size;\n          line-height: $size;\n        }\n      }\n    }\n\n    .init-example{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n\n      .separator{\n        margin: 1em 0;\n      }\n    }\n\n    .loading{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      z-index: 1;\n      background-color: rgba(0, 0, 0, 0.25);\n      width: 100%;\n      height: 100%;\n\n      ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {\n        stroke: #fff;\n      }\n    }\n\n    .init-insert-text{\n      position: relative;\n      width: 100%;\n      min-height: 140px;\n\n      .navigate-back{\n        position: absolute;\n        top: -1em;\n        left: -1em;\n      }\n\n      .json-form{\n        width: 100%;\n        min-height: 140px;\n        margin-top: 24px;\n\n        textarea{\n          height: 119px;\n          max-height: calc(100vh - 12em);\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Document maps    visualization tool for semantic document representations          file_uploadInsert corpus as file      wysiwygInsert corpus as JSON text              OR      description Use the example corpus                      arrow_backBack                    Insert JSON                            file_uploadUpload                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InitComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitModule.html":{"url":"modules/InitModule.html","title":"module - InitModule","body":"\n                   \n\n\n\n\n    Modules\n    InitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\n\nInitComponent\n\nInitComponent\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InitComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InitRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InitComponent } from './init.component';\nimport {InitRoutes} from './init.routes';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    InitComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    InitRoutes,\n    FormsModule,\n  ]\n})\nexport class InitModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitRoutes.html":{"url":"modules/InitRoutes.html","title":"module - InitRoutes","body":"\n                   \n\n\n\n\n    Modules\n    InitRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {InitComponent} from './init.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InitComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class InitRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonValidateService.html":{"url":"injectables/JsonValidateService.html","title":"injectable - JsonValidateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonValidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-validate.service.ts\n        \n\n            \n                Description\n            \n            \n                The validation service, validating a parsed JSON file\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCorpus(corpus: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/json-validate.service.ts:87\n                \n            \n\n\n            \n                \n                    The validation function of a corpus\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Ajv, {JSONSchemaType} from 'ajv';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The schema used to validate the parsed JSON\n */\n// @ts-ignore\nconst searchQuerySchema: JSONSchemaType = {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n};\n\n/**\n * The validation service, validating a parsed JSON file\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonValidateService {\n  /**\n   * The validation function of a corpus\n   * @param corpus  The corpus to be validated\n   */\n  validateCorpus(corpus: {}): boolean{\n    const ajv = new Ajv();\n    const validate = ajv.compile(searchQuerySchema);\n    try{\n      return validate(corpus);\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n            \n                Description\n            \n            \n                The service, responsible for passing the progress of long function to other components\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                isLoadingSource\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                    Private\n                                loadingProgressSource\n                            \n                            \n                                loadingStage\n                            \n                            \n                                    Private\n                                loadingStageSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsLoading\n                            \n                            \n                                setLoadingProgress\n                            \n                            \n                                setLoadingStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:46\n                \n            \n\n\n            \n                \n                    A setter for the isLoading value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingProgress\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingProgress(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:54\n                \n            \n\n\n            \n                \n                    A setter for the loadingProgress value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingStage\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingStage(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:62\n                \n            \n\n\n            \n                \n                    A setter for the loadingStage value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.isLoadingSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:20\n                            \n                        \n\n                \n                    \n                        The observable generated from isLoadingSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isLoadingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:16\n                            \n                        \n\n                \n                    \n                        The subject which stores the value, if something is currently loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingProgressSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:30\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingProgressSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingProgressSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:26\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current progress percentage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingStageSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:40\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingStageSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingStageSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:36\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current loading stage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * The service, responsible for passing the progress of long function to other components\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  /**\n   * The subject which stores the value, if something is currently loading\n   * @private\n   */\n  private isLoadingSource = new BehaviorSubject(false);\n  /**\n   * The observable generated from isLoadingSource\n   */\n  isLoading = this.isLoadingSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current progress percentage\n   * @private\n   */\n  private loadingProgressSource = new BehaviorSubject(0);\n  /**\n   * The observable generated from loadingProgressSource\n   */\n  loadingProgress = this.loadingProgressSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current loading stage\n   * @private\n   */\n  private loadingStageSource = new BehaviorSubject('');\n  /**\n   * The observable generated from loadingStageSource\n   */\n  loadingStage = this.loadingStageSource.asObservable();\n\n  /**\n   * A setter for the isLoading value\n   * @param value The value to be set\n   */\n  setIsLoading(value: boolean): void{\n    this.isLoadingSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingProgress value\n   * @param value The value to be set\n   */\n  setLoadingProgress(value: number): void{\n    this.loadingProgressSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingStage value\n   * @param value The value to be set\n   */\n  setLoadingStage(value: string): void{\n    this.loadingStageSource.next(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipsModule} from '@angular/material/chips';\n\nconst modules = [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [...modules],\n  exports: [...modules]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitFirstPipe.html":{"url":"pipes/PairSplitFirstPipe.html","title":"pipe - PairSplitFirstPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitFirstPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the first one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        first\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:16\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitSecondPipe.html":{"url":"pipes/PairSplitSecondPipe.html","title":"pipe - PairSplitSecondPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitSecondPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the second one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        second\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:33\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairUpPipe.html":{"url":"pipes/PairUpPipe.html","title":"pipe - PairUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that pairs up two values using a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pairUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(str1: string, str2: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:51\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    str1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The first string to be paired up\n\n                                    \n                                \n                                \n                                    str2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The second string to be paired up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator put between the two strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EscapeHtmlPipe } from './escape-html.pipe';\nimport {PairSplitFirstPipe, PairSplitSecondPipe, PairUpPipe, SplitUpPipe} from './pair-split.pipe';\n\n\n@NgModule({\n  declarations: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  exports: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  providers: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/query.service.ts\n        \n\n            \n                Description\n            \n            \n                The query service, responsible for querying on and operating with the corpus while also the corpus itself\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                corpusSource\n                            \n                            \n                                currentCorpus\n                            \n                            \n                                    Readonly\n                                worker\n                            \n                            \n                                    Private\n                                workerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDocumentText\n                            \n                            \n                                getNormalizedWordImportancePairs\n                            \n                            \n                                getSimilarity\n                            \n                            \n                                getSimilarityWord\n                            \n                            \n                                getSoftCosineMeasure\n                            \n                            \n                                getWord\n                            \n                            \n                                getWordId\n                            \n                            \n                                initGraphData\n                            \n                            \n                                innerProduct\n                            \n                            \n                                innerProductSingle\n                            \n                            \n                                setCorpus\n                            \n                            \n                                softCosineMeasureNorm\n                            \n                            \n                                    Private\n                                usedCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                            A constructor, initializing the worker\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The loading service, handling the progress reports\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocumentText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocumentText(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:151\n                \n            \n\n\n            \n                \n                    Returns the document text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNormalizedWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:161\n                \n            \n\n\n            \n                \n                    Returns the normalized pairs of word importances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarity\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarity(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:93\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first id to compare\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second id to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarityWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarityWord(word1: string, word2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:103\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two words\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first word to compare\n\n                                    \n                                \n                                \n                                    word2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second word to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSoftCosineMeasure\n                        \n                        \n                    \n                \n            \n            \n                \ngetSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:142\n                \n            \n\n\n            \n                \n                    Returns the soft cosine measure of two texts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetWord(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns the word from dictionary of a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to retrieve the word of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordId\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordId(word: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:74\n                \n            \n\n\n            \n                \n                    Returns the ID of a given word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word to retrieve the id of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initGraphData\n                        \n                        \n                    \n                \n            \n            \n                \ninitGraphData(corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:169\n                \n            \n\n\n            \n                \n                    Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProduct\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProduct(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:113\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarities of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProductSingle\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProductSingle(id, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:122\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarity of one word id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nsetCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:53\n                \n            \n\n\n            \n                \n                    A setter for the corpus value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softCosineMeasureNorm\n                        \n                        \n                    \n                \n            \n            \n                \nsoftCosineMeasureNorm(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:132\n                \n            \n\n\n            \n                \n                    Returns the soft cosine normalization of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            usedCorpus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    usedCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:62\n                \n            \n\n\n            \n                \n                    A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Corpus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            corpusSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:19\n                            \n                        \n\n                \n                    \n                        The subject storing the corpus itself\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCorpus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.corpusSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:23\n                            \n                        \n\n                \n                    \n                        The observable generated from corpusSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            worker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Worker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:28\n                            \n                        \n\n                \n                    \n                        The worker, eventually responsible for generating the initial GraphData\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workerData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                        The stored data from passed from the worker\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {LoadingService} from './loading.service';\nimport * as queryUtils from '../utils/query.utils';\nimport {GraphData, Corpus} from '../utils/query.utils';\nimport {filter, map, tap} from 'rxjs/operators';\n\n/**\n * The query service, responsible for querying on and operating with the corpus while also the corpus itself\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n  /**\n   * The subject storing the corpus itself\n   * @private\n   */\n  private corpusSource = new BehaviorSubject(undefined);\n  /**\n   * The observable generated from corpusSource\n   */\n  currentCorpus = this.corpusSource.asObservable();\n\n  /**\n   * The worker, eventually responsible for generating the initial GraphData\n   */\n  readonly worker: Worker;\n\n  /**\n   * The stored data from passed from the worker\n   * @private\n   */\n  private workerData = new Subject();\n\n  /**\n   * A constructor, initializing the worker\n   * @param loadingService  The loading service, handling the progress reports\n   */\n  constructor(private loadingService: LoadingService) {\n    if (typeof Worker !== 'undefined'){\n      this.worker = new Worker('../workers/graph-data.worker', { type: 'module' });\n      this.worker.onmessage = ({ data }) => {\n        this.workerData.next(data);\n      };\n    }\n  }\n\n  /**\n   * A setter for the corpus value\n   * @param corpus  The corpus to be set\n   */\n  setCorpus(corpus: Corpus): void{\n    this.corpusSource.next(corpus);\n  }\n\n  /**\n   * A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n   * @param corpus  The corpus to be checked\n   * @private\n   */\n  private usedCorpus(corpus: Corpus): Corpus{\n    if (!corpus && !this.corpusSource.getValue()){\n      return undefined;\n    }\n    return corpus ? corpus : this.corpusSource.getValue();\n  }\n\n  /**\n   * Returns the ID of a given word\n   * @param word    The word to retrieve the id of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWordId(word: string, corpus?: Corpus): string {\n    return queryUtils.getWordId(word, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the word from dictionary of a given id\n   * @param id      The id to retrieve the word of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWord(id: string, corpus?: Corpus): string {\n   return queryUtils.getWord(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two word ids\n   * @param id1     The first id to compare\n   * @param id2     The second id to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarity(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSimilarity(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two words\n   * @param word1   The first word to compare\n   * @param word2   The second word to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarityWord(word1: string, word2: string, corpus?: Corpus): number{\n    return queryUtils.getSimilarityWord(word1, word2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarities of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProduct(id1, id2, corpus?: Corpus): number{\n    return queryUtils.innerProduct(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarity of one word id\n   * @param id      The text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProductSingle(id, corpus?: Corpus): number {\n    return queryUtils.innerProductSingle(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine normalization of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  softCosineMeasureNorm(id1, id2, corpus?: Corpus): number{\n    return queryUtils.softCosineMeasureNorm(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine measure of two texts\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSoftCosineMeasure(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the document text\n   * @param id      The first text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getDocumentText(id: string, corpus?: Corpus): string{\n    return queryUtils.getDocumentText(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the normalized pairs of word importances\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus): {[key: string]: number}{\n    return queryUtils.getNormalizedWordImportancePairs(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  initGraphData(corpus?: Corpus): Observable{\n    this.loadingService.setIsLoading(true);\n    const observable = this.workerData.asObservable()\n      .pipe(\n        tap(progress => {\n          this.loadingService.setLoadingStage(progress.stage);\n          this.loadingService.setLoadingProgress(progress.value);\n        }),\n        filter(data => data.data),\n        map(data => {\n          this.loadingService.setIsLoading(false);\n          return data.data;\n        })\n      );\n    this.worker.postMessage({query: this.usedCorpus(corpus)});\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedDocument.html":{"url":"interfaces/SelectedDocument.html","title":"interface - SelectedDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/sidenav/sidenav.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a displayed document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        subtitle\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from '../comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches = new Set();\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    this.highlightedExactMatches = new Set(wordMap.keys());\n    const softMatches = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), [])\n      .filter(a => !this.highlightedExactMatches.has(a));\n    this.highlightedSoftMatches = new Set(softMatches);\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = new Set();\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        The component containing the user interface for the settings menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSetting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                settingsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         AppSettings\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/settings/settings.component.ts:26\n                            \n                        \n                \n                    \n                        The current app settings\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        settingsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/settings/settings.component.ts:30\n                            \n                        \n                \n                    \n                        An event, that emits when settings are changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSetting\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSetting(setting: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/settings/settings.component.ts:37\n                \n            \n\n\n            \n                \n                    Changes the specified setting, using a string key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string key, corresponding to a specific key in AppSettings\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value being set to the setting key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n    \n        \n  Show labels\n  Draw deviations\n  \n    Distance modifier:{{settings.distanceModifier}}\n    \n    \n  \n\n  \n    Clumping modifier:{{settings.clumpingModifier}}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                .settings-menu-wrapper{\n  display: flex;\n  flex-direction: column;\n  >*{\n    margin: 0.5em 0;\n\n    &:first-child{\n      margin-top: 0;\n    }\n    &:last-child{\n      margin-bottom: 0;\n    }\n  }\n}\n\nmat-label{\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Show labels  Draw deviations      Distance modifier:{{settings.distanceModifier}}                Clumping modifier:{{settings.clumpingModifier}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/sidenav.component.ts\n\n\n    \n        Description\n    \n    \n        The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearHighlightedWords\n                            \n                            \n                                clickedCompare\n                            \n                            \n                                closeSidenav\n                            \n                            \n                                handleWordHovered\n                            \n                            \n                                handleWordsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparingWindowOpen\n                            \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareClick\n                            \n                            \n                                sidebarClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparingWindowOpen\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:30\n                            \n                        \n                \n                    \n                        A value, specifying whether the comparing window should be open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:26\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        compareClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:39\n                            \n                        \n                \n                    \n                        An event, that emits when the user clicks on the comparison button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sidebarClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:35\n                            \n                        \n                \n                    \n                        An event, that emits when the sidebar closes\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearHighlightedWords\n                        \n                        \n                    \n                \n            \n            \n                \nclearHighlightedWords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:92\n                \n            \n\n\n            \n                \n                    Clears the highlighted words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickedCompare\n                        \n                        \n                    \n                \n            \n            \n                \nclickedCompare(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:71\n                \n            \n\n\n            \n                \n                    An event handler, that handles when user clicks on the comparison button\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event of clicking on the comparison button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSidenav(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:62\n                \n            \n\n\n            \n                \n                    An event handler, that handles when the sidenav is closed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event that closed the sidenav\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordHovered\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordHovered(word: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:102\n                \n            \n\n\n            \n                \n                    An event handler, handling the change of the hovered on word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new hovered word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordsChanged\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordsChanged(wordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:80\n                \n            \n\n\n            \n                \n                    An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The WordMap containing the relationships of matches\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedExactMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:44\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedSoftMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:48\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedWordMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:52\n                            \n                        \n\n                \n                    \n                        A map, that contains the relationships of matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:56\n                            \n                        \n\n                \n                    \n                        The currently hovered on word within the comparison screen\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from '../comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches = new Set();\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    this.highlightedExactMatches = new Set(wordMap.keys());\n    const softMatches = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), [])\n      .filter(a => !this.highlightedExactMatches.has(a));\n    this.highlightedSoftMatches = new Set(softMatches);\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = new Set();\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      Comparekeyboard_arrow_right\n    \n  \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                ::ng-deep{\n  .mat-drawer-inner-container{\n    overflow-x: hidden;\n  }\n}\n\n.sidenav-wrapper{\n  width: 400px;\n  height: 100%;\n  padding: 1em;\n  display: grid;\n  position: relative;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  grid-auto-rows: minmax(200px, 1fr);\n  grid-gap: 1em;\n  flex-shrink: 0;\n\n  &.comparing{\n    width: 100%;\n    height: 50%;\n    grid-template-columns: 1fr 1fr;\n\n    .sidenav-nav{\n      grid-column: 1/3;\n    }\n  }\n}\n\napp-document {\n  padding-bottom: 1em;\n  ::ng-deep {\n    .mat-card{\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    }\n    .mat-card-content {\n      overflow: auto;\n      max-height: 100%;\n      padding-right: 0.5em;\n    }\n  }\n}\n\n.sidenav-nav{\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.sidenav-comparison{\n  width: 100%;\n  height: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close              Comparekeyboard_arrow_right          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SplitUpPipe.html":{"url":"pipes/SplitUpPipe.html","title":"pipe - SplitUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SplitUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits up two values at a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        splitUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:68\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator at which the split will happen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/guards/document-loaded.guard.ts\n            \n            guard\n            DocumentLoadedGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/home/comparison/comparison-entry/comparison-entry.component.ts\n            \n            component\n            ComparisonEntryComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/home/comparison/comparison.component.ts\n            \n            component\n            ComparisonComponent\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                src/app/home/graph/graph.component.ts\n            \n            component\n            GraphComponent\n            \n                88 %\n                (32/36)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (38/40)\n            \n        \n        \n            \n                \n                src/app/home/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/home/settings/settings.component.ts\n            \n            interface\n            AppSettings\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document-content/document-content.component.ts\n            \n            component\n            DocumentContentComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document.component.ts\n            \n            component\n            DocumentComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            interface\n            SelectedDocument\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/init/init.component.ts\n            \n            component\n            InitComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/material.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/escape-html.pipe.ts\n            \n            pipe\n            EscapeHtmlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitFirstPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitSecondPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            SplitUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            injectable\n            JsonValidateService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            variable\n            searchQuerySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/query.service.ts\n            \n            injectable\n            QueryService\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            interface\n            Color\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            colorMix\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            colorSrgbGradient\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            colorToHex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            inverseSrgbCompanding\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            log2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            normalizeDeviation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            pow2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            srgbCompanding\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            Corpus\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphLink\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphNode\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            calculateCosineDistance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createLinks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createNodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getDocumentText\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantExactMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantSoftMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getNormalizedWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarityWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSoftCosineMeasure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProduct\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProductSingle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            softCosineMeasureNorm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            function\n            valueChanged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            variable\n            pairSeparator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.12\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ^11.2.12\n        \n            @angular/compiler : ^11.2.12\n        \n            @angular/core : ^11.2.12\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.2.12\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ^11.2.12\n        \n            @angular/platform-browser-dynamic : ^11.2.12\n        \n            @angular/router : ^11.2.12\n        \n            ajv : ^8.2.0\n        \n            angular-resize-event : ^2.1.0\n        \n            d3 : ^6.7.0\n        \n            d3-force : ^2.1.1\n        \n            escape-string-regexp : ^5.0.0\n        \n            hammerjs : ^2.0.8\n        \n            material-icons : ^0.5.5\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EntryHoverEvent   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/comparison/comparison.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EntryHoverEvent\n                    \n                \n                    \n                        \n                            An enum, specifying the hover event type\n\n                        \n                    \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nA visualisation tool of document maps\nThis project was generated with Angular CLI version 11.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRouter\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nInitComponent\n\nInitComponent\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WordMap   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/comparison/comparison.component.ts\n    \n    \n        \n            \n                \n                    \n                    WordMap\n                \n            \n            \n                \n                    A type, specifying the relation of two matched words\n\n                \n            \n            \n                \n                        Map>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../material.module.ts)\n                        \n                        \n                            pairSeparator   (src/.../various.utils.ts)\n                        \n                        \n                            searchQuerySchema   (src/.../json-validate.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/various.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairSeparator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\0'\n                        \n                    \n\n                \n                    \n                        The default pair separator, used for simulating string tuples within the app.\nNeeds to be placed in a utility file because of the WebWorker\n\n                    \n                \n\n            \n        \n\n    src/app/services/json-validate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            searchQuerySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JSONSchemaType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n}\n                        \n                    \n\n                \n                    \n                        The schema used to validate the parsed JSON\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
