var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.639,1,1.241]],["body/components/AppComponent.html",[0,1.093,1,2.019,2,1.624,3,0.247,4,0.218,5,1.539,6,1.539,7,1.539,8,1.539,9,0.19,10,2.719,11,0.722,12,2.724,13,2.875,14,3.781,15,2.993,16,4.527,17,1.425,18,2.501,19,1.992,20,3.829,21,1.094,22,2.755,23,2.409,24,2.724,25,1.858,26,5.135,27,1.858,28,4.466,29,0.778,30,1.252,31,4.347,32,4.939,33,4.939,34,3.829,35,1.252,36,4.139,37,2.501,38,2.719,39,3.78,40,1.587,41,4.466,42,0.9,43,0.026,44,1.263,45,0.646,46,0.79,47,2.501,48,3.781,49,2.724,50,3.211,51,0.645,52,1.736,53,1.736,54,1.496,55,2.141,56,3.211,57,6.039,58,3.781,59,1.425,60,3.211,61,2.993,62,2.993,63,2.87,64,4.699,65,0.769,66,4.466,67,3.781,68,1.44,69,3.33,70,3.211,71,0.386,72,0.374,73,3.211,74,0.247,75,0.408,76,4.347,77,0.56,78,1.959,79,3.211,80,4.466,81,3.211,82,4.466,83,3.211,84,4.466,85,2.577,86,4.466,87,2.724,88,3.211,89,2.719,90,2.394,91,1.959,92,2.394,93,1.959,94,1.336,95,2.394,96,3.386,97,2.501,98,2.875,99,3.108,100,3.133,101,2.655,102,4.504,103,3.829,104,2.875,105,1.959,106,1.959,107,2.394,108,2.719,109,1.959,110,3.211,111,2.724,112,1.959,113,1.959,114,2.152,115,2.394,116,3.211,117,1.959,118,2.394,119,2.152,120,1.959,121,1.094,122,1.992,123,2.141,124,1.539,125,2.661,126,1.539,127,1.539,128,1.168,129,1.539,130,1.168,131,1.432,132,1.539,133,1.168,134,1.539,135,1.168,136,1.539,137,1.248,138,1.539,139,1.168,140,1.539,141,1.094,142,1.539,143,1.094,144,1.539,145,1.094,146,1.432,147,1.539,148,1.539,149,0.012,150,0.016,151,0.012]],["title/modules/AppModule.html",[152,1.089,153,2.287]],["body/modules/AppModule.html",[1,2.541,3,0.354,4,0.312,9,0.272,43,0.026,71,0.589,72,0.535,74,0.354,75,0.585,121,1.567,149,0.017,150,0.02,151,0.017,152,1.469,153,4.662,154,1.567,155,2.379,156,3.427,157,3.734,158,3.449,159,2.052,160,3.896,161,3.896,162,3.896,163,3.896,164,4.07,165,3.449,166,3.449,167,2.807,168,2.379,169,4.601,170,2.711,171,2.711,172,5.654,173,4.787,174,3.431,175,4.601,176,3.431,177,5.654,178,4.601,179,5.654,180,5.654,181,3.896,182,3.431,183,3.79,184,2.379,185,4.601]],["title/modules/AppRouter.html",[152,1.089,164,2.082]],["body/modules/AppRouter.html",[3,0.383,4,0.338,9,0.294,18,3.546,43,0.026,71,0.547,72,0.579,74,0.383,75,0.633,149,0.018,150,0.021,151,0.018,154,1.696,159,2.221,164,3.618,170,2.387,171,2.843,183,3.975,184,2.574,186,4.979,187,5.021,188,3.975,189,4.979,190,4.979,191,1.396,192,4.723,193,5.93,194,4.979,195,4.979,196,2.221,197,4.979,198,4.979,199,4.979,200,4.979]],["title/interfaces/AppSettings.html",[201,0.84,202,2.287]],["body/interfaces/AppSettings.html",[0,1.121,3,0.337,4,0.297,9,0.258,11,0.708,22,1.821,23,2.282,25,1.821,27,1.821,29,0.763,30,1.537,43,0.026,45,0.73,52,1.702,54,1.444,59,2.103,63,2.263,65,0.896,71,0.378,72,0.509,74,0.422,75,0.556,77,0.955,143,1.491,149,0.016,150,0.02,151,0.016,201,1.543,202,4.205,203,2.099,204,3.265,205,2.039,206,5.661,207,5.311,208,5.311,209,5.311,210,5.311,211,3.16,212,3.07,213,2.445,214,3.07,215,2.451,216,3.707,217,3.707,218,3.707,219,1.821,220,2.671,221,2.671,222,3.707,223,1.15,224,2.934,225,3.265,226,4.463,227,2.263,228,3.008,229,3.707,230,3.707,231,3.265,232,1.953,233,3.707,234,3.707,235,3.707]],["title/interfaces/Color.html",[201,0.84,236,1.764]],["body/interfaces/Color.html",[2,1.016,3,0.215,4,0.19,9,0.165,11,0.452,17,1.518,29,0.487,30,1.135,43,0.026,45,0.554,51,0.813,54,1.274,59,2.179,62,2.712,65,0.606,74,0.478,77,1.136,94,1.423,149,0.01,150,0.015,151,0.01,191,1.709,201,1.17,203,1.34,205,0.952,225,2.084,227,1.445,236,3.607,237,2.366,238,2.366,239,2.795,240,6.805,241,6.781,242,6.781,243,2.366,244,1.932,245,2.795,246,2.88,247,1.565,248,5.215,249,2.084,250,2.795,251,2.795,252,1.657,253,2.795,254,2.795,255,2.795,256,2.795,257,2.795,258,2.795,259,2.795,260,4.047,261,1.573,262,5.215,263,5.215,264,1.573,265,6.517,266,1.62,267,4.757,268,2.795,269,2.795,270,2.795,271,2.795,272,2.795,273,2.795,274,2.795,275,2.795,276,4.047,277,2.712,278,2.795,279,2.795,280,4.757,281,6.457,282,4.757,283,4.757,284,4.757,285,2.795,286,5.77,287,5.77,288,5.77,289,5.77,290,2.795,291,2.795,292,2.795,293,2.366,294,2.795,295,2.795,296,4.757,297,2.795,298,2.795,299,2.795,300,2.795,301,2.795,302,2.795,303,2.795,304,2.795,305,2.795,306,4.047,307,2.795,308,2.795,309,2.795,310,2.795,311,2.795,312,2.795,313,4.757,314,2.795,315,3.231,316,2.795,317,2.795,318,2.795,319,4.047,320,4.757,321,2.795,322,2.795,323,4.047,324,2.795,325,2.795]],["title/components/ComparisonComponent.html",[0,0.639,128,1.241]],["body/components/ComparisonComponent.html",[0,0.882,1,0.704,2,1.114,3,0.149,4,0.131,5,1.822,6,0.928,7,0.928,8,0.928,9,0.114,11,0.761,13,1.084,15,2.053,17,0.978,19,1.366,20,2.834,21,0.659,22,2.475,23,2.196,25,1.274,27,1.274,29,0.337,30,0.859,35,0.859,36,3.222,37,1.084,40,1.7,42,1.32,43,0.026,44,1.29,45,0.764,46,1.158,51,1.125,52,2.448,53,1.477,54,0.875,59,1.213,65,0.785,68,0.543,71,0.373,72,0.225,74,0.292,75,0.246,77,0.753,85,1.274,87,2.636,91,2.319,92,2.284,93,1.181,94,1.408,95,1.444,96,1.869,97,2.42,98,2.128,99,2.636,104,2.42,105,1.869,106,1.869,109,2.319,111,1.869,112,2.319,113,3.317,117,1.869,119,2.053,120,1.181,121,0.659,122,2.557,123,2.749,124,0.928,125,2.072,126,0.928,127,0.928,128,1.572,129,0.928,130,0.704,131,2.233,132,0.928,133,0.704,134,0.928,135,0.704,136,0.928,137,0.753,138,0.928,139,0.704,140,0.928,141,0.659,142,0.928,143,0.659,144,0.928,145,0.659,146,0.864,147,0.928,148,0.928,149,0.007,150,0.011,151,0.007,182,1.444,191,1.47,196,1.695,201,0.754,211,0.928,212,2.636,213,1.366,214,2.128,215,2.803,219,2.598,220,2.636,221,1.869,223,1.135,224,2.053,228,2.072,236,1.584,246,0.864,252,0.805,264,1.191,266,1.295,315,1.715,326,1.298,327,1.366,328,4.708,329,2.038,330,1.869,331,3.218,332,3.801,333,3.063,334,3.801,335,4.74,336,2.319,337,4.708,338,3.801,339,4.708,340,4.708,341,2.319,342,3.063,343,4.321,344,4.321,345,4.321,346,4.321,347,3.063,348,3.063,349,2.594,350,1.715,351,2.834,352,2.053,353,3.801,354,3.801,355,1.444,356,3.275,357,3.063,358,3.218,359,1.68,360,2.128,361,1.936,362,2.234,363,3.317,364,1.798,365,1.936,366,3.659,367,4.321,368,4.321,369,2.501,370,1.936,371,3.063,372,3.801,373,1.936,374,3.063,375,2.636,376,1.584,377,3.063,378,1.936,379,2.284,380,1.936,381,4.321,382,3.659,383,2.339,384,2.87,385,1.936,386,2.229,387,1.936,388,3.063,389,1.68,390,3.063,391,1.936,392,2.636,393,3.218,394,3.218,395,1.936,396,2.896,397,1.936,398,1.181,399,1.084,400,1.936,401,1.444,402,1.936,403,1.444,404,2.594,405,3.659,406,1.936,407,1.936,408,1.936,409,1.584,410,2.594,411,2.594,412,2.594,413,3.063,414,2.284,415,3.659,416,1.936,417,1.936,418,5.733,419,1.869,420,2.128,421,1.936,422,3.063,423,3.063,424,1.936,425,4.321,426,1.936,427,1.936,428,2.834,429,3.063,430,1.715,431,1.444,432,1.639,433,1.639,434,1.298,435,1.274,436,1.639,437,1.444,438,1.639,439,1.639,440,1.936,441,3.063,442,1.084,443,1.936,444,1.715,445,3.063,446,1.936,447,1.936,448,1.936,449,1.936,450,1.936,451,1.936,452,1.936,453,1.936,454,1.936,455,1.936,456,1.936,457,1.936,458,1.936,459,3.063,460,3.063,461,3.063,462,1.936,463,1.936,464,1.936,465,1.936,466,1.936,467,1.936,468,1.936,469,1.936,470,1.936,471,1.936,472,1.936,473,1.936,474,3.063,475,1.936,476,3.063,477,3.511,478,1.936,479,1.298,480,1.936,481,3.063,482,3.222,483,2.284,484,3.155,485,1.444,486,1.936,487,1.639,488,1.181,489,1.298,490,1.444,491,1.444,492,1.639,493,3.063,494,3.063,495,1.936,496,1.936,497,1.936,498,1.936,499,2.594,500,1.639,501,0.805,502,1.936,503,1.936,504,1.298,505,1.936,506,1.936,507,1.444,508,1.639,509,1.444,510,1.444,511,1.639,512,1.936,513,1.639]],["title/components/ComparisonEntryComponent.html",[0,0.639,130,1.241]],["body/components/ComparisonEntryComponent.html",[0,0.937,1,1.114,2,1.571,3,0.236,4,0.208,5,1.468,6,1.468,7,1.468,8,1.468,9,0.181,11,0.699,13,2.419,21,1.043,22,2.732,23,2.389,25,1.797,27,1.797,29,0.534,35,1.211,40,1.606,42,0.859,43,0.026,44,1.232,45,0.692,46,0.753,51,0.868,52,1.679,59,1.899,62,2.896,63,2.233,65,0.814,68,1.403,71,0.432,72,0.356,74,0.236,75,0.389,77,0.534,85,1.797,87,2.635,91,1.868,93,1.868,94,1.626,96,3.317,97,2.803,98,2.419,99,2.803,100,1.868,101,1.583,102,2.283,103,2.283,104,1.715,109,1.868,111,2.635,113,3.054,114,2.053,115,2.283,119,3.355,121,1.043,122,1.927,123,2.071,124,1.468,125,2.606,126,1.468,127,1.468,128,1.114,129,1.468,130,1.977,131,2.902,132,1.468,133,1.114,134,1.468,135,1.114,136,1.468,137,1.19,138,1.468,139,1.114,140,1.468,141,1.043,142,1.468,143,1.043,144,1.468,145,1.043,146,1.366,147,1.468,148,1.468,149,0.011,150,0.016,151,0.011,196,1.366,205,1.471,212,2.803,213,2.557,214,2.419,215,2.419,219,2.475,223,0.805,236,1.583,238,3.658,246,1.366,252,0.805,266,1.471,350,2.419,352,2.896,363,2.635,364,1.797,366,3.658,369,2.655,386,1.679,393,5.176,398,2.635,399,2.419,401,3.732,403,4.054,409,2.233,430,3.21,484,2.053,490,2.283,491,2.283,499,3.658,504,2.053,507,2.283,514,5.286,515,4.656,516,2.593,517,4.32,518,4.32,519,1.797,520,5.005,521,4.32,522,6.243,523,4.32,524,5.005,525,5.436,526,5.005,527,3.062,528,4.32,529,2.419,530,4.32,531,3.062,532,3.062,533,3.062,534,3.658,535,3.062,536,4.32,537,3.062,538,2.419,539,4.054,540,4.32,541,5.436,542,3.062,543,2.896,544,4.32,545,2.593,546,3.062,547,3.062,548,3.062,549,3.062,550,3.062,551,3.062,552,4.32,553,4.32,554,2.053,555,3.062,556,3.062,557,2.593,558,3.062,559,3.062,560,3.062,561,2.593,562,3.062,563,2.593,564,2.593,565,2.593,566,3.062,567,3.062,568,3.062,569,2.593,570,3.062,571,2.593,572,4.32]],["title/interfaces/Corpus.html",[201,0.84,359,1.327]],["body/interfaces/Corpus.html",[3,0.157,4,0.216,9,0.12,11,0.329,12,1.943,17,0.649,29,0.684,30,0.893,43,0.026,45,0.734,51,1.111,54,0.904,59,2.127,65,1.015,68,0.893,71,0.275,74,0.485,77,1.172,85,1.325,94,1.328,149,0.007,150,0.011,151,0.017,191,1.92,201,1.399,203,0.975,205,0.693,223,0.837,228,2.928,244,1.827,246,1.751,247,1.783,252,1.641,261,1.874,264,1.874,266,1.512,315,1.139,327,1.421,329,0.791,341,2.394,359,2.716,364,0.846,369,2.471,376,1.646,383,0.907,384,1.421,386,0.791,389,2.15,396,3.899,409,2.94,419,1.943,430,1.783,435,1.325,442,3.097,444,3.319,501,2.005,519,0.846,529,2.992,538,1.783,573,1.241,574,2.492,575,2.296,576,2.486,577,2.296,578,2.486,579,2.492,580,0.975,581,0.791,582,1.363,583,2.631,584,2.394,585,1.943,586,2.135,587,2.135,588,1.363,589,2.699,590,3.372,591,2.631,592,1.241,593,1.363,594,1.363,595,1.363,596,1.363,597,2.135,598,1.363,599,1.363,600,2.198,601,1.363,602,1.363,603,2.135,604,2.135,605,1.241,606,1.363,607,1.052,608,3.427,609,2.631,610,1.943,611,3.707,612,3.097,613,1.241,614,1.363,615,1.363,616,1.241,617,1.363,618,2.709,619,2.709,620,1.241,621,1.363,622,1.363,623,1.363,624,1.363,625,2.976,626,1.363,627,1.943,628,2.394,629,1.241,630,1.241,631,1.363,632,1.943,633,1.363,634,1.363,635,1.783,636,1.943,637,1.139,638,1.241,639,2.135,640,2.135,641,2.135,642,2.135,643,1.363,644,2.135,645,2.135,646,2.135,647,1.363,648,1.241,649,2.394,650,1.363,651,1.363,652,1.363,653,3.582,654,1.241,655,2.631,656,3.231,657,2.135,658,2.135,659,1.241,660,2.135,661,2.135,662,1.363,663,1.363,664,1.363,665,1.363,666,2.135,667,1.363,668,2.135,669,2.135,670,2.135,671,2.135,672,1.363,673,1.363,674,1.363,675,1.363,676,1.363,677,1.363,678,1.363,679,2.135,680,2.135,681,2.976,682,2.135,683,1.943,684,1.363,685,2.976,686,2.135,687,2.135,688,2.135,689,2.135,690,2.135,691,1.363,692,2.135,693,1.363,694,1.783,695,1.363,696,1.241,697,1.363,698,2.631,699,1.363,700,2.976,701,1.241,702,2.394,703,1.363,704,1.363,705,1.363,706,2.135,707,1.363,708,2.631,709,1.363,710,2.135,711,1.363,712,2.135,713,2.135,714,1.363,715,1.363,716,2.135,717,1.363,718,1.363,719,1.139,720,1.363,721,1.363,722,1.363]],["title/components/DocumentComponent.html",[0,0.639,133,1.241]],["body/components/DocumentComponent.html",[0,1.217,1,1.402,2,1.838,3,0.297,4,0.262,5,1.849,6,1.849,7,1.849,8,1.849,9,0.228,11,0.624,21,1.313,22,2.837,23,2.48,25,2.102,27,2.102,29,0.672,40,1.632,43,0.026,44,1.243,45,0.723,63,2.613,65,0.757,68,1.886,71,0.487,72,0.449,74,0.297,75,0.49,121,1.313,122,2.254,123,2.423,124,1.849,125,2.868,126,1.849,127,1.849,128,1.402,129,1.849,130,1.402,131,1.72,132,1.849,133,2.176,134,1.849,135,1.402,136,1.849,137,1.499,138,1.849,139,1.402,140,1.849,141,1.313,142,1.849,143,1.313,144,1.849,145,1.313,146,1.72,147,1.849,148,1.849,149,0.014,150,0.018,151,0.014,205,1.721,213,2.843,232,2.669,330,3.65,336,3.439,350,2.83,360,3.157,362,3.295,364,2.102,369,1.964,383,2.254,384,2.843,386,1.964,392,3.083,420,3.478,501,2.102,534,4.279,723,3.265,724,4.01,725,3.769,726,5.637,727,5.054,728,3.779,729,3.779,730,3.779,731,3.856,732,3.856,733,3.856,734,3.856,735,4.279,736,3.856,737,3.856,738,2.352,739,5.054,740,5.054]],["title/components/DocumentContentComponent.html",[0,0.639,135,1.241]],["body/components/DocumentContentComponent.html",[0,0.774,1,0.803,2,1.234,3,0.17,4,0.15,5,1.058,6,1.058,7,1.058,8,1.058,9,0.13,11,0.669,19,1.514,20,3.082,21,0.752,22,2.556,23,2.234,25,1.412,27,1.412,29,0.385,30,0.951,35,0.951,36,3.46,37,1.9,40,1.652,42,1.159,43,0.026,44,1.232,45,0.704,46,1.017,51,1.006,52,1.803,55,1.058,63,1.754,65,0.951,67,2.873,68,1.821,71,0.475,72,0.257,74,0.17,75,0.281,76,4.476,77,0.921,91,2.83,94,0.66,97,1.236,101,3.216,114,1.48,121,0.752,122,2.456,123,1.627,124,1.058,125,2.224,126,1.058,127,1.058,128,0.803,129,1.058,130,0.803,131,0.985,132,1.058,133,0.803,134,1.058,135,1.687,136,1.058,137,0.858,138,1.058,139,0.803,140,1.058,141,0.752,142,1.058,143,0.752,144,1.058,145,0.752,146,0.985,147,1.058,148,1.058,149,0.008,150,0.012,151,0.008,168,1.754,191,1.668,196,2.069,205,1.58,211,1.627,213,2.358,223,1.219,224,1.48,231,2.531,232,2.7,236,2.399,252,1.315,327,1.844,329,2.445,330,2.83,331,3.5,336,3.556,349,2.873,350,1.9,362,2.938,369,2.489,375,1.9,383,1.514,384,2.069,386,2.313,389,1.607,392,3.225,403,1.646,404,2.873,405,3.928,412,2.873,420,3.521,428,3.46,485,3.082,488,2.83,489,3.11,501,2.475,504,1.48,509,3.46,510,3.46,554,1.48,561,3.5,563,5.462,581,0.858,630,2.07,632,2.07,649,2.07,701,1.347,725,2.531,728,2.771,729,2.771,730,2.771,735,2.873,738,1.347,741,5.375,742,4.734,743,1.869,744,3.393,745,3.393,746,3.393,747,3.393,748,4.133,749,3.393,750,4.133,751,4.239,752,2.7,753,4.639,754,4.639,755,3.393,756,2.208,757,2.804,758,3.393,759,1.801,760,4.133,761,5.007,762,4.133,763,2.522,764,2.208,765,2.208,766,2.208,767,2.208,768,2.208,769,2.208,770,2.873,771,3.393,772,3.393,773,3.393,774,2.208,775,3.393,776,4.639,777,3.393,778,2.873,779,4.133,780,3.393,781,5.007,782,2.208,783,3.393,784,3.393,785,3.393,786,3.393,787,3.393,788,3.393,789,3.393,790,2.208,791,2.208,792,2.208,793,2.208,794,2.208,795,2.208,796,1.869,797,2.208,798,1.646,799,1.869,800,1.869,801,1.347,802,2.208,803,1.869,804,3.393,805,3.393,806,2.208,807,2.208,808,2.208,809,2.208,810,2.208,811,2.208,812,2.208,813,2.208,814,2.208,815,2.208,816,2.208,817,2.208,818,3.393,819,2.208,820,1.646,821,2.208,822,2.208,823,2.208,824,2.208,825,2.208,826,2.208,827,6.349,828,2.208,829,2.208,830,5.286,831,2.208,832,2.208,833,2.208,834,2.208,835,2.208,836,2.208,837,6.402,838,2.208,839,2.208,840,2.208]],["title/guards/DocumentLoadedGuard.html",[188,2.287,841,2.545]],["body/guards/DocumentLoadedGuard.html",[3,0.329,4,0.29,9,0.252,11,0.873,19,1.905,24,2.606,29,0.744,35,1.513,37,3.022,40,1.418,42,1.198,43,0.026,44,1.051,45,0.497,46,1.051,47,3.022,51,1.289,55,2.048,68,1.513,71,0.554,72,0.497,74,0.329,75,0.543,77,0.941,78,3.293,149,0.015,150,0.019,151,0.015,184,2.208,187,5.545,188,3.618,196,1.905,211,2.588,252,1.555,355,3.185,356,3.854,359,2.585,375,3.022,431,3.185,479,2.863,579,3.315,580,2.048,612,3.022,842,4.271,843,5.01,844,3.616,845,5.397,846,5.397,847,5.397,848,5.397,849,5.264,850,3.618,851,5.792,852,4.271,853,5.397,854,3.618,855,5.397,856,5.397,857,4.271,858,5.397,859,2.588,860,3.616,861,2.863,862,4.271,863,4.271,864,3.185,865,4.271]],["title/pipes/EscapeHtmlPipe.html",[757,1.911,759,1.162]],["body/pipes/EscapeHtmlPipe.html",[3,0.368,4,0.325,9,0.283,11,0.937,19,2.135,21,1.63,35,1.342,40,1.258,42,1.342,43,0.026,44,1.532,45,0.557,46,1.178,51,0.962,65,0.992,71,0.413,72,0.557,74,0.368,75,0.608,77,0.834,122,2.583,149,0.017,150,0.021,151,0.017,244,1.733,252,1.258,501,2.757,751,4.904,757,3.243,759,2.294,866,2.68,867,4.904,868,4.053,869,5.791,870,5.791,871,5.791,872,3.799,873,5.791,874,4.786,875,5.791,876,3.533,877,4.786,878,4.786,879,4.786,880,4.786,881,4.786,882,4.786,883,4.786,884,4.786]],["title/interfaces/GraphData.html",[201,0.84,607,1.764]],["body/interfaces/GraphData.html",[3,0.16,4,0.22,9,0.123,11,0.337,12,1.27,17,0.664,29,0.694,30,0.909,43,0.026,45,0.377,51,1.12,54,0.917,59,2.133,65,1.013,68,0.909,71,0.28,74,0.487,77,1.175,85,1.349,94,1.345,149,0.007,150,0.012,151,0.012,191,1.924,201,1.409,203,0.998,205,1.104,223,0.852,228,2.944,244,1.837,246,1.776,247,1.815,252,1.649,261,1.894,264,1.894,266,1.531,315,1.165,327,1.446,329,0.809,341,2.43,359,2.715,364,0.866,369,2.481,376,1.676,383,0.928,384,1.446,386,0.809,389,2.167,409,2.96,419,1.978,430,1.815,435,1.349,442,3.121,444,3.339,501,2.027,519,0.866,529,3.017,538,1.815,573,1.27,574,1.676,575,1.076,576,1.165,577,1.076,578,1.165,579,2.519,580,0.998,581,0.809,582,1.395,583,2.669,584,2.743,585,1.978,586,2.173,587,2.173,588,1.395,589,3.017,590,3.384,591,2.669,592,1.27,593,1.395,594,1.395,595,1.395,596,1.395,597,2.173,598,1.395,599,1.395,600,2.728,601,1.395,602,2.173,603,2.669,604,2.669,605,1.978,606,2.173,607,1.676,608,3.838,609,3.459,610,1.978,611,3.736,612,3.121,613,1.27,614,1.395,615,1.395,616,1.27,617,1.395,618,2.743,619,2.743,620,1.27,621,1.395,622,1.395,623,1.395,624,1.395,625,3.013,626,1.395,627,1.978,628,2.43,629,1.27,630,1.27,631,1.395,632,1.978,633,1.395,634,1.395,635,1.815,636,1.978,637,1.165,638,1.27,639,2.173,640,2.173,641,2.173,642,2.173,643,1.395,644,2.173,645,2.173,646,2.173,647,1.395,648,1.27,649,2.43,650,1.395,651,1.395,652,1.395,653,3.612,654,1.27,655,2.669,656,3.266,657,2.173,658,2.173,659,1.27,660,2.173,661,2.173,662,1.395,663,1.395,664,1.395,665,1.395,666,2.173,667,1.395,668,2.173,669,2.173,670,2.173,671,2.173,672,1.395,673,1.395,674,1.395,675,1.395,676,1.395,677,1.395,678,1.395,679,2.173,680,2.173,681,3.013,682,2.173,683,1.978,684,1.395,685,3.013,686,2.173,687,2.173,688,2.173,689,2.173,690,2.173,691,1.395,692,2.173,693,1.395,694,1.815,695,1.395,696,1.27,697,1.395,698,2.669,699,1.395,700,3.013,701,1.27,702,2.43,703,1.395,704,1.395,705,1.395,706,2.173,707,1.395,708,2.669,709,1.395,710,2.173,711,1.395,712,2.173,713,2.173,714,1.395,715,1.395,716,2.173,717,1.395,718,1.395,719,1.165,720,1.395,721,1.395,722,1.395]],["title/interfaces/GraphLink.html",[201,0.84,600,1.911]],["body/interfaces/GraphLink.html",[3,0.158,4,0.329,9,0.121,11,0.333,12,1.255,17,0.656,29,0.895,30,0.901,43,0.026,45,0.52,46,0.79,51,1.116,54,1.183,59,2.155,65,1.021,68,0.901,71,0.277,74,0.486,77,1.174,85,1.336,94,1.336,149,0.007,150,0.012,151,0.012,191,1.922,201,1.404,203,0.986,205,0.701,223,0.844,228,2.936,244,1.832,246,1.763,247,1.799,252,1.645,261,1.884,264,1.884,266,1.521,315,1.152,327,1.433,329,0.799,341,2.411,359,2.713,364,0.856,369,2.476,376,1.661,383,0.917,384,1.433,386,0.799,389,2.158,409,2.95,419,2.411,430,1.799,435,1.644,442,3.108,444,3.329,501,2.016,519,0.856,529,3.004,538,1.799,573,1.255,574,1.661,575,1.063,576,1.152,577,1.063,578,1.152,579,2.505,580,0.986,581,0.799,582,1.379,583,2.994,584,2.725,585,2.411,586,2.649,587,2.649,588,1.379,589,2.713,590,3.378,591,2.649,592,1.255,593,1.379,594,1.379,595,1.379,596,1.379,597,2.153,598,1.379,599,2.153,600,2.501,601,2.994,602,1.379,603,2.153,604,2.153,605,1.255,606,1.379,607,1.063,608,3.443,609,2.649,610,1.96,611,3.721,612,3.108,613,1.255,614,1.379,615,1.379,616,1.255,617,1.379,618,2.725,619,2.725,620,1.255,621,1.379,622,1.379,623,1.379,624,1.379,625,2.994,626,1.379,627,1.96,628,2.411,629,1.255,630,1.255,631,1.379,632,1.96,633,1.379,634,1.379,635,1.799,636,1.96,637,1.152,638,1.255,639,2.153,640,2.153,641,2.153,642,2.153,643,1.379,644,2.153,645,2.153,646,2.153,647,1.379,648,1.255,649,2.411,650,1.379,651,1.379,652,1.379,653,3.596,654,1.255,655,2.649,656,3.248,657,2.153,658,2.153,659,1.255,660,2.153,661,2.153,662,1.379,663,1.379,664,1.379,665,1.379,666,2.153,667,1.379,668,2.153,669,2.153,670,2.153,671,2.153,672,1.379,673,1.379,674,1.379,675,1.379,676,1.379,677,1.379,678,1.379,679,2.153,680,2.153,681,2.994,682,2.153,683,1.96,684,1.379,685,2.994,686,2.153,687,2.153,688,2.153,689,2.153,690,2.153,691,1.379,692,2.153,693,1.379,694,1.799,695,1.379,696,1.255,697,1.379,698,2.649,699,1.379,700,2.994,701,1.255,702,2.411,703,1.379,704,1.379,705,1.379,706,2.153,707,1.379,708,2.649,709,1.379,710,2.153,711,1.379,712,2.153,713,2.153,714,1.379,715,1.379,716,2.153,717,1.379,718,1.379,719,1.152,720,1.379,721,1.379,722,1.379]],["title/interfaces/GraphNode.html",[201,0.84,589,1.911]],["body/interfaces/GraphNode.html",[3,0.152,4,0.212,9,0.117,11,0.32,12,1.209,17,0.632,29,0.881,30,0.875,43,0.026,45,0.656,46,1.512,51,1.101,54,0.888,59,2.198,65,1.012,68,0.875,71,0.269,74,0.483,77,1.169,85,1.298,94,1.309,149,0.007,150,0.011,151,0.011,191,1.916,201,1.388,203,0.95,205,0.675,223,0.82,228,2.91,244,1.816,246,1.721,247,1.747,252,1.632,261,1.85,264,1.85,266,1.491,315,1.109,327,1.391,329,0.77,341,2.354,359,2.706,364,0.824,369,2.459,376,1.613,383,0.884,384,1.391,386,0.77,389,2.131,409,2.915,419,2.354,430,1.747,435,1.605,442,3.069,444,3.296,501,1.98,519,0.824,529,2.962,538,1.747,573,1.209,574,1.613,575,1.024,576,1.109,577,1.024,578,1.109,579,2.461,580,0.95,581,0.77,582,1.328,583,2.934,584,2.67,585,2.354,586,2.586,587,2.586,588,2.091,589,2.831,590,3.407,591,3.389,592,2.67,593,2.934,594,2.934,595,2.934,596,2.934,597,3.389,598,2.934,599,1.328,600,2.16,601,1.328,602,1.328,603,2.091,604,2.091,605,1.209,606,1.328,607,1.024,608,3.389,609,2.586,610,1.903,611,3.674,612,3.069,613,1.209,614,1.328,615,1.328,616,1.209,617,1.328,618,2.67,619,2.67,620,1.209,621,1.328,622,1.328,623,1.328,624,1.328,625,2.934,626,1.328,627,1.903,628,2.354,629,1.209,630,1.209,631,1.328,632,1.903,633,1.328,634,1.328,635,1.747,636,1.903,637,1.109,638,1.209,639,2.091,640,2.091,641,2.091,642,2.091,643,1.328,644,2.091,645,2.091,646,2.091,647,1.328,648,1.209,649,2.354,650,1.328,651,1.328,652,1.328,653,3.546,654,1.209,655,2.586,656,3.191,657,2.091,658,2.091,659,1.209,660,2.091,661,2.091,662,1.328,663,1.328,664,1.328,665,1.328,666,2.091,667,1.328,668,2.091,669,2.091,670,2.091,671,2.091,672,1.328,673,1.328,674,1.328,675,1.328,676,1.328,677,1.328,678,1.328,679,2.091,680,2.091,681,2.934,682,2.091,683,1.903,684,1.328,685,2.934,686,2.091,687,2.091,688,2.091,689,2.091,690,2.091,691,1.328,692,2.091,693,1.328,694,1.747,695,1.328,696,1.209,697,1.328,698,2.586,699,1.328,700,2.934,701,1.209,702,2.354,703,1.328,704,1.328,705,1.328,706,2.091,707,1.328,708,2.586,709,1.328,710,2.091,711,1.328,712,2.091,713,2.091,714,1.328,715,1.328,716,2.091,717,1.328,718,1.328,719,1.109,720,1.328,721,1.328,722,1.328]],["title/modules/HomeModule.html",[152,1.089,885,2.287]],["body/modules/HomeModule.html",[3,0.314,4,0.277,9,0.241,43,0.026,71,0.601,72,0.475,74,0.314,75,0.518,121,1.389,128,2.353,130,2.353,133,2.353,135,2.353,137,2.515,139,2.353,143,2.204,145,2.204,149,0.015,150,0.019,151,0.015,152,1.301,154,1.389,155,2.108,156,3.243,157,2.488,158,2.488,159,1.819,165,3.345,166,3.197,167,2.488,168,2.108,170,2.513,171,2.513,176,3.041,219,1.696,432,3.453,515,3.041,738,2.488,742,3.041,885,4.756,886,3.453,887,3.453,888,3.453,889,3.948,890,4.078,891,3.908,892,2.733,893,3.453,894,4.437,895,5.241,896,3.041,897,4.078,898,4.078,899,4.078,900,4.078,901,4.078,902,5.241,903,2.488,904,3.453,905,4.078,906,4.078,907,4.078,908,3.197,909,4.078]],["title/modules/HomeRoutes.html",[152,1.089,889,2.082]],["body/modules/HomeRoutes.html",[0,0.975,3,0.401,4,0.353,9,0.307,18,3.613,43,0.025,71,0.557,72,0.606,74,0.401,75,0.661,139,2.214,149,0.019,150,0.022,151,0.019,154,1.773,159,2.322,170,2.496,171,2.919,183,4.081,184,2.691,191,1.459,192,3.882,889,3.714,893,4.407,910,5.205,911,4.407]],["title/components/InitComponent.html",[0,0.639,141,1.162]],["body/components/InitComponent.html",[0,0.845,1,0.646,2,1.04,3,0.137,4,0.306,5,0.852,6,0.852,7,0.852,8,0.852,9,0.358,11,0.82,13,2.304,14,2.422,16,1.191,17,0.567,21,0.605,22,2.42,23,2.115,25,1.19,27,1.19,29,0.498,30,0.802,35,0.802,37,1.601,40,1.574,42,1.265,43,0.026,44,1.247,45,0.633,46,1.11,47,2.304,51,1.059,52,2.261,53,0.691,54,0.827,55,2.163,61,1.191,65,0.815,68,1.421,69,2.133,71,0.47,72,0.207,74,0.137,75,0.226,77,0.973,78,2.51,85,2.193,87,2.752,89,1.504,91,2.752,92,2.133,93,1.745,94,1.516,95,1.325,96,3.319,97,3.047,98,2.951,99,3.127,100,3.092,101,2.725,102,4.524,103,3.779,104,2.838,105,2.19,106,2.19,107,1.325,108,1.504,109,1.745,111,2.19,112,1.745,113,2.51,114,1.191,115,3.779,117,2.51,118,2.133,120,1.084,121,0.605,122,1.276,123,1.371,124,0.852,125,1.973,126,0.852,127,0.852,128,0.646,129,0.852,130,0.646,131,0.792,132,0.852,133,0.646,134,0.852,135,0.646,136,0.852,137,0.691,138,0.852,139,0.646,140,0.852,141,1.402,142,0.852,143,0.605,144,0.852,145,0.605,146,0.792,147,0.852,148,0.852,149,0.006,150,0.01,151,0.006,184,0.919,191,1.007,205,0.974,211,1.371,213,1.276,219,2.005,223,0.943,226,2.133,232,1.835,236,0.919,244,1.671,246,1.276,249,2.133,252,0.943,277,1.191,293,1.504,327,2.491,329,1.112,355,1.325,356,3.196,358,2.422,359,2.544,362,1.479,363,1.745,364,1.19,375,2.304,376,1.479,398,2.51,399,2.01,414,2.677,431,1.325,434,1.191,435,1.19,437,3.069,479,1.191,482,1.325,483,1.325,484,1.917,488,1.745,489,1.917,490,1.325,491,1.325,492,1.504,501,2.638,504,1.191,507,2.133,508,1.504,509,1.325,510,1.325,511,1.504,513,1.504,539,1.325,564,1.504,565,2.422,569,1.504,571,1.504,637,1.601,719,2.304,724,1.917,725,3.069,770,2.422,849,2.422,851,4.729,854,2.758,864,2.133,912,1.504,913,2.86,914,2.86,915,6.133,916,5.271,917,3.59,918,2.86,919,3.59,920,3.59,921,3.59,922,3.59,923,5.004,924,2.86,925,2.86,926,4.115,927,4.115,928,2.86,929,2.86,930,4.115,931,4.115,932,3.533,933,5.441,934,4.115,935,2.86,936,2.86,937,2.86,938,4.081,939,2.133,940,4.115,941,4.115,942,2.86,943,2.86,944,2.86,945,1.777,946,2.133,947,4.115,948,3.59,949,2.86,950,1.777,951,2.86,952,1.917,953,1.777,954,1.777,955,2.86,956,5.068,957,2.86,958,1.777,959,2.86,960,2.86,961,4.82,962,5.585,963,1.777,964,2.86,965,2.422,966,4.115,967,2.86,968,2.86,969,1.777,970,5.271,971,1.777,972,1.777,973,1.777,974,3.484,975,2.86,976,4.257,977,1.777,978,2.86,979,1.777,980,2.86,981,2.422,982,3.59,983,2.86,984,1.777,985,1.777,986,1.777,987,1.777,988,1.504,989,1.777,990,1.777,991,4.511,992,1.777,993,2.86,994,2.86,995,2.86,996,2.86,997,1.504,998,1.777,999,1.777,1000,2.86,1001,1.777,1002,1.777,1003,1.777,1004,1.777,1005,1.777,1006,1.777,1007,1.777,1008,2.86,1009,1.777,1010,2.86,1011,1.777,1012,1.777,1013,1.777,1014,1.504,1015,1.325,1016,1.777,1017,1.777,1018,1.777,1019,1.504,1020,1.777,1021,1.777,1022,1.777,1023,1.777,1024,1.777,1025,2.86,1026,4.729,1027,2.86,1028,2.86,1029,2.86,1030,4.115,1031,2.86,1032,2.86,1033,2.86,1034,1.777,1035,2.86,1036,2.86,1037,2.86,1038,2.86,1039,4.115,1040,2.86,1041,2.133,1042,2.422,1043,3.484,1044,2.86,1045,2.86,1046,2.422,1047,2.86,1048,2.86,1049,2.86,1050,1.777,1051,2.86,1052,3.59,1053,2.86,1054,1.777,1055,1.777,1056,1.777,1057,1.777,1058,1.777,1059,1.777,1060,1.777,1061,2.133,1062,1.777,1063,1.777,1064,1.777,1065,0.995,1066,1.777,1067,2.86,1068,1.777,1069,2.86,1070,2.86,1071,1.504,1072,1.777,1073,1.777,1074,1.777,1075,1.777,1076,1.777,1077,1.777]],["title/modules/InitModule.html",[152,1.089,1078,2.287]],["body/modules/InitModule.html",[3,0.369,4,0.325,9,0.283,43,0.026,71,0.582,72,0.558,74,0.369,75,0.609,121,1.633,141,2.295,149,0.017,150,0.021,151,0.017,152,1.53,154,1.633,155,2.479,156,3.489,157,2.925,158,2.925,159,2.138,165,3.483,166,3.537,167,2.925,168,2.479,170,2.779,171,2.779,176,3.575,891,4.323,892,3.213,894,4.908,896,3.575,1078,4.667,1079,4.059,1080,4.059,1081,4.059,1082,4.11,1083,4.794,1084,4.059,1085,4.794]],["title/modules/InitRoutes.html",[152,1.089,1082,2.082]],["body/modules/InitRoutes.html",[0,0.975,3,0.401,4,0.353,9,0.307,18,3.613,43,0.025,71,0.557,72,0.606,74,0.401,75,0.661,141,2.074,149,0.019,150,0.022,151,0.019,154,1.773,159,2.322,170,2.496,171,2.919,183,4.081,184,2.691,191,1.459,192,3.882,911,4.407,1082,3.714,1084,4.407,1086,5.205]],["title/injectables/JsonValidateService.html",[859,1.636,932,2.287]],["body/injectables/JsonValidateService.html",[3,0.299,4,0.263,9,0.334,11,0.821,24,2.368,29,0.676,30,1.088,35,1.423,40,1.02,42,1.088,43,0.026,44,0.955,45,0.815,46,0.955,47,2.842,51,0.78,55,2.433,59,1.62,65,0.898,71,0.488,72,0.452,74,0.299,75,0.493,77,0.676,104,2.842,149,0.014,150,0.018,151,0.02,191,1.586,211,2.433,223,1.02,244,1.518,252,1.333,359,2.529,396,3.402,399,2.173,434,2.601,574,2.624,575,2.624,576,2.842,577,2.624,578,2.842,854,2.601,859,2.433,861,2.601,923,4.297,932,3.402,938,5.078,939,3.785,965,4.297,976,4.217,1014,3.286,1015,4.217,1019,3.286,1087,2.601,1088,3.785,1089,2.894,1090,5.075,1091,5.075,1092,3.881,1093,5.078,1094,4.297,1095,3.286,1096,3.881,1097,3.881,1098,2.894,1099,5.586,1100,5.508,1101,4.297,1102,3.286,1103,3.286,1104,3.881,1105,3.881]],["title/injectables/LoadingService.html",[39,2.082,859,1.636]],["body/injectables/LoadingService.html",[2,1.72,3,0.269,4,0.237,9,0.206,11,0.93,16,3.853,24,2.129,29,0.608,30,1.326,31,5.087,32,5.087,33,5.087,35,1.326,39,2.885,40,1.716,42,1.504,43,0.026,44,1.32,45,0.624,46,1.32,47,2.648,48,4.003,51,1.078,52,2.408,53,2.408,54,1.628,59,1.712,61,3.853,62,3.169,63,2.972,64,4.003,65,0.803,71,0.408,72,0.406,74,0.269,75,0.443,77,0.935,78,4.097,149,0.013,150,0.017,151,0.013,211,2.571,223,1.627,232,2.763,244,1.414,327,2.109,362,2.445,579,3.203,580,1.673,859,2.267,861,2.339,1087,2.339,1106,2.955,1107,4.728,1108,6.008,1109,6.008,1110,6.008,1111,4.728,1112,4.728,1113,4.728,1114,4.728,1115,3.489,1116,5.245,1117,4.728,1118,3.489,1119,4.728,1120,3.489,1121,4.728,1122,3.489,1123,4.619,1124,4.728,1125,3.489,1126,5.245,1127,6.194,1128,4.728,1129,4.728,1130,3.489,1131,4.728,1132,3.489,1133,4.728,1134,3.489,1135,4.541,1136,3.489,1137,3.489,1138,3.489,1139,3.489]],["title/modules/MaterialModule.html",[152,1.089,165,1.764]],["body/modules/MaterialModule.html",[3,0.333,4,0.294,9,0.255,43,0.024,71,0.619,72,0.504,74,0.333,75,0.55,118,3.227,149,0.016,150,0.02,151,0.016,154,2.128,156,2.423,159,1.93,165,2.813,170,2.074,171,2.609,191,1.213,411,3.664,539,4.058,545,3.664,988,3.664,1140,3.227,1141,4.608,1142,4.327,1143,4.608,1144,4.327,1145,4.608,1146,4.327,1147,4.608,1148,4.327,1149,4.608,1150,5.442,1151,4.608,1152,4.327,1153,4.608,1154,4.327,1155,4.608,1156,4.327,1157,4.608,1158,4.608,1159,4.327,1160,4.608,1161,4.327,1162,4.608,1163,4.327,1164,4.608,1165,4.327,1166,5.442,1167,4.608,1168,4.327,1169,4.608,1170,4.327,1171,4.327,1172,4.608,1173,4.327,1174,4.608,1175,4.327,1176,4.608,1177,4.327,1178,4.608,1179,4.608,1180,5.442,1181,4.608,1182,4.608,1183,4.327,1184,4.608,1185,4.327,1186,4.608,1187,4.608,1188,4.327,1189,4.608,1190,4.327,1191,4.608,1192,4.327,1193,4.608,1194,4.327,1195,4.608,1196,4.327,1197,4.608,1198,4.327]],["title/pipes/PairSplitFirstPipe.html",[759,1.162,1199,1.636]],["body/pipes/PairSplitFirstPipe.html",[3,0.286,4,0.252,9,0.22,11,0.798,17,1.188,19,2.632,21,1.267,35,1.043,40,0.978,42,1.043,43,0.026,44,1.553,45,0.433,46,0.916,49,3.011,51,0.748,53,1.446,54,1.414,65,1.049,71,0.426,72,0.433,74,0.454,75,0.75,77,1.153,149,0.013,150,0.018,151,0.013,227,3.05,244,1.837,252,1.55,261,2.387,264,2.153,266,1.887,389,1.446,519,2.305,581,2.453,752,1.66,759,2.345,763,3.746,801,2.27,866,2.083,872,3.85,876,3.746,1065,3.915,1199,2.367,1200,3.011,1201,2.27,1202,3.955,1203,3.713,1204,3.955,1205,3.721,1206,4.115,1207,3.713,1208,2.494,1209,1.784,1210,2.494,1211,2.494,1212,1.784,1213,2.494,1214,3.309,1215,3.309,1216,2.494,1217,2.494,1218,2.494,1219,2.494,1220,2.494,1221,2.494,1222,2.494]],["title/pipes/PairSplitSecondPipe.html",[759,1.162,1209,1.636]],["body/pipes/PairSplitSecondPipe.html",[3,0.286,4,0.252,9,0.22,11,0.798,17,1.188,19,2.632,21,1.267,35,1.043,40,0.978,42,1.043,43,0.026,44,1.553,45,0.433,46,0.916,49,3.011,51,0.748,53,1.446,54,1.414,65,1.049,71,0.426,72,0.433,74,0.454,75,0.75,77,1.153,149,0.013,150,0.018,151,0.013,227,3.05,244,1.837,252,1.55,261,2.153,264,2.387,266,1.887,389,1.446,519,2.305,581,2.453,752,1.66,759,2.345,763,3.746,801,2.27,866,2.083,872,3.85,876,3.746,1065,3.915,1199,1.784,1200,3.011,1201,2.27,1202,3.955,1203,3.713,1204,3.955,1206,4.115,1207,3.713,1208,2.494,1209,2.367,1210,2.494,1211,2.494,1212,1.784,1213,2.494,1214,3.309,1215,3.309,1216,2.494,1217,2.494,1218,2.494,1219,2.494,1220,2.494,1221,2.494,1222,2.494,1223,3.721]],["title/pipes/PairUpPipe.html",[759,1.162,1212,1.636]],["body/pipes/PairUpPipe.html",[3,0.282,4,0.248,9,0.216,11,0.79,17,1.559,19,2.615,21,1.247,35,1.027,40,0.962,42,1.027,43,0.026,44,1.546,45,0.426,46,0.901,49,3.352,51,0.736,53,1.423,54,1.35,65,1.052,71,0.422,72,0.426,74,0.451,75,0.745,77,1.149,149,0.013,150,0.018,151,0.013,227,3.031,244,1.827,252,1.54,261,2.279,264,2.279,266,2.08,389,1.898,519,2.032,581,2.442,752,1.633,759,2.341,763,3.974,801,2.234,866,2.05,872,3.832,876,3.726,1065,3.909,1199,1.755,1200,2.979,1201,2.234,1202,3.683,1203,3.273,1204,3.683,1206,3.929,1207,3.683,1208,2.454,1209,1.755,1210,2.454,1211,3.273,1212,2.341,1213,3.273,1214,3.929,1215,3.929,1216,3.273,1217,3.273,1218,3.273,1219,2.454,1220,2.454,1221,2.454,1222,2.454,1224,3.661]],["title/modules/PipesModule.html",[152,1.089,908,2.082]],["body/modules/PipesModule.html",[3,0.334,4,0.294,9,0.256,43,0.026,71,0.54,72,0.505,74,0.334,75,0.551,121,1.478,149,0.016,150,0.02,151,0.016,152,1.385,154,1.478,155,2.244,156,3.338,157,2.647,158,3.326,159,2.659,166,3.326,167,2.647,168,2.244,170,2.081,171,2.614,752,3.105,757,3.898,796,3.674,798,3.236,803,3.674,891,4.066,892,2.909,908,4.316,1199,3.338,1209,3.338,1212,3.338,1225,3.674,1226,3.674,1227,3.674,1228,4.34,1229,3.674]],["title/injectables/QueryService.html",[356,1.911,859,1.636]],["body/injectables/QueryService.html",[3,0.134,4,0.118,9,0.102,11,0.976,16,1.882,24,1.059,29,0.303,30,0.787,35,0.787,37,1.979,38,1.47,39,3.063,40,1.634,42,1.671,43,0.026,44,1.466,45,0.717,46,1.656,47,2.273,51,1.334,52,1.091,53,1.374,54,1.026,59,1.875,61,1.882,65,1.016,68,0.787,71,0.412,72,0.202,74,0.134,75,0.221,77,1.154,78,3.526,149,0.006,150,0.01,151,0.006,152,0.554,191,0.487,196,0.774,223,1.171,228,0.832,232,1.252,243,2.377,244,0.84,247,1.572,249,2.094,252,1.566,261,2.317,264,2.246,266,1.888,327,1.811,329,1.091,356,1.572,359,2.779,369,2.512,376,2.099,386,1.578,389,1.091,396,1.164,401,2.094,409,2.466,410,2.377,433,1.47,434,1.882,439,1.47,442,3.105,444,3.636,479,1.882,501,2.66,519,2.714,529,3.236,538,2.273,543,1.882,574,1.451,575,1.451,579,2.791,580,0.832,590,3.508,605,2.477,607,2.305,610,2.477,612,1.572,613,1.713,616,1.713,618,2.91,619,3.188,620,1.713,627,1.713,628,2.72,629,1.713,635,2.273,636,2.477,637,1.572,638,1.713,648,1.713,654,1.713,659,1.713,683,1.059,719,1.979,759,0.591,859,1.346,860,1.47,861,1.164,1087,1.164,1116,2.377,1123,2.094,1126,3.774,1135,1.47,1230,1.47,1231,2.807,1232,2.807,1233,4.06,1234,4.458,1235,3.534,1236,3.534,1237,5.779,1238,3.534,1239,2.377,1240,2.377,1241,2.377,1242,2.377,1243,2.377,1244,2.377,1245,2.377,1246,2.807,1247,2.377,1248,2.377,1249,2.807,1250,2.377,1251,2.807,1252,2.807,1253,2.807,1254,2.807,1255,2.807,1256,1.736,1257,5.67,1258,6.394,1259,6.463,1260,1.736,1261,2.807,1262,1.736,1263,1.736,1264,2.807,1265,1.736,1266,2.807,1267,1.736,1268,1.736,1269,2.807,1270,1.736,1271,2.807,1272,2.377,1273,2.377,1274,2.807,1275,2.807,1276,1.736,1277,1.736,1278,2.807,1279,1.736,1280,1.736,1281,2.807,1282,1.736,1283,2.807,1284,2.807,1285,2.807,1286,2.807,1287,2.807,1288,1.736,1289,2.807,1290,2.807,1291,1.736,1292,1.736,1293,2.807,1294,2.807,1295,2.377,1296,1.736,1297,1.736,1298,1.736,1299,1.736,1300,1.736,1301,1.736,1302,1.736,1303,1.736,1304,1.736,1305,2.807,1306,1.736,1307,5.67,1308,1.736,1309,1.736,1310,1.736,1311,1.736,1312,1.736,1313,1.736,1314,1.736,1315,1.736,1316,1.736,1317,1.736,1318,1.736,1319,1.736,1320,1.736,1321,1.736,1322,1.736,1323,2.807,1324,1.736,1325,1.736,1326,1.736]],["title/interfaces/SelectedDocument.html",[201,0.84,360,1.911]],["body/interfaces/SelectedDocument.html",[0,0.998,2,1.253,3,0.265,4,0.234,9,0.203,11,0.557,15,3.142,22,1.433,23,1.253,25,1.433,27,1.433,29,0.6,30,1.314,34,4.264,43,0.026,45,0.665,52,2.325,54,0.793,55,1.652,65,1.016,68,1.314,71,0.405,72,0.401,74,0.361,75,0.438,77,0.996,101,2.956,131,2.668,145,1.173,146,2.551,149,0.012,150,0.017,151,0.012,191,0.966,196,2.377,201,1.311,203,1.652,205,1.815,212,2.983,213,2.377,214,2.983,215,2.983,219,2.673,220,2.86,221,2.102,223,1.747,232,2.753,329,1.822,330,3.649,336,2.102,351,2.569,360,2.983,362,2.956,363,2.102,364,1.95,369,2.325,375,1.929,379,2.569,383,1.537,384,2.668,386,1.339,392,3.25,398,3.489,399,2.625,420,3.455,435,1.433,477,2.569,543,2.309,590,2.956,694,1.929,724,3.142,728,2.309,729,2.309,730,2.309,738,2.102,820,3.495,850,3.142,903,2.102,946,2.569,952,2.309,1041,2.569,1061,3.973,1327,2.569,1328,4.842,1329,2.917,1330,2.569,1331,2.917,1332,2.917,1333,2.917,1334,2.917,1335,2.917,1336,2.917,1337,2.917,1338,2.917,1339,3.969,1340,2.917,1341,2.917,1342,3.969,1343,2.917,1344,3.969,1345,3.969,1346,2.917,1347,3.969,1348,2.917,1349,3.969,1350,2.917,1351,2.917,1352,2.917,1353,2.917,1354,2.917,1355,2.917,1356,2.917,1357,2.917,1358,2.917,1359,2.917,1360,2.917,1361,2.917,1362,3.969,1363,2.917,1364,3.969,1365,2.917,1366,2.917]],["title/components/SettingsComponent.html",[0,0.639,143,1.162]],["body/components/SettingsComponent.html",[0,1.129,1,1.28,2,1.729,3,0.271,4,0.239,5,1.687,6,1.687,7,1.687,8,1.687,9,0.208,11,0.769,13,1.97,17,1.123,21,1.198,22,2.797,23,2.487,25,1.978,27,1.978,29,0.613,35,1.333,40,1.415,42,0.987,43,0.026,44,1.325,45,0.627,46,0.866,51,0.707,52,1.848,54,1.462,59,1.518,63,2.458,65,0.951,68,0.987,71,0.304,72,0.409,74,0.366,75,0.447,77,0.829,93,2.147,94,1.611,98,2.662,99,3.016,100,2.147,101,1.819,105,2.147,106,2.147,111,3.286,112,2.147,117,2.147,120,2.147,121,1.198,122,2.121,123,2.28,124,1.687,125,2.766,126,1.687,127,1.687,128,1.28,129,1.687,130,1.28,131,1.569,132,1.687,133,1.28,134,1.687,135,1.28,136,1.687,137,1.368,138,1.687,139,1.28,140,1.687,141,1.198,142,1.687,143,1.965,144,1.687,145,1.198,146,1.569,147,1.687,148,1.687,149,0.013,150,0.017,151,0.013,201,1.419,202,4.039,204,2.624,205,1.834,206,5.729,207,2.979,208,2.979,209,2.979,210,2.979,211,2.28,212,3.016,213,2.121,214,2.662,215,2.662,216,4.56,217,4.026,218,4.56,219,1.978,220,2.901,221,2.901,222,4.56,223,0.924,224,3.187,225,3.546,226,4.631,227,2.458,228,3.095,229,4.026,230,4.026,231,3.546,232,2.121,233,4.026,234,2.979,235,2.979,261,1.368,277,2.358,350,2.662,352,3.187,500,2.979,696,2.901,702,2.901,778,4.026,1367,4.755,1368,3.518,1369,3.518,1370,3.518,1371,4.755,1372,4.755,1373,4.755,1374,4.755,1375,4.755,1376,4.755,1377,3.518]],["title/components/SidenavComponent.html",[0,0.639,145,1.162]],["body/components/SidenavComponent.html",[0,0.96,1,0.846,2,1.733,3,0.179,4,0.158,5,2.285,6,1.115,7,1.115,8,1.115,9,0.137,11,0.829,13,1.302,15,3.194,17,0.742,21,0.792,22,2.586,23,2.287,25,1.469,27,1.469,29,0.405,30,0.99,34,1.734,35,0.99,40,1.652,42,1.336,43,0.026,44,1.327,45,0.688,46,1.173,51,1.03,52,2.345,53,1.992,54,1.291,55,1.693,65,0.886,68,1.197,71,0.305,72,0.271,74,0.272,75,0.295,77,0.83,85,2.244,87,1.418,94,0.696,96,2.907,97,3.021,98,2.39,99,2.669,100,1.418,101,2.207,105,1.418,106,2.154,107,1.734,109,1.418,112,1.418,113,2.604,117,2.604,119,1.558,120,1.418,121,0.792,122,1.575,123,1.693,124,1.115,125,2.285,126,1.115,127,1.115,128,0.846,129,1.115,130,0.846,131,2.773,132,1.115,133,0.846,134,1.115,135,0.846,136,1.115,137,0.904,138,1.115,139,0.846,140,1.115,141,0.792,142,1.115,143,0.792,144,1.115,145,1.623,146,2.805,147,1.115,148,1.115,149,0.008,150,0.013,151,0.008,191,0.652,196,2.286,201,0.869,205,1.838,212,2.869,213,1.904,214,2.39,215,3.021,219,2.688,220,2.907,221,2.154,223,1.684,232,2.691,277,1.558,329,1.853,330,3.68,336,2.604,350,1.977,351,3.183,352,2.366,360,2.39,362,2.986,363,2.154,364,1.983,369,2.3,375,1.977,379,2.633,383,1.575,384,2.691,386,1.372,392,3.291,398,3.524,399,2.669,420,3.433,435,1.469,477,1.734,482,2.633,483,1.734,484,2.861,485,2.633,487,2.989,488,2.154,489,2.366,543,2.366,557,1.969,590,1.202,592,1.418,635,1.302,694,1.302,724,1.558,728,2.861,729,2.861,730,2.861,738,1.418,820,2.633,850,3.194,903,2.154,946,2.633,952,2.366,1041,2.633,1061,4.023,1327,1.734,1328,1.969,1329,2.989,1330,2.633,1331,2.989,1332,3.614,1333,3.614,1334,2.989,1335,3.614,1336,2.989,1337,2.989,1338,3.614,1339,4.035,1340,3.614,1341,2.989,1342,4.035,1343,2.989,1344,4.035,1345,4.035,1346,2.989,1347,4.568,1348,1.969,1349,2.989,1350,2.989,1351,2.989,1352,1.969,1353,2.989,1354,2.989,1355,1.969,1356,1.969,1357,1.969,1358,1.969,1359,1.969,1360,1.969,1361,1.969,1362,2.989,1363,1.969,1364,2.989,1365,4.035,1366,2.989,1378,3.53,1379,3.53,1380,3.53,1381,3.53,1382,2.325,1383,2.325,1384,2.325,1385,2.325,1386,2.325,1387,2.325,1388,2.325,1389,2.325,1390,2.325,1391,2.325,1392,2.325,1393,2.325,1394,2.325,1395,3.53,1396,3.53,1397,2.325,1398,2.325,1399,2.325,1400,5.606,1401,3.53,1402,4.766,1403,3.53,1404,3.53,1405,2.325,1406,2.325,1407,3.53,1408,1.969,1409,3.53]],["title/pipes/SplitUpPipe.html",[752,1.522,759,1.162]],["body/pipes/SplitUpPipe.html",[3,0.286,4,0.252,9,0.219,11,0.798,17,1.186,19,2.63,21,1.266,35,1.042,40,0.976,42,1.042,43,0.026,44,1.552,45,0.432,46,0.914,49,3.377,51,0.747,53,1.445,54,1.413,65,1.047,71,0.426,72,0.432,74,0.454,75,0.749,77,1.153,149,0.013,150,0.018,151,0.013,227,2.862,244,1.836,252,1.549,261,2.152,264,2.152,266,2.009,389,1.445,519,2.052,581,2.452,752,2.2,759,2.345,763,3.927,801,2.267,866,2.081,872,3.849,876,3.744,1065,3.915,1199,1.782,1200,3.009,1201,2.267,1202,3.953,1203,3.306,1204,3.953,1206,4.228,1207,3.711,1208,2.491,1209,1.782,1210,2.491,1211,2.491,1212,1.782,1213,2.491,1214,3.306,1215,3.306,1216,2.491,1217,2.491,1218,2.491,1219,2.491,1220,3.306,1221,3.306,1222,2.491,1410,3.716]],["title/coverage.html",[1411,3.943]],["body/coverage.html",[0,1.227,1,1.215,9,0.197,10,2.828,39,2.038,43,0.026,45,0.389,85,2.959,90,2.491,94,1.569,128,1.215,130,1.215,133,1.215,135,1.215,137,1.299,139,1.215,141,1.138,143,1.138,145,1.138,149,0.012,150,0.016,151,0.012,154,1.138,188,2.239,201,1.541,202,2.239,204,3.423,223,0.878,236,1.727,237,5.48,244,2.093,326,2.239,356,1.871,359,1.299,360,1.871,382,5.01,514,2.828,515,2.491,516,2.828,573,4.22,581,1.299,589,1.871,600,1.871,607,1.727,723,2.828,741,2.828,742,2.491,743,2.828,752,1.49,757,1.871,759,2.015,800,2.828,841,2.491,843,2.828,844,2.828,859,2.514,867,2.828,868,2.828,912,2.828,932,2.239,1046,2.828,1088,3.423,1089,3.423,1098,2.491,1106,2.828,1140,2.491,1199,1.602,1200,3.444,1201,3.444,1209,1.602,1212,1.602,1230,2.828,1239,2.828,1240,2.828,1241,2.828,1242,2.828,1243,2.828,1244,2.828,1245,2.828,1247,2.828,1248,2.828,1250,2.828,1327,3.423,1408,2.828,1411,2.828,1412,3.341,1413,3.341,1414,3.341,1415,3.341,1416,3.341,1417,3.341,1418,3.341,1419,3.341,1420,3.341,1421,3.341,1422,3.341,1423,3.341,1424,3.341,1425,3.341,1426,3.341,1427,3.341,1428,5.243,1429,5.243,1430,3.341,1431,3.341,1432,3.341,1433,3.341,1434,3.341,1435,3.341,1436,5.243,1437,7.067,1438,3.341,1439,3.341,1440,3.341,1441,3.341,1442,3.341,1443,3.341,1444,3.341,1445,3.341,1446,3.341,1447,3.341,1448,3.341,1449,3.341,1450,3.341,1451,3.341,1452,3.341,1453,3.341,1454,3.341,1455,3.341,1456,3.341,1457,3.341,1458,3.341,1459,3.341,1460,3.341,1461,3.886,1462,2.828,1463,3.886,1464,2.828,1465,3.341,1466,3.341]],["title/dependencies.html",[155,2.122,1467,2.85]],["body/dependencies.html",[43,0.026,65,0.732,72,0.569,149,0.018,150,0.021,151,0.018,155,2.527,173,4.966,174,4.374,181,4.139,182,3.646,184,2.527,219,2.034,580,2.344,584,3.579,798,3.646,799,4.139,892,3.277,896,3.646,903,2.982,904,4.139,1093,4.139,1330,3.646,1468,4.889,1469,6.9,1470,4.889,1471,5.866,1472,4.889,1473,4.889,1474,4.889,1475,4.889,1476,4.889,1477,4.889,1478,4.889,1479,4.889,1480,4.889,1481,4.889,1482,4.889,1483,4.889,1484,4.889,1485,4.889,1486,4.889,1487,4.889,1488,4.889,1489,4.889,1490,4.889,1491,4.889]],["title/miscellaneous/enumerations.html",[1492,1.596,1493,3.475]],["body/miscellaneous/enumerations.html",[29,0.947,43,0.022,45,0.632,149,0.02,150,0.022,151,0.02,219,2.26,326,3.642,335,5.284,394,4.6,415,4.6,435,2.26,436,4.6,437,4.052,1492,3.042,1493,4.6,1494,4.6]],["title/index.html",[29,0.497,1495,2.85,1496,2.85]],["body/index.html",[0,1.158,4,0.32,23,1.713,43,0.021,44,1.159,58,3.988,68,1.321,69,3.513,149,0.017,150,0.021,151,0.017,168,2.435,223,1.238,414,4.612,488,4.143,577,2.435,903,3.773,952,3.157,974,3.988,981,3.988,997,3.988,1026,3.988,1042,3.988,1071,3.988,1123,3.513,1273,5.236,1295,3.988,1497,4.711,1498,5.736,1499,6.184,1500,4.711,1501,4.711,1502,5.736,1503,6.597,1504,4.711,1505,4.711,1506,4.711,1507,4.711,1508,4.711,1509,4.711,1510,4.711,1511,6.597,1512,4.711,1513,4.711,1514,4.711,1515,4.711,1516,3.988,1517,5.736,1518,5.736,1519,6.436,1520,4.711,1521,5.736,1522,5.736,1523,4.711,1524,6.436,1525,4.711,1526,4.711,1527,4.711,1528,6.184,1529,4.711,1530,4.711,1531,4.711,1532,3.513,1533,4.711]],["title/modules.html",[154,1.586]],["body/modules.html",[43,0.022,149,0.019,150,0.022,151,0.019,153,3.495,154,1.776,164,3.181,165,2.696,174,4.963,585,4.06,885,3.495,889,3.181,908,3.181,1043,5.635,1078,3.495,1082,3.181,1534,6.655,1535,6.655,1536,6.977]],["title/overview.html",[1532,3.473]],["body/overview.html",[1,2.387,2,1.467,43,0.026,90,3.008,94,1.207,121,1.374,128,2.095,130,2.095,133,2.095,135,2.095,137,2.239,139,2.095,141,1.962,143,1.962,145,1.962,149,0.014,150,0.019,151,0.014,152,1.287,153,4.505,154,1.374,155,2.085,156,2.259,157,2.461,158,2.461,159,1.799,160,3.415,161,3.415,162,3.415,163,3.415,164,3.515,165,3.258,166,3.175,167,2.461,168,2.085,203,1.934,246,1.799,752,2.928,757,3.676,841,3.008,866,2.259,885,4.738,886,3.415,887,3.415,888,3.415,889,3.515,908,4.267,1078,4.458,1079,3.415,1080,3.415,1081,3.415,1082,3.515,1087,2.704,1199,3.147,1209,3.147,1212,3.147,1225,3.415,1226,3.415,1227,3.415,1532,3.008,1537,4.034,1538,4.034,1539,4.034,1540,4.034]],["title/routes.html",[18,2.608]],["body/routes.html",[18,3.116,43,0.023,149,0.02,150,0.023,151,0.02]],["title/miscellaneous/typealiases.html",[1492,1.596,1541,4.104]],["body/miscellaneous/typealiases.html",[29,0.945,43,0.022,45,0.725,149,0.019,150,0.022,151,0.019,196,2.419,266,1.847,326,3.635,329,2.108,420,3.491,428,4.044,435,2.256,438,4.592,1492,3.037,1494,4.592,1542,5.423]],["title/miscellaneous/variables.html",[554,2.751,1492,1.596]],["body/miscellaneous/variables.html",[9,0.231,23,1.423,29,0.682,30,1.097,43,0.026,45,0.819,53,2.487,54,1.437,55,2.446,59,1.628,65,0.958,94,1.17,104,2.856,149,0.014,150,0.018,151,0.02,154,1.738,554,2.622,574,2.637,575,2.637,576,2.856,577,2.637,578,2.856,581,1.983,850,2.622,854,3.419,864,2.917,939,2.917,976,2.917,1015,2.917,1065,2.19,1088,2.917,1089,3.804,1094,3.312,1095,3.312,1098,3.804,1099,5.708,1100,5.518,1101,4.319,1102,3.312,1103,3.312,1140,2.917,1141,3.312,1143,3.312,1145,3.312,1147,3.312,1149,3.312,1151,3.312,1153,3.312,1155,3.312,1157,3.312,1158,3.312,1160,3.312,1162,3.312,1164,3.312,1167,3.312,1169,3.312,1172,3.312,1174,3.312,1176,3.312,1178,3.312,1179,3.312,1181,3.312,1182,3.312,1184,3.312,1186,3.312,1187,3.312,1189,3.312,1191,3.312,1193,3.312,1195,3.312,1197,3.312,1229,3.312,1272,3.312,1461,3.312,1462,3.312,1463,5.094,1464,3.312,1492,2.19,1516,4.319,1543,3.912,1544,3.912,1545,3.912,1546,3.912,1547,3.912,1548,3.912,1549,3.912,1550,3.912,1551,3.912,1552,3.912]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0).tostring(16",{"_index":313,"title":{},"body":{"interfaces/Color.html":{}}}],["0.0",{"_index":625,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["0.0031308",{"_index":296,"title":{},"body":{"interfaces/Color.html":{}}}],["0.04045",{"_index":284,"title":{},"body":{"interfaces/Color.html":{}}}],["0.05",{"_index":1057,"title":{},"body":{"components/InitComponent.html":{}}}],["0.055",{"_index":286,"title":{},"body":{"interfaces/Color.html":{}}}],["0.11.3",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":1066,"title":{},"body":{"components/InitComponent.html":{}}}],["0.25em",{"_index":555,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.4em",{"_index":570,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.5.5",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["0.5em",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["0.7",{"_index":566,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.9em",{"_index":568,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0/1",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["039",{"_index":884,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["0px",{"_index":837,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1",{"_index":246,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"overview.html":{}}}],["1.0",{"_index":621,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["1.055",{"_index":287,"title":{},"body":{"interfaces/Color.html":{}}}],["1.4",{"_index":505,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["1.65",{"_index":836,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1.65em",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1408,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["1/4",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["10/10",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["100px",{"_index":503,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["10em",{"_index":1062,"title":{},"body":{"components/InitComponent.html":{}}}],["11.0.0",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["11.1.4",{"_index":1500,"title":{},"body":{"index.html":{}}}],["11.2.11",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["11.2.12",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["12.92",{"_index":289,"title":{},"body":{"interfaces/Color.html":{}}}],["12/15",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":558,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["12em",{"_index":1076,"title":{},"body":{"components/InitComponent.html":{}}}],["12px",{"_index":513,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["14",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["140px",{"_index":1070,"title":{},"body":{"components/InitComponent.html":{}}}],["15px",{"_index":512,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["19/19",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["19/22",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["1em",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["1fr",{"_index":1402,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1px",{"_index":493,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["2",{"_index":315,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["2.0.8",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["2.4",{"_index":288,"title":{},"body":{"interfaces/Color.html":{}}}],["2/2",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1073,"title":{},"body":{"components/InitComponent.html":{}}}],["25",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":281,"title":{},"body":{"interfaces/Color.html":{}}}],["2em",{"_index":508,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["2px",{"_index":563,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["3",{"_index":1538,"title":{},"body":{"overview.html":{}}}],["33",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["35/39",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["39/41",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["393px",{"_index":1074,"title":{},"body":{"components/InitComponent.html":{}}}],["3em",{"_index":560,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4/4",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1399,"title":{},"body":{"components/SidenavComponent.html":{}}}],["40px",{"_index":1404,"title":{},"body":{"components/SidenavComponent.html":{}}}],["4em",{"_index":567,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4px",{"_index":511,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["5",{"_index":1539,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":485,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SidenavComponent.html":{}}}],["5000",{"_index":1007,"title":{},"body":{"components/InitComponent.html":{}}}],["57",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":492,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["6.6.7",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["66",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1540,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1537,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["96px",{"_index":1064,"title":{},"body":{"components/InitComponent.html":{}}}],["a.concat([...c",{"_index":1359,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["absolute",{"_index":507,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["actual",{"_index":744,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["actual_component",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["additionalproperties",{"_index":1103,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["ajv",{"_index":1093,"title":{},"body":{"injectables/JsonValidateService.html":{},"dependencies.html":{}}}],["ajv.compile(searchqueryschema",{"_index":1104,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["aliases",{"_index":1542,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["allow",{"_index":1029,"title":{},"body":{"components/InitComponent.html":{}}}],["allwords",{"_index":818,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["amp",{"_index":878,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["angular",{"_index":903,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":892,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":896,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1159,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1150,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1173,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":545,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1198,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1161,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":1183,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1177,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1163,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1170,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1146,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1188,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1148,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1168,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1152,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":1180,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1190,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1192,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1142,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":1165,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1194,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":988,"title":{},"body":{"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1154,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":1175,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1156,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1196,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1144,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1185,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"dependencies.html":{}}}],["angularresizedeventmodule",{"_index":902,"title":{},"body":{"modules/HomeModule.html":{}}}],["any).default",{"_index":1024,"title":{},"body":{"components/InitComponent.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["appmodule",{"_index":153,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":773,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["approuter",{"_index":164,"title":{"modules/AppRouter.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":202,"title":{"interfaces/AppSettings.html":{}},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["array",{"_index":1101,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["array.from(wordmap.values",{"_index":1356,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["arrays",{"_index":602,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["arrow_backback",{"_index":1051,"title":{},"body":{"components/InitComponent.html":{}}}],["artifacts",{"_index":1512,"title":{},"body":{"index.html":{}}}],["asking",{"_index":914,"title":{},"body":{"components/InitComponent.html":{}}}],["assets/example.json",{"_index":990,"title":{},"body":{"components/InitComponent.html":{}}}],["associated",{"_index":429,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["attached",{"_index":1040,"title":{},"body":{"components/InitComponent.html":{}}}],["attr(data",{"_index":832,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["auto",{"_index":487,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SidenavComponent.html":{}}}],["automatically",{"_index":1507,"title":{},"body":{"index.html":{}}}],["available",{"_index":1043,"title":{},"body":{"components/InitComponent.html":{},"modules.html":{}}}],["b",{"_index":240,"title":{},"body":{"interfaces/Color.html":{}}}],["back",{"_index":293,"title":{},"body":{"interfaces/Color.html":{},"components/InitComponent.html":{}}}],["background",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["bag",{"_index":666,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["bar",{"_index":539,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["base",{"_index":318,"title":{},"body":{"interfaces/Color.html":{}}}],["behaviorsubject",{"_index":1135,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["behaviorsubject(0",{"_index":1131,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(false",{"_index":1124,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(undefined",{"_index":1287,"title":{},"body":{"injectables/QueryService.html":{}}}],["being",{"_index":231,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["beta.33",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["block",{"_index":571,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["boolean",{"_index":211,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{}}}],["bootstrap",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":490,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["bottom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["bound",{"_index":534,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{}}}],["bowentries1",{"_index":655,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["bowentries2",{"_index":656,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["box",{"_index":509,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["browse",{"_index":1536,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1511,"title":{},"body":{"index.html":{}}}],["button",{"_index":1061,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["buttons",{"_index":1060,"title":{},"body":{"components/InitComponent.html":{}}}],["c",{"_index":1358,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["c1",{"_index":304,"title":{},"body":{"interfaces/Color.html":{}}}],["c2",{"_index":306,"title":{},"body":{"interfaces/Color.html":{}}}],["calc(100vh",{"_index":1075,"title":{},"body":{"components/InitComponent.html":{}}}],["calc(50",{"_index":569,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["calculatecosinedistance",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["calculatecosinedistance(weight",{"_index":704,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["calculates",{"_index":538,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["calculating",{"_index":721,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["calculation",{"_index":697,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["called",{"_index":966,"title":{},"body":{"components/InitComponent.html":{}}}],["canactivate",{"_index":187,"title":{},"body":{"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{}}}],["card",{"_index":1409,"title":{},"body":{"components/SidenavComponent.html":{}}}],["catch",{"_index":1019,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["catch(err",{"_index":994,"title":{},"body":{"components/InitComponent.html":{}}}],["center",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["change",{"_index":952,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["changed",{"_index":221,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["changedetection",{"_index":746,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy",{"_index":794,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":747,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changes",{"_index":224,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["changes.selecteddocuments",{"_index":448,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changes.selecteddocuments.currentvalue.length",{"_index":449,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changesetting",{"_index":1367,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changesetting(setting",{"_index":233,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["characters",{"_index":871,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["check",{"_index":1531,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":499,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["checked",{"_index":401,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{}}}],["checking",{"_index":1283,"title":{},"body":{"injectables/QueryService.html":{}}}],["checkmark",{"_index":544,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["checkoverflow",{"_index":342,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checkoverflow(element",{"_index":371,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checks",{"_index":374,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child",{"_index":778,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["child(even",{"_index":497,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child(odd",{"_index":495,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["circle",{"_index":1067,"title":{},"body":{"components/InitComponent.html":{}}}],["class",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["clearhighlightedwords",{"_index":1365,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clears",{"_index":379,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clearwordselection",{"_index":343,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["cli",{"_index":1499,"title":{},"body":{"index.html":{}}}],["clickedcompare",{"_index":1378,"title":{},"body":{"components/SidenavComponent.html":{}}}],["clickedcompare(e",{"_index":1351,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicking",{"_index":1350,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicks",{"_index":1339,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["close",{"_index":1395,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closed",{"_index":1344,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closes",{"_index":1337,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closesidenav",{"_index":1379,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closesidenav(e",{"_index":1346,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clumping",{"_index":702,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{}}}],["clumpingmodifier",{"_index":207,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":886,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":888,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":887,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_initmodule",{"_index":1079,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_declarations",{"_index":1081,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_imports",{"_index":1080,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1225,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1226,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1227,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":1042,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["color",{"_index":236,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"coverage.html":{}}}],["color.b",{"_index":283,"title":{},"body":{"interfaces/Color.html":{}}}],["color.g",{"_index":282,"title":{},"body":{"interfaces/Color.html":{}}}],["color.r",{"_index":280,"title":{},"body":{"interfaces/Color.html":{}}}],["color1",{"_index":260,"title":{},"body":{"interfaces/Color.html":{}}}],["color1.b",{"_index":273,"title":{},"body":{"interfaces/Color.html":{}}}],["color1.g",{"_index":271,"title":{},"body":{"interfaces/Color.html":{}}}],["color1.r",{"_index":269,"title":{},"body":{"interfaces/Color.html":{}}}],["color2",{"_index":263,"title":{},"body":{"interfaces/Color.html":{}}}],["color2.b",{"_index":274,"title":{},"body":{"interfaces/Color.html":{}}}],["color2.g",{"_index":272,"title":{},"body":{"interfaces/Color.html":{}}}],["color2.r",{"_index":270,"title":{},"body":{"interfaces/Color.html":{}}}],["colormix",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["colormix(color1",{"_index":268,"title":{},"body":{"interfaces/Color.html":{}}}],["colors",{"_index":267,"title":{},"body":{"interfaces/Color.html":{}}}],["colorsrgbgradient",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["colorsrgbgradient(color1",{"_index":303,"title":{},"body":{"interfaces/Color.html":{}}}],["colortohex",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["colortohex(color",{"_index":312,"title":{},"body":{"interfaces/Color.html":{}}}],["column",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["columns",{"_index":1401,"title":{},"body":{"components/SidenavComponent.html":{}}}],["command",{"_index":1533,"title":{},"body":{"index.html":{}}}],["common",{"_index":1033,"title":{},"body":{"components/InitComponent.html":{}}}],["commonmodule",{"_index":891,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{}}}],["compare",{"_index":619,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["compareclick",{"_index":1340,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["compared",{"_index":530,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["comparekeyboard_arrow_right",{"_index":1396,"title":{},"body":{"components/SidenavComponent.html":{}}}],["comparing",{"_index":1333,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparingwindowopen",{"_index":1335,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparison",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["comparison'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["comparison.component.html",{"_index":333,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison.component.scss",{"_index":332,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison/comparison",{"_index":899,"title":{},"body":{"modules/HomeModule.html":{}}}],["comparison/comparison.component",{"_index":738,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparisoncomponent",{"_index":128,"title":{"components/ComparisonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["comparisonentrycomponent",{"_index":130,"title":{"components/ComparisonEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"overview.html":{}}}],["compressed",{"_index":294,"title":{},"body":{"interfaces/Color.html":{}}}],["compresses",{"_index":292,"title":{},"body":{"interfaces/Color.html":{}}}],["compression",{"_index":258,"title":{},"body":{"interfaces/Color.html":{}}}],["const",{"_index":191,"title":{},"body":{"modules/AppRouter.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"modules/MaterialModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(escapehtml",{"_index":756,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["constructor(loadingservice",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(private",{"_index":439,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(queryservice",{"_index":355,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["contained",{"_index":1329,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["container",{"_index":1398,"title":{},"body":{"components/SidenavComponent.html":{}}}],["containing",{"_index":205,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["contains",{"_index":1341,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["content'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["content.component",{"_index":907,"title":{},"body":{"modules/HomeModule.html":{}}}],["content.component.html",{"_index":749,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.scss",{"_index":748,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts",{"_index":743,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:103",{"_index":769,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:22",{"_index":764,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:26",{"_index":765,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:30",{"_index":766,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:34",{"_index":767,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:38",{"_index":768,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:43",{"_index":758,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:50",{"_index":792,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:51",{"_index":793,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:54",{"_index":791,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:58",{"_index":790,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:67",{"_index":774,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:89",{"_index":782,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content/document",{"_index":742,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["continue",{"_index":673,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["converted",{"_index":311,"title":{},"body":{"interfaces/Color.html":{}}}],["convertedcontent",{"_index":750,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converting",{"_index":760,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converts",{"_index":309,"title":{},"body":{"interfaces/Color.html":{}}}],["corpus",{"_index":359,"title":{"interfaces/Corpus.html":{}},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["corpus.dictionary[id",{"_index":617,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.dictionary[key",{"_index":615,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities",{"_index":623,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities[id1",{"_index":624,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities[id1][id2",{"_index":626,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpussource",{"_index":1234,"title":{},"body":{"injectables/QueryService.html":{}}}],["corresponding",{"_index":229,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cosine",{"_index":529,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["cover",{"_index":1056,"title":{},"body":{"components/InitComponent.html":{}}}],["coverage",{"_index":1411,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":708,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["createlinks",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["createlinks(nodes",{"_index":722,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["createnodes",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["createnodes(corpus",{"_index":709,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["creating",{"_index":706,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["current",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{}}}],["currentcorpus",{"_index":1235,"title":{},"body":{"injectables/QueryService.html":{}}}],["currently",{"_index":362,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["d",{"_index":716,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["d3",{"_index":584,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"dependencies.html":{}}}],["data",{"_index":719,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["data.data",{"_index":1323,"title":{},"body":{"injectables/QueryService.html":{}}}],["data.worker",{"_index":1301,"title":{},"body":{"injectables/QueryService.html":{}}}],["declarations",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decompressed",{"_index":278,"title":{},"body":{"interfaces/Color.html":{}}}],["decompresses",{"_index":275,"title":{},"body":{"interfaces/Color.html":{}}}],["decorators",{"_index":979,"title":{},"body":{"components/InitComponent.html":{}}}],["deep",{"_index":489,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["defaulting",{"_index":1286,"title":{},"body":{"injectables/QueryService.html":{}}}],["defaults",{"_index":1258,"title":{},"body":{"injectables/QueryService.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["dependencies",{"_index":155,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["description&nbsp;use",{"_index":1050,"title":{},"body":{"components/InitComponent.html":{}}}],["determines",{"_index":783,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["dev",{"_index":1505,"title":{},"body":{"index.html":{}}}],["development",{"_index":1501,"title":{},"body":{"index.html":{}}}],["deviations",{"_index":1374,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionary",{"_index":574,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["directive",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["directives",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1510,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1514,"title":{},"body":{"index.html":{}}}],["display",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["displayed",{"_index":724,"title":{},"body":{"components/DocumentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["displayerror",{"_index":924,"title":{},"body":{"components/InitComponent.html":{}}}],["displayerror(msg",{"_index":944,"title":{},"body":{"components/InitComponent.html":{}}}],["displaying",{"_index":946,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["dist",{"_index":1513,"title":{},"body":{"index.html":{}}}],["distance",{"_index":696,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{}}}],["distancemodifier",{"_index":208,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["doc",{"_index":717,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["docs",{"_index":712,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["document",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["document'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["document.component.html",{"_index":727,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.component.scss",{"_index":726,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.subtitle",{"_index":740,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.title",{"_index":739,"title":{},"body":{"components/DocumentComponent.html":{}}}],["documentation",{"_index":1046,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{}}}],["documentcomponent",{"_index":133,"title":{"components/DocumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentcontentcomponent",{"_index":135,"title":{"components/DocumentContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentloadedguard",{"_index":188,"title":{"guards/DocumentLoadedGuard.html":{}},"body":{"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["documents",{"_index":364,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["documents/texts",{"_index":1031,"title":{},"body":{"components/InitComponent.html":{}}}],["documentsimilarities",{"_index":334,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["documentsimilarity",{"_index":524,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["draw",{"_index":1373,"title":{},"body":{"components/SettingsComponent.html":{}}}],["drawer",{"_index":1397,"title":{},"body":{"components/SidenavComponent.html":{}}}],["duration",{"_index":1006,"title":{},"body":{"components/InitComponent.html":{}}}],["dynamic",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":399,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["e.checked",{"_index":550,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["e2e",{"_index":1525,"title":{},"body":{"index.html":{}}}],["e?.target?.files",{"_index":998,"title":{},"body":{"components/InitComponent.html":{}}}],["eeeeee",{"_index":498,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["element",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["element.offsetheight",{"_index":469,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["elements",{"_index":707,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ellipsis",{"_index":502,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["emits",{"_index":220,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["emitter",{"_index":366,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["emitting",{"_index":536,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["end",{"_index":1524,"title":{},"body":{"index.html":{}}}],["enter",{"_index":437,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entire",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["entries",{"_index":649,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries.length",{"_index":714,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries1",{"_index":639,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries2",{"_index":641,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entry",{"_index":393,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["entry'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["entry.component",{"_index":900,"title":{},"body":{"modules/HomeModule.html":{}}}],["entry.component.html",{"_index":521,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.scss",{"_index":520,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts",{"_index":516,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:17",{"_index":533,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":532,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":527,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":531,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":535,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":537,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:47",{"_index":542,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.delete(matchword",{"_index":472,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entry/comparison",{"_index":515,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["entry?.size",{"_index":471,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entryhoverevent",{"_index":335,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entryhoverevent.enter",{"_index":478,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["enum",{"_index":415,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1493,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":941,"title":{},"body":{"components/InitComponent.html":{}}}],["escape",{"_index":798,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["escapedword",{"_index":823,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["escapehtml",{"_index":751,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{}}}],["escapehtmlpipe",{"_index":757,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["escapestringregexp",{"_index":797,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["evaluated",{"_index":789,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["event",{"_index":219,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":212,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["eventually",{"_index":1293,"title":{},"body":{"injectables/QueryService.html":{}}}],["exact",{"_index":383,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["exactmatches",{"_index":687,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactmatches[ids[0",{"_index":691,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactpairs",{"_index":455,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["exactpairs[key",{"_index":458,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["example",{"_index":956,"title":{},"body":{"components/InitComponent.html":{}}}],["exampledocument",{"_index":989,"title":{},"body":{"components/InitComponent.html":{}}}],["execute",{"_index":1521,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1284,"title":{},"body":{"injectables/QueryService.html":{}}}],["explore",{"_index":1030,"title":{},"body":{"components/InitComponent.html":{}}}],["exponent",{"_index":703,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["export",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["exports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["extendedmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["fade",{"_index":506,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fafafa",{"_index":496,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["false",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["field",{"_index":411,"title":{},"body":{"components/ComparisonComponent.html":{},"modules/MaterialModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file/text",{"_index":940,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadinsert",{"_index":1048,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadupload",{"_index":1053,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader",{"_index":1010,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.onloadend",{"_index":1012,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.readasbinarystring(this.jsonfile",{"_index":1011,"title":{},"body":{"components/InitComponent.html":{}}}],["files",{"_index":997,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["files?.length",{"_index":999,"title":{},"body":{"components/InitComponent.html":{}}}],["files[0",{"_index":1001,"title":{},"body":{"components/InitComponent.html":{}}}],["filter",{"_index":683,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["filter(a",{"_index":1360,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["filter(data",{"_index":1322,"title":{},"body":{"injectables/QueryService.html":{}}}],["filters",{"_index":680,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["first",{"_index":261,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["first[1",{"_index":461,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fixed",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":974,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["flex",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["flexmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["font",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["force",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":1072,"title":{},"body":{"components/InitComponent.html":{}}}],["formsmodule",{"_index":894,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["formula",{"_index":698,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["function",{"_index":244,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Corpus.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["further",{"_index":1527,"title":{},"body":{"index.html":{}}}],["fx",{"_index":596,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["fy",{"_index":598,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["g",{"_index":241,"title":{},"body":{"interfaces/Color.html":{}}}],["g)}${(b.length",{"_index":317,"title":{},"body":{"interfaces/Color.html":{}}}],["gap",{"_index":1406,"title":{},"body":{"components/SidenavComponent.html":{}}}],["generate",{"_index":1273,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["generated",{"_index":1123,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["generateexactpairs",{"_index":344,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generates",{"_index":388,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatesoftpairs",{"_index":345,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatewordpairs",{"_index":346,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generating",{"_index":1294,"title":{},"body":{"injectables/QueryService.html":{}}}],["get($color",{"_index":561,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["getbarwidth",{"_index":522,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["getdocumenttext",{"_index":1239,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getdocumenttext(id",{"_index":1255,"title":{},"body":{"injectables/QueryService.html":{}}}],["getformattedcontent",{"_index":753,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getmostimportantexactmatches",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["getmostimportantexactmatches(wordimportancepairs",{"_index":684,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getmostimportantsoftmatches",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["getmostimportantsoftmatches(wordimportancepairs",{"_index":693,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getnormalizedwordimportancepairs",{"_index":1240,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getnormalizedwordimportancepairs(id1",{"_index":654,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getreversedwordmap",{"_index":754,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["gets",{"_index":775,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getsimilarity",{"_index":1241,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getsimilarity(id1",{"_index":620,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getsimilarity(w1",{"_index":634,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(w1id",{"_index":647,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(wid1",{"_index":672,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarityword",{"_index":1242,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getsimilarityword(word1",{"_index":629,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getsoftcosinemeasure",{"_index":1243,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getsoftcosinemeasure(id1",{"_index":1264,"title":{},"body":{"injectables/QueryService.html":{}}}],["getting",{"_index":1495,"title":{"index.html":{}},"body":{}}],["getword",{"_index":1244,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getword(id",{"_index":616,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getword(wid1",{"_index":674,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(wid2",{"_index":675,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(word",{"_index":651,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid",{"_index":1245,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["getwordid(word",{"_index":613,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["getwordid(word1",{"_index":631,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid(word2",{"_index":633,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordimportancepairs",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["getwordimportancepairs(bowentries1",{"_index":657,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["github",{"_index":1044,"title":{},"body":{"components/InitComponent.html":{}}}],["given",{"_index":376,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["global",{"_index":1259,"title":{},"body":{"injectables/QueryService.html":{}}}],["go",{"_index":1530,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":265,"title":{},"body":{"interfaces/Color.html":{}}}],["gradient(45deg",{"_index":840,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["graph",{"_index":585,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["graph/graph.component",{"_index":898,"title":{},"body":{"modules/HomeModule.html":{}}}],["graphcomponent",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graphdata",{"_index":607,"title":{"interfaces/GraphData.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["graphlink",{"_index":600,"title":{"interfaces/GraphLink.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["graphlinks",{"_index":604,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["graphnode",{"_index":589,"title":{"interfaces/GraphNode.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["graphnodes",{"_index":603,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["grid",{"_index":1400,"title":{},"body":{"components/SidenavComponent.html":{}}}],["group",{"_index":591,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["grow",{"_index":559,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["gt",{"_index":880,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["guard",{"_index":841,"title":{"guards/DocumentLoadedGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":842,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["guards/document",{"_index":189,"title":{},"body":{"modules/AppRouter.html":{}}}],["h1",{"_index":1059,"title":{},"body":{"components/InitComponent.html":{}}}],["h2",{"_index":486,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["hammerjs",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":1038,"title":{},"body":{"components/InitComponent.html":{}}}],["handlechange",{"_index":523,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handlechange(e",{"_index":540,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handleentryhover",{"_index":347,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handleentryhover(word",{"_index":390,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlefileupload",{"_index":925,"title":{},"body":{"components/InitComponent.html":{}}}],["handlefileupload(e",{"_index":949,"title":{},"body":{"components/InitComponent.html":{}}}],["handler",{"_index":398,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handles",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handletextupload",{"_index":926,"title":{},"body":{"components/InitComponent.html":{}}}],["handlewordhovered",{"_index":1380,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordhovered(word",{"_index":1366,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordschanged",{"_index":1381,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordschanged(wordmap",{"_index":1354,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordselection",{"_index":348,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlewordselection(e",{"_index":395,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handling",{"_index":543,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["happen",{"_index":1221,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["happening",{"_index":847,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["hard",{"_index":481,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["height",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1528,"title":{},"body":{"index.html":{}}}],["helper",{"_index":410,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["here",{"_index":1047,"title":{},"body":{"components/InitComponent.html":{}}}],["hexcode",{"_index":310,"title":{},"body":{"interfaces/Color.html":{}}}],["hidden",{"_index":483,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["hierarchical",{"_index":422,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["highlight",{"_index":827,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.both",{"_index":839,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.soft",{"_index":838,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlighted",{"_index":330,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedexactmatches",{"_index":728,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedsoftmatches",{"_index":729,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedwordmap",{"_index":730,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlighting",{"_index":771,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlights",{"_index":745,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["holding",{"_index":358,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["holds",{"_index":418,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["home'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["home.component",{"_index":893,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{}}}],["home.routes",{"_index":897,"title":{},"body":{"modules/HomeModule.html":{}}}],["homecomponent",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":885,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepage",{"_index":856,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["homeroutes",{"_index":889,"title":{"modules/HomeRoutes.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules.html":{},"overview.html":{}}}],["hover",{"_index":436,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hovered",{"_index":392,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword",{"_index":336,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword.includes(pairseparator",{"_index":812,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["hovers",{"_index":367,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["html",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["html.pipe",{"_index":796,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["html.pipe.ts",{"_index":868,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:14",{"_index":874,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["htmlelement",{"_index":372,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["htmltextareaelement",{"_index":978,"title":{},"body":{"components/InitComponent.html":{}}}],["http://localhost:4200",{"_index":1506,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1063,"title":{},"body":{"components/InitComponent.html":{}}}],["icons",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":590,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["id.split(pairseparator",{"_index":688,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["id1",{"_index":442,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["id2",{"_index":444,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["id2][0",{"_index":622,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["identifier",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":618,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["ids[0",{"_index":689,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ids[1",{"_index":690,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ignore",{"_index":1097,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["image",{"_index":1054,"title":{},"body":{"components/InitComponent.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["import('./home/home.module').then(m",{"_index":197,"title":{},"body":{"modules/AppRouter.html":{}}}],["import('./init/init.module').then(m",{"_index":194,"title":{},"body":{"modules/AppRouter.html":{}}}],["importance",{"_index":653,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["importances",{"_index":1261,"title":{},"body":{"injectables/QueryService.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["incline",{"_index":250,"title":{},"body":{"interfaces/Color.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirectly",{"_index":586,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["individual",{"_index":238,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonEntryComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["information",{"_index":419,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["inherits",{"_index":587,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["init",{"_index":916,"title":{},"body":{"components/InitComponent.html":{}}}],["init'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["init.component",{"_index":1084,"title":{},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{}}}],["init.component.html",{"_index":918,"title":{},"body":{"components/InitComponent.html":{}}}],["init.component.scss",{"_index":917,"title":{},"body":{"components/InitComponent.html":{}}}],["init.routes",{"_index":1085,"title":{},"body":{"modules/InitModule.html":{}}}],["initcomponent",{"_index":141,"title":{"components/InitComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["initgraphdata",{"_index":1246,"title":{},"body":{"injectables/QueryService.html":{}}}],["initgraphdata(corpus",{"_index":1269,"title":{},"body":{"injectables/QueryService.html":{}}}],["initial",{"_index":249,"title":{},"body":{"interfaces/Color.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["initializing",{"_index":1253,"title":{},"body":{"injectables/QueryService.html":{}}}],["initmodule",{"_index":1078,"title":{"modules/InitModule.html":{}},"body":{"modules/InitModule.html":{},"modules.html":{},"overview.html":{}}}],["initroutes",{"_index":1082,"title":{"modules/InitRoutes.html":{}},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules.html":{},"overview.html":{}}}],["injectable",{"_index":859,"title":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["injectables",{"_index":1087,"title":{},"body":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["inner",{"_index":635,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{}}}],["innerproduct",{"_index":1247,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["innerproduct(id1",{"_index":638,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["innerproductsingle",{"_index":1248,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["innerproductsingle(id",{"_index":648,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["input",{"_index":213,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["inputs",{"_index":350,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["insert",{"_index":1052,"title":{},"body":{"components/InitComponent.html":{}}}],["inserted",{"_index":915,"title":{},"body":{"components/InitComponent.html":{}}}],["insertedtext",{"_index":919,"title":{},"body":{"components/InitComponent.html":{}}}],["inserting",{"_index":983,"title":{},"body":{"components/InitComponent.html":{}}}],["insertingtext",{"_index":920,"title":{},"body":{"components/InitComponent.html":{}}}],["interface",{"_index":201,"title":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{}},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":203,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"overview.html":{}}}],["inversesrgbcompanding",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["inversesrgbcompanding(color",{"_index":279,"title":{},"body":{"interfaces/Color.html":{}}}],["inversesrgbcompanding(color1",{"_index":305,"title":{},"body":{"interfaces/Color.html":{}}}],["inversesrgbcompanding(color2",{"_index":307,"title":{},"body":{"interfaces/Color.html":{}}}],["isloading",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["isloadingsource",{"_index":1108,"title":{},"body":{"injectables/LoadingService.html":{}}}],["iswordlowlighted",{"_index":755,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["iswordlowlighted(word",{"_index":780,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["italic",{"_index":834,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["items",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["items.sort((first",{"_index":459,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["itself",{"_index":1233,"title":{},"body":{"injectables/QueryService.html":{}}}],["json",{"_index":976,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(text",{"_index":1016,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonfile",{"_index":921,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonschematype",{"_index":1094,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["jsontextarea",{"_index":922,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonvalidateservice",{"_index":932,"title":{"injectables/JsonValidateService.html":{}},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"coverage.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["karma",{"_index":1523,"title":{},"body":{"index.html":{}}}],["key",{"_index":228,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{}}}],["keys",{"_index":685,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["kickstarting",{"_index":1271,"title":{},"body":{"injectables/QueryService.html":{}}}],["label",{"_index":500,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SettingsComponent.html":{}}}],["labels",{"_index":1372,"title":{},"body":{"components/SettingsComponent.html":{}}}],["last",{"_index":1377,"title":{},"body":{"components/SettingsComponent.html":{}}}],["layout",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"dependencies.html":{}}}],["leave",{"_index":394,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["legend",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"overview.html":{}}}],["less",{"_index":786,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["line",{"_index":504,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["linear",{"_index":701,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["links",{"_index":609,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["list",{"_index":1171,"title":{},"body":{"modules/MaterialModule.html":{}}}],["literal",{"_index":396,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["loadchildren",{"_index":193,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded",{"_index":849,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["loaded.guard",{"_index":190,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded.guard.ts",{"_index":844,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["loaded.guard.ts:13",{"_index":852,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["loaded.guard.ts:26",{"_index":857,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["loadexample",{"_index":927,"title":{},"body":{"components/InitComponent.html":{}}}],["loading",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["loading.service",{"_index":1296,"title":{},"body":{"injectables/QueryService.html":{}}}],["loadingprogress",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingprogresssource",{"_index":1109,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":39,"title":{"injectables/LoadingService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["loadingstage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingstagesource",{"_index":1110,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loads",{"_index":955,"title":{},"body":{"components/InitComponent.html":{}}}],["located",{"_index":853,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["log2",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["log2(n",{"_index":321,"title":{},"body":{"interfaces/Color.html":{}}}],["logarithm",{"_index":319,"title":{},"body":{"interfaces/Color.html":{}}}],["logic",{"_index":518,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["long",{"_index":1107,"title":{},"body":{"injectables/LoadingService.html":{}}}],["lowlight",{"_index":830,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighted",{"_index":785,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighting",{"_index":772,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["m.homemodule",{"_index":198,"title":{},"body":{"modules/AppRouter.html":{}}}],["m.initmodule",{"_index":195,"title":{},"body":{"modules/AppRouter.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["making",{"_index":412,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["map",{"_index":196,"title":{},"body":{"modules/AppRouter.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map(data",{"_index":1324,"title":{},"body":{"injectables/QueryService.html":{}}}],["mapping",{"_index":777,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["maps",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["margin",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["marked",{"_index":784,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["mat",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["matautocompletemodule",{"_index":1158,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1149,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":1178,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1172,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":403,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["matcheckboxchange",{"_index":541,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["matcheckboxmodule",{"_index":1157,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matched",{"_index":428,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/typealiases.html":{}}}],["matches",{"_index":384,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1197,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matchword",{"_index":470,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["matdatepickermodule",{"_index":1160,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":1182,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1330,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["material.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["materialmodule",{"_index":165,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1176,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1162,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":1169,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(value",{"_index":253,"title":{},"body":{"interfaces/Color.html":{}}}],["math.log2(n",{"_index":322,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow((b",{"_index":291,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow((g",{"_index":290,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow((r",{"_index":285,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(1",{"_index":705,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["math.pow(2",{"_index":325,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(b",{"_index":299,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(g",{"_index":298,"title":{},"body":{"interfaces/Color.html":{}}}],["math.pow(r",{"_index":297,"title":{},"body":{"interfaces/Color.html":{}}}],["maticonmodule",{"_index":1145,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1187,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1147,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1167,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginatormodule",{"_index":1151,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1181,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1179,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":1189,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":1191,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":1141,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidermodule",{"_index":1193,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":1164,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":934,"title":{},"body":{"components/InitComponent.html":{}}}],["matsnackbarmodule",{"_index":1186,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsortmodule",{"_index":1153,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsteppermodule",{"_index":1174,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":1155,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":1195,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1143,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1184,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["measure",{"_index":1266,"title":{},"body":{"injectables/QueryService.html":{}}}],["menu",{"_index":216,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["message",{"_index":947,"title":{},"body":{"components/InitComponent.html":{}}}],["messages",{"_index":942,"title":{},"body":{"components/InitComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["method",{"_index":302,"title":{},"body":{"interfaces/Color.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["min",{"_index":1069,"title":{},"body":{"components/InitComponent.html":{}}}],["mind",{"_index":259,"title":{},"body":{"interfaces/Color.html":{}}}],["minmax(200px",{"_index":1405,"title":{},"body":{"components/SidenavComponent.html":{}}}],["miscellaneous",{"_index":1492,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":300,"title":{},"body":{"interfaces/Color.html":{}}}],["mixed",{"_index":262,"title":{},"body":{"interfaces/Color.html":{}}}],["mixing",{"_index":256,"title":{},"body":{"interfaces/Color.html":{}}}],["modifier:{{settings.clumpingmodifier",{"_index":1376,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifier:{{settings.distancemodifier",{"_index":1375,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifiers",{"_index":699,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["module",{"_index":152,"title":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["modules",{"_index":154,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1529,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":1345,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["mouseevent",{"_index":1347,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["msg",{"_index":948,"title":{},"body":{"components/InitComponent.html":{}}}],["multiplier",{"_index":700,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["n",{"_index":320,"title":{},"body":{"interfaces/Color.html":{}}}],["naive",{"_index":254,"title":{},"body":{"interfaces/Color.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"index.html":{}}}],["nav",{"_index":1407,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigate",{"_index":1071,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["navigating",{"_index":855,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["navigation",{"_index":943,"title":{},"body":{"components/InitComponent.html":{}}}],["needs",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":223,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":488,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["ngonchanges",{"_index":349,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["ngonchanges(changes",{"_index":404,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["node",{"_index":583,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes",{"_index":608,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes.push(doc",{"_index":718,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes.push(node",{"_index":715,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["non",{"_index":665,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["norm",{"_index":658,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normal",{"_index":276,"title":{},"body":{"interfaces/Color.html":{}}}],["normalization",{"_index":243,"title":{},"body":{"interfaces/Color.html":{},"injectables/QueryService.html":{}}}],["normalized",{"_index":247,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["normalizedeviation",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["normalizedeviation(value",{"_index":251,"title":{},"body":{"interfaces/Color.html":{}}}],["normalizing",{"_index":245,"title":{},"body":{"interfaces/Color.html":{}}}],["normwordpairs",{"_index":660,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normwordpairs[id",{"_index":663,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nth",{"_index":494,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["null",{"_index":597,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["number",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1099,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["object.entries(corpus.results",{"_index":711,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id",{"_index":650,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id1",{"_index":640,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id2",{"_index":642,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(corpus.dictionary).find(key",{"_index":614,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(exactpairs).map((key",{"_index":457,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(softpairs).map((key",{"_index":465,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(wordimportancepairs",{"_index":686,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs",{"_index":662,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs).includes(wordskey",{"_index":678,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["observable",{"_index":579,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["observable(subscriber",{"_index":710,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["once",{"_index":937,"title":{},"body":{"components/InitComponent.html":{}}}],["onchanges",{"_index":331,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["one",{"_index":519,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["open",{"_index":1041,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["operating",{"_index":1232,"title":{},"body":{"injectables/QueryService.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["otherwise",{"_index":1285,"title":{},"body":{"injectables/QueryService.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"index.html":{},"overview.html":{}}}],["out.get(match).add(parent",{"_index":809,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.has(match",{"_index":808,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.set(match",{"_index":810,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["output",{"_index":214,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["outputs",{"_index":352,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["over",{"_index":368,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["overflow",{"_index":482,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["overflowing",{"_index":377,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["overview",{"_index":1532,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":831,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["package",{"_index":1467,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":484,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["page",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pair",{"_index":1229,"title":{},"body":{"modules/PipesModule.html":{},"miscellaneous/variables.html":{}}}],["paired",{"_index":1214,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairs",{"_index":389,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["pairseparator",{"_index":581,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pairsplitfirstpipe",{"_index":1199,"title":{"pipes/PairSplitFirstPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairsplitsecondpipe",{"_index":1209,"title":{"pipes/PairSplitSecondPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairup",{"_index":1211,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairuppipe",{"_index":1212,"title":{"pipes/PairUpPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["panelclass",{"_index":1004,"title":{},"body":{"components/InitComponent.html":{}}}],["param",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["parent",{"_index":779,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["parse",{"_index":996,"title":{},"body":{"components/InitComponent.html":{}}}],["parsed",{"_index":1015,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["parsing",{"_index":964,"title":{},"body":{"components/InitComponent.html":{}}}],["passed",{"_index":605,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["passing",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["path",{"_index":192,"title":{},"body":{"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["patternproperties",{"_index":1100,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["percent:'.2",{"_index":552,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percent:\\'.2",{"_index":572,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percentage",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonEntryComponent.html":{},"injectables/LoadingService.html":{}}}],["perform",{"_index":611,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["phrase",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe",{"_index":759,"title":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["pipe(map((corpus",{"_index":863,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["pipes",{"_index":866,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"overview.html":{}}}],["pipes/escape",{"_index":795,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pair",{"_index":802,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pipes.module",{"_index":909,"title":{},"body":{"modules/HomeModule.html":{}}}],["pipesmodule",{"_index":908,"title":{"modules/PipesModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":876,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["placed",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populates",{"_index":381,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["position",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["possible",{"_index":413,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["potentially",{"_index":402,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["pow2",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["pow2(n",{"_index":324,"title":{},"body":{"interfaces/Color.html":{}}}],["power",{"_index":323,"title":{},"body":{"interfaces/Color.html":{}}}],["preface",{"_index":1058,"title":{},"body":{"components/InitComponent.html":{}}}],["present",{"_index":858,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["prevents",{"_index":845,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["prevword",{"_index":476,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["primary",{"_index":562,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["process",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["processed",{"_index":959,"title":{},"body":{"components/InitComponent.html":{}}}],["prod",{"_index":1515,"title":{},"body":{"index.html":{}}}],["product",{"_index":636,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["production",{"_index":1516,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["project",{"_index":1498,"title":{},"body":{"index.html":{}}}],["promise",{"_index":970,"title":{},"body":{"components/InitComponent.html":{}}}],["promise((resolve",{"_index":1008,"title":{},"body":{"components/InitComponent.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":1526,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":861,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["providers",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["put",{"_index":1216,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["query",{"_index":612,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["querying",{"_index":1231,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryservice",{"_index":356,"title":{"injectables/QueryService.html":{}},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["queryutils",{"_index":433,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["queryutils.getdocumenttext(id",{"_index":1315,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getmostimportantexactmatches(this.wordpairs",{"_index":456,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getmostimportantsoftmatches(this.wordpairs",{"_index":464,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getnormalizedwordimportancepairs(id1",{"_index":1316,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarity(id1",{"_index":1309,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarityword(word1",{"_index":1310,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsoftcosinemeasure(id1",{"_index":1314,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getword(id",{"_index":1308,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getwordid(word",{"_index":1306,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproduct(id1",{"_index":1311,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproductsingle(id",{"_index":1312,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.softcosinemeasurenorm(id1",{"_index":1313,"title":{},"body":{"injectables/QueryService.html":{}}}],["quot",{"_index":882,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["r",{"_index":242,"title":{},"body":{"interfaces/Color.html":{}}}],["r)}${(g.length",{"_index":316,"title":{},"body":{"interfaces/Color.html":{}}}],["r.length",{"_index":314,"title":{},"body":{"interfaces/Color.html":{}}}],["radius",{"_index":491,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["re",{"_index":825,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reactiveformsmodule",{"_index":895,"title":{},"body":{"modules/HomeModule.html":{}}}],["read",{"_index":1045,"title":{},"body":{"components/InitComponent.html":{}}}],["readonly",{"_index":1236,"title":{},"body":{"injectables/QueryService.html":{}}}],["red",{"_index":1005,"title":{},"body":{"components/InitComponent.html":{}}}],["redirectto",{"_index":199,"title":{},"body":{"modules/AppRouter.html":{}}}],["reduce((a",{"_index":1357,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["reference",{"_index":981,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["regexp",{"_index":799,"title":{},"body":{"components/DocumentContentComponent.html":{},"dependencies.html":{}}}],["regexp(`(?${escapedword",{"_index":826,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reject",{"_index":962,"title":{},"body":{"components/InitComponent.html":{}}}],["reject(e",{"_index":1020,"title":{},"body":{"components/InitComponent.html":{}}}],["relation",{"_index":438,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relations",{"_index":735,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{}}}],["relationships",{"_index":1342,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["relative",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["reload",{"_index":1508,"title":{},"body":{"index.html":{}}}],["replace(/\"/g",{"_index":881,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/&/g",{"_index":877,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/'/g",{"_index":883,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(//g",{"_index":879,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replaces",{"_index":869,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["reports",{"_index":1254,"title":{},"body":{"injectables/QueryService.html":{}}}],["representations",{"_index":1028,"title":{},"body":{"components/InitComponent.html":{}}}],["required",{"_index":1102,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resize",{"_index":904,"title":{},"body":{"modules/HomeModule.html":{},"dependencies.html":{}}}],["resolve",{"_index":961,"title":{},"body":{"components/InitComponent.html":{}}}],["resolve(parsed",{"_index":1018,"title":{},"body":{"components/InitComponent.html":{}}}],["respective",{"_index":1035,"title":{},"body":{"components/InitComponent.html":{}}}],["responsible",{"_index":327,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["result",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":610,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["retrieves",{"_index":1203,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["return",{"_index":252,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["reversed",{"_index":776,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap",{"_index":781,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap.get(word)?.has(hoveredword",{"_index":817,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["rgb",{"_index":239,"title":{},"body":{"interfaces/Color.html":{}}}],["rgba(0",{"_index":565,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["right",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["root'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["route",{"_index":846,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["router",{"_index":851,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["routermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forchild(routes",{"_index":911,"title":{},"body":{"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forroot(routes",{"_index":200,"title":{},"body":{"modules/AppRouter.html":{}}}],["routes",{"_index":18,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{},"routes.html":{}}}],["rows",{"_index":1403,"title":{},"body":{"components/SidenavComponent.html":{}}}],["run",{"_index":1503,"title":{},"body":{"index.html":{}}}],["running",{"_index":1517,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":580,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":860,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/QueryService.html":{}}}],["safe",{"_index":761,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["saying",{"_index":975,"title":{},"body":{"components/InitComponent.html":{}}}],["scaffolding",{"_index":1509,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1095,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1343,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["scrollable",{"_index":337,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["searchqueryschema",{"_index":1098,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["second",{"_index":264,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{}}}],["second[1",{"_index":460,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["secondary",{"_index":828,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["selected",{"_index":363,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["selectedchange",{"_index":526,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["selecteddocument",{"_index":360,"title":{"interfaces/SelectedDocument.html":{}},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["selecteddocuments",{"_index":351,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["selectedwords",{"_index":338,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selection",{"_index":328,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["semantic",{"_index":1027,"title":{},"body":{"components/InitComponent.html":{}}}],["sending",{"_index":951,"title":{},"body":{"components/InitComponent.html":{}}}],["separator",{"_index":1065,"title":{},"body":{"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1504,"title":{},"body":{"index.html":{}}}],["server",{"_index":1502,"title":{},"body":{"index.html":{}}}],["service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["services/json",{"_index":986,"title":{},"body":{"components/InitComponent.html":{}}}],["services/loading.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["services/query.service",{"_index":431,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["set",{"_index":232,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["set([...this.highlightedsoftmatches",{"_index":819,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set([parent",{"_index":811,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set(softmatches",{"_index":1363,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["set(wordmap.keys",{"_index":1355,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["setcorpus",{"_index":1249,"title":{},"body":{"injectables/QueryService.html":{}}}],["setcorpus(corpus",{"_index":1278,"title":{},"body":{"injectables/QueryService.html":{}}}],["setisloading",{"_index":1111,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setisloading(value",{"_index":1114,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress",{"_index":1112,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress(value",{"_index":1117,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage",{"_index":1113,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage(value",{"_index":1119,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setquery",{"_index":928,"title":{},"body":{"components/InitComponent.html":{}}}],["setquery(corpus",{"_index":957,"title":{},"body":{"components/InitComponent.html":{}}}],["sets",{"_index":770,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["setter",{"_index":1116,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["setting",{"_index":226,"title":{},"body":{"interfaces/AppSettings.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":206,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["settings.component.html",{"_index":217,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":218,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":901,"title":{},"body":{"modules/HomeModule.html":{}}}],["settingschange",{"_index":222,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":143,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":510,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["show",{"_index":1371,"title":{},"body":{"components/SettingsComponent.html":{}}}],["showdeviations",{"_index":209,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["showing",{"_index":725,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["showlabels",{"_index":210,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["shrink",{"_index":557,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["sidebar",{"_index":1336,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidebarclose",{"_index":1338,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component",{"_index":737,"title":{},"body":{"components/DocumentComponent.html":{}}}],["sidenav.component.html",{"_index":1331,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1332,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav/document/document",{"_index":906,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/document/document.component",{"_index":905,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/sidenav.component",{"_index":432,"title":{},"body":{"components/ComparisonComponent.html":{},"modules/HomeModule.html":{}}}],["sidenavcomponent",{"_index":145,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["similar",{"_index":1032,"title":{},"body":{"components/InitComponent.html":{}}}],["similarities",{"_index":637,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["similarity",{"_index":409,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["simplechanges",{"_index":405,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["simulating",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simulation",{"_index":606,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationlinkdatum",{"_index":599,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationnodedatum",{"_index":588,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["size",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["snackbar",{"_index":933,"title":{},"body":{"components/InitComponent.html":{}}}],["soft",{"_index":386,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["softcosinemeasurenorm",{"_index":1250,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["softcosinemeasurenorm(id1",{"_index":659,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["softmatch",{"_index":525,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["softmatches",{"_index":694,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["softmatches[id",{"_index":695,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["softpairs",{"_index":463,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["softpairs[key",{"_index":466,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["something",{"_index":1128,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sorted",{"_index":425,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairsexact",{"_index":339,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairssoft",{"_index":340,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"index.html":{}}}],["space",{"_index":277,"title":{},"body":{"interfaces/Color.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["spacing",{"_index":835,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["span",{"_index":564,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["special",{"_index":870,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["specific",{"_index":230,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["specified",{"_index":225,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/SettingsComponent.html":{}}}],["specifies",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["specifying",{"_index":435,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["spinner",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["split",{"_index":1206,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["split.pipe",{"_index":803,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["split.pipe.ts",{"_index":1201,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["split.pipe.ts:16",{"_index":1205,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{}}}],["split.pipe.ts:33",{"_index":1223,"title":{},"body":{"pipes/PairSplitSecondPipe.html":{}}}],["split.pipe.ts:51",{"_index":1224,"title":{},"body":{"pipes/PairUpPipe.html":{}}}],["split.pipe.ts:68",{"_index":1410,"title":{},"body":{"pipes/SplitUpPipe.html":{}}}],["splits",{"_index":1202,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splitting",{"_index":762,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["splitup",{"_index":1220,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splituppipe",{"_index":752,"title":{"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../comparison.component.ts",{"_index":1494,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.ts",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../various.utils.ts",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routes.ts",{"_index":186,"title":{},"body":{"modules/AppRouter.html":{}}}],["src/app/guards/document",{"_index":843,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["src/app/home/comparison/comparison",{"_index":514,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["src/app/home/comparison/comparison.component.ts",{"_index":326,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/home/comparison/comparison.component.ts:102",{"_index":387,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:112",{"_index":380,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:124",{"_index":385,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:137",{"_index":373,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:146",{"_index":397,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:168",{"_index":378,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:178",{"_index":391,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:31",{"_index":361,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:36",{"_index":370,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:40",{"_index":365,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:45",{"_index":427,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:49",{"_index":424,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:53",{"_index":426,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:57",{"_index":421,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:61",{"_index":417,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:65",{"_index":416,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:69",{"_index":408,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:74",{"_index":357,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:81",{"_index":407,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/comparison/comparison.component.ts:90",{"_index":406,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/graph/graph.component.ts",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.module.ts",{"_index":890,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routes.ts",{"_index":910,"title":{},"body":{"modules/HomeRoutes.html":{}}}],["src/app/home/settings/settings.component.ts",{"_index":204,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/home/settings/settings.component.ts:26",{"_index":1368,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/home/settings/settings.component.ts:30",{"_index":1369,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/home/settings/settings.component.ts:37",{"_index":1370,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/home/sidenav/document/document",{"_index":741,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts",{"_index":723,"title":{},"body":{"components/DocumentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts:18",{"_index":731,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:22",{"_index":732,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:26",{"_index":733,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:30",{"_index":734,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:34",{"_index":736,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts",{"_index":1327,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:102",{"_index":1389,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:26",{"_index":1383,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:30",{"_index":1382,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:35",{"_index":1385,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:39",{"_index":1384,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:44",{"_index":1391,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:48",{"_index":1392,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:52",{"_index":1393,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:56",{"_index":1394,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:62",{"_index":1388,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:71",{"_index":1387,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:80",{"_index":1390,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:92",{"_index":1386,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/init/init.component.ts",{"_index":912,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{}}}],["src/app/init/init.component.ts:107",{"_index":969,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:116",{"_index":971,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:132",{"_index":963,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:153",{"_index":958,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:161",{"_index":954,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:21",{"_index":973,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:25",{"_index":972,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:29",{"_index":977,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:33",{"_index":984,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:38",{"_index":935,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:56",{"_index":953,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:70",{"_index":950,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:91",{"_index":945,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.module.ts",{"_index":1083,"title":{},"body":{"modules/InitModule.html":{}}}],["src/app/init/init.routes.ts",{"_index":1086,"title":{},"body":{"modules/InitRoutes.html":{}}}],["src/app/material.module.ts",{"_index":1140,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pipes/escape",{"_index":867,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pair",{"_index":1200,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1228,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/json",{"_index":1088,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/loading.service.ts",{"_index":1106,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:16",{"_index":1125,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:20",{"_index":1122,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:26",{"_index":1132,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:30",{"_index":1130,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:36",{"_index":1136,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:40",{"_index":1134,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:46",{"_index":1115,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:54",{"_index":1118,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:62",{"_index":1120,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/query.service.ts",{"_index":1230,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/services/query.service.ts:103",{"_index":1263,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:113",{"_index":1276,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:122",{"_index":1277,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:132",{"_index":1280,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:142",{"_index":1265,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:151",{"_index":1256,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:161",{"_index":1260,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:169",{"_index":1270,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:19",{"_index":1288,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:23",{"_index":1291,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:28",{"_index":1292,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:34",{"_index":1252,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:53",{"_index":1279,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:62",{"_index":1282,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:74",{"_index":1268,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:83",{"_index":1267,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:93",{"_index":1262,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/utils/graph.utils.ts",{"_index":237,"title":{},"body":{"interfaces/Color.html":{},"coverage.html":{}}}],["src/app/utils/query.utils.ts",{"_index":573,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["src/app/utils/various.utils.ts",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":301,"title":{},"body":{"interfaces/Color.html":{}}}],["srgbcompanding",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["srgbcompanding(color",{"_index":295,"title":{},"body":{"interfaces/Color.html":{}}}],["srgbcompanding(colormix(c1",{"_index":308,"title":{},"body":{"interfaces/Color.html":{}}}],["stage",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["started",{"_index":1496,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["stiffness",{"_index":248,"title":{},"body":{"interfaces/Color.html":{}}}],["store",{"_index":936,"title":{},"body":{"components/InitComponent.html":{}}}],["stored",{"_index":1295,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["stores",{"_index":1127,"title":{},"body":{"injectables/LoadingService.html":{}}}],["storing",{"_index":1289,"title":{},"body":{"injectables/QueryService.html":{}}}],["str1",{"_index":1213,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str1}${separator}${str2",{"_index":1219,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str2",{"_index":1215,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["stretch",{"_index":556,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1217,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["stroke",{"_index":1068,"title":{},"body":{"components/InitComponent.html":{}}}],["structure",{"_index":423,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["style",{"_index":833,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["subject",{"_index":1126,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["subscriber.complete",{"_index":720,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscriber.next({progress",{"_index":713,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscription",{"_index":1275,"title":{},"body":{"injectables/QueryService.html":{}}}],["subtitle",{"_index":1328,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["successful",{"_index":967,"title":{},"body":{"components/InitComponent.html":{}}}],["support",{"_index":1534,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1535,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":257,"title":{},"body":{"interfaces/Color.html":{}}}],["tap",{"_index":1297,"title":{},"body":{"injectables/QueryService.html":{}}}],["tap(progress",{"_index":1319,"title":{},"body":{"injectables/QueryService.html":{}}}],["target",{"_index":601,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["tertiary",{"_index":829,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["test",{"_index":1520,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1519,"title":{},"body":{"index.html":{}}}],["text",{"_index":501,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["text.join",{"_index":652,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["textarea",{"_index":982,"title":{},"body":{"components/InitComponent.html":{}}}],["texts",{"_index":575,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["texts_bow",{"_index":576,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["that's",{"_index":788,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.clearhighlightedwords",{"_index":1349,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.clearwordselection",{"_index":450,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.compareclick.emit(e",{"_index":1352,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.convertedcontent",{"_index":804,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.corpussource.asobservable",{"_index":1290,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.getvalue",{"_index":1305,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.next(corpus",{"_index":1304,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.displayerror('couldn\\'t",{"_index":995,"title":{},"body":{"components/InitComponent.html":{}}}],["this.documentsimilarities",{"_index":446,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.documentsimilarity",{"_index":547,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.escapehtml.transform(this.content",{"_index":821,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.escapehtml.transform(word",{"_index":824,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.generateexactpairs",{"_index":453,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatesoftpairs",{"_index":454,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatewordpairs",{"_index":441,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.getformattedcontent",{"_index":805,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.getreversedwordmap",{"_index":822,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedexactmatches",{"_index":820,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedexactmatches.has(a",{"_index":1361,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedsoftmatches",{"_index":1362,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap",{"_index":1364,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap.entries",{"_index":807,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.hoveredword",{"_index":477,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.isloading",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloadingsource.asobservable",{"_index":1121,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.isloadingsource.next(value",{"_index":1137,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.jsonfile",{"_index":1000,"title":{},"body":{"components/InitComponent.html":{}}}],["this.jsonvalidateservice.validatecorpus(parsed",{"_index":1017,"title":{},"body":{"components/InitComponent.html":{}}}],["this.loadingprogress",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingprogresssource.asobservable",{"_index":1129,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingprogresssource.next(value",{"_index":1138,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.isloading.subscribe(value",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingprogress.subscribe(value",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingstage.subscribe(value",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.setisloading(false",{"_index":1325,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setisloading(true",{"_index":1317,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingprogress(progress.value",{"_index":1321,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingstage(progress.stage",{"_index":1320,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingstage",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingstagesource.asobservable",{"_index":1133,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingstagesource.next(value",{"_index":1139,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.queryservice.currentcorpus",{"_index":862,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["this.queryservice.getnormalizedwordimportancepairs(this.selecteddocuments[0].id",{"_index":452,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.getsoftcosinemeasure(id1",{"_index":447,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.setcorpus(corpus",{"_index":1021,"title":{},"body":{"components/InitComponent.html":{}}}],["this.router.navigate",{"_index":865,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["this.router.navigate(['/map",{"_index":1022,"title":{},"body":{"components/InitComponent.html":{}}}],["this.scrollable[element.id",{"_index":468,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedchange.emit",{"_index":548,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.selecteddocuments?.length",{"_index":440,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[0].id",{"_index":443,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[1].id",{"_index":445,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.clear",{"_index":475,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.delete(e.word",{"_index":473,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.setquery((exampledocument",{"_index":1023,"title":{},"body":{"components/InitComponent.html":{}}}],["this.setquery(res",{"_index":993,"title":{},"body":{"components/InitComponent.html":{}}}],["this.settings[setting",{"_index":234,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.settingschange.emit(this.settings",{"_index":235,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.sidebarclose.emit(e",{"_index":1348,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.snackbar.open",{"_index":1003,"title":{},"body":{"components/InitComponent.html":{}}}],["this.softmatch",{"_index":551,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.sortedwordpairsexact",{"_index":462,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.sortedwordpairssoft",{"_index":467,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.splituppipe.transform(hoveredword",{"_index":813,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.usedcorpus(corpus",{"_index":1307,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.validateandparse(filereader.result",{"_index":1013,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateandparse(this.insertedtext",{"_index":1009,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validatetext().then(res",{"_index":992,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateuploadedfile().then(res",{"_index":1002,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validating",{"_index":991,"title":{},"body":{"components/InitComponent.html":{}}}],["this.weight",{"_index":546,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.word",{"_index":549,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.wordhovered.emit(this.hoveredword",{"_index":480,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordpairs",{"_index":451,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordschanged.emit(this.selectedwords",{"_index":474,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.worker",{"_index":1299,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.onmessage",{"_index":1302,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.postmessage({query",{"_index":1326,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.asobservable",{"_index":1318,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.next(data",{"_index":1303,"title":{},"body":{"injectables/QueryService.html":{}}}],["through",{"_index":681,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["title",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["toggle",{"_index":1166,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tool",{"_index":1026,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["top",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["total",{"_index":528,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["transform",{"_index":872,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(str1",{"_index":1218,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(text",{"_index":873,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["transform(value",{"_index":1204,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transformed",{"_index":875,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["true",{"_index":864,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1014,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["ts",{"_index":1096,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["tslib",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["tuples",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":266,"title":{},"body":{"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1541,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1298,"title":{},"body":{"injectables/QueryService.html":{}}}],["ui",{"_index":517,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["undefined",{"_index":479,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["unit",{"_index":1518,"title":{},"body":{"index.html":{}}}],["unless",{"_index":848,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["unsuccessful",{"_index":968,"title":{},"body":{"components/InitComponent.html":{}}}],["up",{"_index":763,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["updated",{"_index":400,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["updates",{"_index":1353,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["upon",{"_index":1274,"title":{},"body":{"injectables/QueryService.html":{}}}],["url(\"../../../src/assets/background.jpg",{"_index":1055,"title":{},"body":{"components/InitComponent.html":{}}}],["use",{"_index":414,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["used",{"_index":854,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["usedcorpus",{"_index":1251,"title":{},"body":{"injectables/QueryService.html":{}}}],["usedcorpus(corpus",{"_index":1281,"title":{},"body":{"injectables/QueryService.html":{}}}],["user",{"_index":215,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["using",{"_index":227,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["utility",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/query.utils",{"_index":434,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["utils/various.utils",{"_index":801,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valid",{"_index":1037,"title":{},"body":{"components/InitComponent.html":{}}}],["validate",{"_index":939,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["validate(corpus",{"_index":1105,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validate.service",{"_index":987,"title":{},"body":{"components/InitComponent.html":{}}}],["validate.service.ts",{"_index":1089,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate.service.ts:87",{"_index":1092,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validateandparse",{"_index":929,"title":{},"body":{"components/InitComponent.html":{}}}],["validateandparse(text",{"_index":960,"title":{},"body":{"components/InitComponent.html":{}}}],["validatecorpus",{"_index":1090,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validatecorpus(corpus",{"_index":1091,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validated",{"_index":965,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validatetext",{"_index":930,"title":{},"body":{"components/InitComponent.html":{}}}],["validateuploadedfile",{"_index":931,"title":{},"body":{"components/InitComponent.html":{}}}],["validating",{"_index":923,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validation",{"_index":938,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"interfaces/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["value?.includes(separator",{"_index":1207,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator",{"_index":1222,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[0",{"_index":1208,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[1",{"_index":1210,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valuechanged",{"_index":800,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["valuechanged(changes?.highlightedwords",{"_index":806,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["values",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["variable",{"_index":382,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{}}}],["variables",{"_index":554,"title":{"miscellaneous/variables.html":{}},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/variables.html":{}}}],["various.utils",{"_index":582,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["version",{"_index":577,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":1522,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":985,"title":{},"body":{"components/InitComponent.html":{}}}],["viewchild('jsontextarea",{"_index":980,"title":{},"body":{"components/InitComponent.html":{}}}],["visible",{"_index":787,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["visualisation",{"_index":1497,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1025,"title":{},"body":{"components/InitComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["vx",{"_index":594,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["vy",{"_index":595,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1",{"_index":630,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1id",{"_index":643,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1weight",{"_index":644,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2",{"_index":632,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2id",{"_index":645,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2weight",{"_index":646,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["way",{"_index":255,"title":{},"body":{"interfaces/Color.html":{}}}],["webworker",{"_index":1272,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":430,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["weights",{"_index":1036,"title":{},"body":{"components/InitComponent.html":{}}}],["welcoming",{"_index":913,"title":{},"body":{"components/InitComponent.html":{}}}],["what's",{"_index":1034,"title":{},"body":{"components/InitComponent.html":{}}}],["what\\'s",{"_index":1077,"title":{},"body":{"components/InitComponent.html":{}}}],["whether",{"_index":375,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["wid1",{"_index":667,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wid2",{"_index":669,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{}}}],["window",{"_index":1334,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["wish",{"_index":1039,"title":{},"body":{"components/InitComponent.html":{}}}],["within",{"_index":850,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["word",{"_index":369,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["word1",{"_index":627,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["word1}${pairseparator}${word2",{"_index":677,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word2",{"_index":628,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["word_similarities",{"_index":578,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["wordhovered",{"_index":353,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordimportancepairs",{"_index":682,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordimportancepairs[id",{"_index":692,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordmap",{"_index":420,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["wordpairs",{"_index":341,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[id",{"_index":664,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[wordskey",{"_index":679,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairskeys",{"_index":661,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["words",{"_index":329,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["words.has(hoveredword",{"_index":816,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(w1",{"_index":814,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(w2",{"_index":815,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["wordschanged",{"_index":354,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordsimilarity",{"_index":671,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordskey",{"_index":676,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word}}{{softmatch",{"_index":553,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["worker",{"_index":1237,"title":{},"body":{"injectables/QueryService.html":{}}}],["worker('../workers/graph",{"_index":1300,"title":{},"body":{"injectables/QueryService.html":{}}}],["workerdata",{"_index":1238,"title":{},"body":{"injectables/QueryService.html":{}}}],["wrapper",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["wweight1",{"_index":668,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wweight2",{"_index":670,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wysiwyginsert",{"_index":1049,"title":{},"body":{"components/InitComponent.html":{}}}],["x",{"_index":592,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SidenavComponent.html":{}}}],["y",{"_index":593,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["yes",{"_index":1257,"title":{},"body":{"injectables/QueryService.html":{}}}],["z",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["zone.js",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main wrapper component of the application, handles only the loading between routes\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                loadingStage\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe loading service, passing values of loading\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Specifies if the page is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Specifies the progress in percentage value of the current stage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Specifies the current loading stage of the entire loading process\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Document Maps'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoadingService} from './services/loading.service';\n\n\n/**\n * Main wrapper component of the application, handles only the loading between routes\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Document Maps';\n\n  /**\n   * Specifies if the page is loading\n   * @public\n   */\n  isLoading = false;\n  /**\n   * Specifies the progress in percentage value of the current stage\n   * @public\n   */\n  loadingProgress: number;\n  /**\n   * Specifies the current loading stage of the entire loading process\n   * @public\n   */\n  loadingStage: string;\n\n  /**\n   * @param loadingService - The loading service, passing values of loading\n   */\n  constructor(\n    private loadingService: LoadingService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadingService.loadingProgress.subscribe(value => {\n      if (this.loadingProgress !== value){\n        this.loadingProgress = value;\n      }\n    });\n    this.loadingService.loadingStage.subscribe(value => {\n      if (this.loadingStage !== value) {\n        this.loadingStage = value;\n      }\n    });\n    this.loadingService.isLoading.subscribe(value => {\n      if (this.isLoading !== value) {\n        this.isLoading = value;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        {{loadingStage}} {{(loadingProgress / 100) | percent}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .loading-wrapper{\n  position: fixed;\n  z-index: 10;\n  background: #fff;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .loading{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    max-width: 600px;\n    width: 100%;\n    height: 100%;\n    position: relative;\n\n    .loading-phrase{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 1em;\n      width: 100%;\n      font-size: 1.65em;\n    }\n    mat-spinner{\n      margin-right: 0.5em;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{loadingStage}} {{(loadingProgress / 100) | percent}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRouter\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport {MaterialModule} from './material.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ExtendedModule, FlexModule} from '@angular/flex-layout';\nimport {RouterModule} from '@angular/router';\nimport {AppRouter} from './app.routes';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    MaterialModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexModule,\n    ExtendedModule,\n    RouterModule,\n    AppRouter\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRouter.html":{"url":"modules/AppRouter.html","title":"module - AppRouter","body":"\n                   \n\n\n\n\n    Modules\n    AppRouter\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CanActivate, RouterModule, Routes} from '@angular/router';\nimport {DocumentLoadedGuard} from './guards/document-loaded.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./init/init.module').then(m => m.InitModule)\"\n  },\n  {\n    path: 'map',\n    canActivate: ([DocumentLoadedGuard]),\n    loadChildren: () => \"import('./home/home.module').then(m => m.HomeModule)\"\n  },\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRouter {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppSettings.html":{"url":"interfaces/AppSettings.html","title":"interface - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/settings/settings.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface containing the app settings\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clumpingModifier\n                                \n                                \n                                        distanceModifier\n                                \n                                \n                                        showDeviations\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clumpingModifier\n                                    \n                                \n                                \n                                    \n                                        clumpingModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceModifier\n                                    \n                                \n                                \n                                    \n                                        distanceModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeviations\n                                    \n                                \n                                \n                                    \n                                        showDeviations:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/graph.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, containing the individual components of an RGB color\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        b\n                                \n                                \n                                        g\n                                \n                                \n                                        r\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                    \n                                \n                                \n                                    \n                                        b:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        g\n                                    \n                                \n                                \n                                    \n                                        g:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        r\n                                    \n                                \n                                \n                                    \n                                        r:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color{\n  r: number;\n  g: number;\n  b: number;\n}\n\n/**\n * A normalization function, normalizing between -1 and 1\n * @param value       The value to be normalized\n * @param stiffness   The initial incline of the function\n */\nexport function normalizeDeviation(value: number, stiffness: number = 1): number{\n  return ((1 + value / (1 + Math.abs(value * stiffness))) - 1)  * stiffness;\n}\n\n/**\n * A naive way of color mixing, not taking color compression in mind\n * @param color1    First color to be mixed\n * @param color2    Second color to be mixed\n * @param gradient  The gradient percentage between the two colors\n */\nexport function colorMix(color1: Color, color2: Color, gradient: number): Color {\n  const r = color1.r * (1 - gradient) + color2.r * (gradient);\n  const g = color1.g * (1 - gradient) + color2.g * (gradient);\n  const b = color1.b * (1 - gradient) + color2.b * (gradient);\n  return {r, g, b};\n}\n\n/**\n * A function that decompresses the color value from normal color space\n * @param color The color to be decompressed\n */\nexport function inverseSrgbCompanding(color: Color): Color {\n  let r = color.r / 255;\n  let g = color.g / 255;\n  let b = color.b / 255;\n\n  r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  return {r: r * 255, g: g * 255, b: b * 255};\n}\n\n/**\n * A function that compresses the color value back to normal color space\n * @param color The color to be compressed\n */\nexport function srgbCompanding(color: Color): Color {\n  let r = color.r / 255;\n  let g = color.g / 255;\n  let b = color.b / 255;\n\n  r = (r > 0.0031308) ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;\n  g = (g > 0.0031308) ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;\n  b = (b > 0.0031308) ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;\n\n  return {r: r * 255, g: g * 255, b: b * 255};\n}\n\n/**\n * A color mix of two colors using the sRGB method\n * @param color1    First color to be mixed\n * @param color2    Second color to be mixed\n * @param gradient  The gradient percentage between the two colors\n */\nexport function colorSrgbGradient(color1: Color, color2: Color, gradient: number): Color {\n  const c1 = inverseSrgbCompanding(color1);\n  const c2 = inverseSrgbCompanding(color2);\n\n  return srgbCompanding(colorMix(c1, c2, gradient));\n}\n\n/**\n * Converts a color interface to a hexcode string\n * @param color The color to be converted\n */\nexport function colorToHex(color: Color): string{\n  const r = (color.r >> 0).toString(16);\n  const g = (color.g >> 0).toString(16);\n  const b = (color.b >> 0).toString(16);\n  return `#${(r.length === 2 ? r : '0' + r)}${(g.length === 2 ? g : '0' + g)}${(b.length === 2 ? b : '0' + b)}`;\n}\n\n/**\n * Returns the base 2 logarithm of a number\n * @param n The number to return the logarithm of\n */\nexport function log2(n: number): number{\n  return Math.log2(n);\n}\n\n/**\n * Returns the 2 to the power of the specified number\n * @param n The number to return the 2 to the power of\n */\nexport function pow2(n: number): number{\n  return Math.pow(2, n);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonComponent.html":{"url":"components/ComparisonComponent.html","title":"component - ComparisonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/comparison/comparison.component.ts\n\n\n    \n        Description\n    \n    \n        A component responsible for the user interface for the selection of words which are to be highlighted\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison\n            \n\n            \n                styleUrls\n                ./comparison.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarities\n                            \n                            \n                                entryHoverEvent\n                            \n                            \n                                hoveredWord\n                            \n                            \n                                scrollable\n                            \n                            \n                                selectedWords\n                            \n                            \n                                sortedWordPairsExact\n                            \n                            \n                                sortedWordPairsSoft\n                            \n                            \n                                wordPairs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkOverflow\n                            \n                            \n                                clearWordSelection\n                            \n                            \n                                generateExactPairs\n                            \n                            \n                                generateSoftPairs\n                            \n                            \n                                generateWordPairs\n                            \n                            \n                                handleEntryHover\n                            \n                            \n                                handleWordSelection\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                wordHovered\n                            \n                            \n                                wordsChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService holding the corpus\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        wordHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:40\n                            \n                        \n                \n                    \n                        An event emitter that emits when the user hovers over a word\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wordsChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:36\n                            \n                        \n                \n                    \n                        An event emitter that emits when the word selection has been changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkOverflow\n                        \n                        \n                    \n                \n            \n            \n                \ncheckOverflow(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:137\n                \n            \n\n\n            \n                \n                    Checks whether a given HTML element is overflowing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HTML element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nclearWordSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:168\n                \n            \n\n\n            \n                \n                    Clears the selected words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateExactPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateExactPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:112\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsExact variable with just exact matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateSoftPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateSoftPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:124\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsSoft variable with just soft matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateWordPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateWordPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:102\n                \n            \n\n\n            \n                \n                    Generates the word pairs from the corpus in QueryService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleEntryHover\n                        \n                        \n                    \n                \n            \n            \n                \nhandleEntryHover(word: string, event: EntryHoverEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:178\n                \n            \n\n\n            \n                \n                    Handles when the user hovers over a word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that was hovered on\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                                EntryHoverEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event type, whether it was an entry or leave event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordSelection(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:146\n                \n            \n\n\n            \n                \n                    The event handler of when the word selection changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event holding which word was updated, whether it was checked or not and potentially its soft match\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentSimilarities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:69\n                            \n                        \n\n                \n                    \n                        The similarity between the two selected documents\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryHoverEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EntryHoverEvent\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                        A helper field, making it possible to use enum in the HTML template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:65\n                            \n                        \n\n                \n                    \n                        The currently hovered on word\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:61\n                            \n                        \n\n                \n                    \n                        Holds the information of if an HTML element is scrollable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds the selected words in a hierarchical structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsExact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:49\n                            \n                        \n\n                \n                    \n                        Holds the sorted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsSoft\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:53\n                            \n                        \n\n                \n                    \n                        Holds the sorted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wordPairs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison.component.ts:45\n                            \n                        \n\n                \n                    \n                        Holds the all matched word pairs and their associated weight\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges, EventEmitter, Output} from '@angular/core';\nimport {QueryService} from '../../services/query.service';\nimport {SelectedDocument} from '../sidenav/sidenav.component';\nimport * as queryUtils from '../../utils/query.utils';\n\n/**\n * An enum, specifying the hover event type\n */\nexport enum EntryHoverEvent{\n  Enter, Leave\n}\n\n/**\n * A type, specifying the relation of two matched words\n */\nexport type WordMap = Map>;\n\n/**\n * A component responsible for the user interface for the selection of words which are to be highlighted\n */\n@Component({\n  selector: 'app-comparison',\n  templateUrl: './comparison.component.html',\n  styleUrls: ['./comparison.component.scss']\n})\nexport class ComparisonComponent implements OnInit, OnChanges {\n\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[];\n\n  /**\n   * An event emitter that emits when the word selection has been changed\n   */\n  @Output() wordsChanged = new EventEmitter();\n  /**\n   * An event emitter that emits when the user hovers over a word\n   */\n  @Output() wordHovered = new EventEmitter();\n\n  /**\n   * Holds the all matched word pairs and their associated weight\n   */\n  wordPairs: {[key: string]: number};\n  /**\n   * Holds the sorted exact matches\n   */\n  sortedWordPairsExact: any[];\n  /**\n   * Holds the sorted soft matches\n   */\n  sortedWordPairsSoft: any[];\n  /**\n   * Holds the selected words in a hierarchical structure\n   */\n  selectedWords: WordMap = new Map>();\n  /**\n   * Holds the information of if an HTML element is scrollable\n   */\n  scrollable: {[key: string]: boolean} = {};\n  /**\n   * The currently hovered on word\n   */\n  hoveredWord: string;\n  /**\n   * The similarity between the two selected documents\n   */\n  documentSimilarities: number;\n\n  /**\n   * A helper field, making it possible to use enum in the HTML template\n   */\n  entryHoverEvent = EntryHoverEvent;\n\n  /**\n   * @param queryService  The QueryService holding the corpus\n   */\n  constructor(private queryService: QueryService) {}\n\n  ngOnInit(): void {\n    if (this.selectedDocuments?.length === 2){\n      this.generateWordPairs();\n      const id1 = this.selectedDocuments[0].id;\n      const id2 = this.selectedDocuments[1].id;\n      this.documentSimilarities = this.queryService.getSoftCosineMeasure(id1, id2);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedDocuments){\n      if (changes.selectedDocuments.currentValue.length === 2) {\n        this.generateWordPairs();\n      }\n      this.clearWordSelection();\n    }\n  }\n\n  /**\n   * Generates the word pairs from the corpus in QueryService\n   */\n  generateWordPairs(): void{\n    this.wordPairs = this.queryService.getNormalizedWordImportancePairs(this.selectedDocuments[0].id, this.selectedDocuments[1].id);\n\n    this.generateExactPairs();\n    this.generateSoftPairs();\n  }\n\n  /**\n   * Populates the sortedWordPairsExact variable with just exact matches\n   */\n  generateExactPairs(): void{\n    const exactPairs = queryUtils.getMostImportantExactMatches(this.wordPairs);\n    const items = Object.keys(exactPairs).map((key) => {\n      return [key, exactPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    this.sortedWordPairsExact = items;\n  }\n\n  /**\n   * Populates the sortedWordPairsSoft variable with just soft matches\n   */\n  generateSoftPairs(): void{\n    const softPairs = queryUtils.getMostImportantSoftMatches(this.wordPairs);\n    const items = Object.keys(softPairs).map((key) => {\n      return [key, softPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    this.sortedWordPairsSoft = items;\n  }\n\n  /**\n   * Checks whether a given HTML element is overflowing\n   * @param element   The HTML element\n   */\n  checkOverflow(element: HTMLElement): void {\n    this.scrollable[element.id] = element.offsetHeight ([matchWord]));\n      }\n    } else {\n      if (entry?.size > 1){\n        entry.delete(matchWord);\n      } else {\n        this.selectedWords.delete(e.word);\n      }\n    }\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Clears the selected words\n   */\n  clearWordSelection(): void{\n    this.selectedWords.clear();\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Handles when the user hovers over a word\n   * @param word  The word that was hovered on\n   * @param event The event type, whether it was an entry or leave event\n   */\n  handleEntryHover(word: string, event: EntryHoverEvent): void{\n    const prevWord = this.hoveredWord;\n    if (event === EntryHoverEvent.Enter){\n      this.hoveredWord = word;\n    } else if (this.hoveredWord === word){\n      this.hoveredWord = undefined;\n    }\n    if (prevWord !== this.hoveredWord){\n      this.wordHovered.emit(this.hoveredWord);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Exact matches\n    \n      \n        \n      \n      No hard matches\n    \n    \n  \n  \n    Soft matches\n    \n      \n        \n      \n      No soft matches\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./comparison.component.scss\n                \n                .comparison-wrapper{\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  padding-top: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 100%;\n  .matches-exact, .matches-soft{\n    width: 50%;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    h2{\n      margin: 0 1em 0.5em 1em;\n    }\n  }\n  .comparison-matches {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow: auto;\n    padding: 0 1em;\n    position: relative;\n\n    ::ng-deep {\n      app-comparison-entry {\n        border-radius: 5px;\n        padding: 0 1em;\n        margin-bottom: 1px;\n        &:nth-child(odd){\n          background-color: #fafafa;\n        }\n        &:nth-child(even){\n          background-color: #eeeeee;\n        }\n\n        .mat-checkbox-layout .mat-checkbox-label{\n          overflow: hidden;\n          text-overflow: ellipsis;\n          width: 100px;\n          line-height: 1.4;\n        }\n      }\n    }\n  }\n\n  .matches-fade{\n    position: absolute;\n    bottom: 0;\n    left: 1em;\n    right: 2em;\n    height: 1px;\n    background: #fff;\n    box-shadow: 0 -4px 15px 12px #fff;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Exact matches                              No hard matches                Soft matches                              No soft matches          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonEntryComponent.html":{"url":"components/ComparisonEntryComponent.html","title":"component - ComparisonEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/comparison/comparison-entry/comparison-entry.component.ts\n\n\n    \n        Description\n    \n    \n        The individual word entry, containing the UI and logic for one word\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison-entry\n            \n\n            \n                styleUrls\n                ./comparison-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBarWidth\n                            \n                            \n                                handleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarity\n                            \n                            \n                                softMatch\n                            \n                            \n                                weight\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentSimilarity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:25\n                            \n                        \n                \n                    \n                        The total cosine similarity of the two compared documents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        softMatch\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:29\n                            \n                        \n                \n                    \n                        The soft match this word has\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:21\n                            \n                        \n                \n                    \n                        The weight of the current word match in the document comparison\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        word\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:17\n                            \n                        \n                \n                    \n                        The word this entry is bound to\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:34\n                            \n                        \n                \n                    \n                        The event emitter, emitting when the user has selected this word\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBarWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetBarWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:39\n                \n            \n\n\n            \n                \n                    Calculates the bar width percentage\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleChange(e: MatCheckboxChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/comparison/comparison-entry/comparison-entry.component.ts:47\n                \n            \n\n\n            \n                \n                    An event handler, handling when the checkmark is checked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The checkbox event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\n\n/**\n * The individual word entry, containing the UI and logic for one word\n */\n@Component({\n  selector: 'app-comparison-entry',\n  templateUrl: './comparison-entry.component.html',\n  styleUrls: ['./comparison-entry.component.scss']\n})\nexport class ComparisonEntryComponent {\n\n  /**\n   * The word this entry is bound to\n   */\n  @Input() word: string;\n  /**\n   * The weight of the current word match in the document comparison\n   */\n  @Input() weight: number;\n  /**\n   * The total cosine similarity of the two compared documents\n   */\n  @Input() documentSimilarity: number;\n  /**\n   * The soft match this word has\n   */\n  @Input() softMatch: string;\n\n  /**\n   * The event emitter, emitting when the user has selected this word\n   */\n  @Output() selectedChange = new EventEmitter();\n\n  /**\n   * Calculates the bar width percentage\n   */\n  getBarWidth(): number{\n    return this.weight / this.documentSimilarity;\n  }\n\n  /**\n   * An event handler, handling when the checkmark is checked\n   * @param e The checkbox event\n   */\n  handleChange(e: MatCheckboxChange): void{\n    this.selectedChange.emit({ word: this.word, checked: e.checked, softMatch: this.softMatch});\n  }\n}\n\n    \n\n    \n        \n  {{word}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n\n  {{word}}{{softMatch}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n    \n\n    \n                \n                    ./comparison-entry.component.scss\n                \n                @import \"../../../../variables\";\n\n.comparison-entry{\n  padding: 0.25em 0;\n  display: flex;\n  align-items: center;\n  justify-content: stretch;\n}\n\n.word-wrapper{\n  flex-shrink: 0;\n  width: 120px;\n  margin-right: 1em;\n}\n\n.bar-wrapper{\n  flex-grow: 1;\n  width: 100%;\n  height: 1em;\n  margin-right: 3em;\n}\n\n.bar{\n  height: 100%;\n  background: map-get($color, primary);\n  border-radius: 2px;\n  position: relative;\n\n  span{\n    color: rgba(0, 0, 0, 0.7);\n    position: absolute;\n    right: -4em;\n    line-height: 1em;\n    font-size: 0.9em;\n    top: calc(50% - 0.4em);\n    display: block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{word}}  {{getBarWidth() | percent:\\'.2\\'}}  {{word}}{{softMatch}}  {{getBarWidth() | percent:\\'.2\\'}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Corpus.html":{"url":"interfaces/Corpus.html","title":"interface - Corpus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Corpus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                The main corpus interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        results\n                                \n                                \n                                        texts\n                                \n                                \n                                        texts_bow\n                                \n                                \n                                        version\n                                \n                                \n                                        word_similarities\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                    \n                                \n                                \n                                    \n                                        texts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts_bow\n                                    \n                                \n                                \n                                    \n                                        texts_bow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        word_similarities\n                                    \n                                \n                                \n                                    \n                                        word_similarities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentComponent.html":{"url":"components/DocumentComponent.html","title":"component - DocumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document.component.ts\n\n\n    \n        Description\n    \n    \n        The displayed document component, showing the documents text\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document\n            \n\n            \n                styleUrls\n                ./document.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        document\n                    \n                \n                \n                    \n                        Type :         SelectedDocument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:18\n                            \n                        \n                \n                    \n                        The bound displayed document to this component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:22\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:30\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:34\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {SelectedDocument} from '../sidenav.component';\nimport {WordMap} from '../../comparison/comparison.component';\n\n/**\n * The displayed document component, showing the documents text\n */\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent {\n\n  /**\n   * The bound displayed document to this component\n   */\n  @Input() document: SelectedDocument;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: Set;\n  /**\n   * The current WordMap containing the relations of matches\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n\n}\n\n    \n\n    \n        \n  \n    {{document.title}}\n    {{document.subtitle}}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./document.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{document.title}}    {{document.subtitle}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentContentComponent.html":{"url":"components/DocumentContentComponent.html","title":"component - DocumentContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document-content/document-content.component.ts\n\n\n    \n        Description\n    \n    \n        The content of a document, showing the actual text of the document and the highlights\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-content\n            \n\n            \n                styleUrls\n                ./document-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                convertedContent\n                            \n                            \n                                    Public\n                                escapeHtml\n                            \n                            \n                                    Public\n                                splitUpPipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedContent\n                            \n                            \n                                getReversedWordMap\n                            \n                            \n                                isWordLowlighted\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(escapeHtml: EscapeHtmlPipe, splitUpPipe: SplitUpPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        escapeHtml\n                                                  \n                                                        \n                                                                    EscapeHtmlPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pipe, responsible for converting text to HTML safe text\n\n                                                        \n                                                \n                                                \n                                                        splitUpPipe\n                                                  \n                                                        \n                                                                    SplitUpPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A pipe, splitting up the pairs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:22\n                            \n                        \n                \n                    \n                        The text of the document\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:30\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:34\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matched words\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:38\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:103\n                \n            \n\n\n            \n                \n                    Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReversedWordMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetReversedWordMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:67\n                \n            \n\n\n            \n                \n                    Gets the reversed WordMap, mapping child words to their parent words\n\n\n                    \n                        Returns :         WordMap\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isWordLowlighted\n                        \n                        \n                    \n                \n            \n            \n                \nisWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:89\n                \n            \n\n\n            \n                \n                    Determines whether a word should be marked as lowlighted, making it less visible in the document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that's being evaluated\n\n                                    \n                                \n                                \n                                    hoveredWord\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The currently hovered on word\n\n                                    \n                                \n                                \n                                    words\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The set, containing all the matched words\n\n                                    \n                                \n                                \n                                    reversedWordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reversed WordMap\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertedContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:43\n                            \n                        \n\n                \n                    \n                        The HTML safe content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            escapeHtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EscapeHtmlPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:50\n                            \n                        \n\n                \n                    \n                        The pipe, responsible for converting text to HTML safe text\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splitUpPipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SplitUpPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:51\n                            \n                        \n\n                \n                    \n                        A pipe, splitting up the pairs\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {EscapeHtmlPipe} from '../../../../pipes/escape-html.pipe';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport {WordMap} from '../../../comparison/comparison.component';\nimport {pairSeparator, valueChanged} from '../../../../utils/various.utils';\nimport {SplitUpPipe} from '../../../../pipes/pair-split.pipe';\n\n/**\n * The content of a document, showing the actual text of the document and the highlights\n */\n@Component({\n  selector: 'app-document-content',\n  templateUrl: './document-content.component.html',\n  styleUrls: ['./document-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocumentContentComponent implements OnInit, OnChanges {\n\n  /**\n   * The text of the document\n   */\n  @Input() content: string;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: Set;\n  /**\n   * The current WordMap containing the relations of matched words\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n\n  /**\n   * The HTML safe content\n   */\n  convertedContent: string;\n\n  /**\n   * @param escapeHtml  The pipe, responsible for converting text to HTML safe text\n   * @param splitUpPipe A pipe, splitting up the pairs\n   */\n  constructor(\n    public escapeHtml: EscapeHtmlPipe,\n    public splitUpPipe: SplitUpPipe\n  ) { }\n\n  ngOnInit(): void {\n    this.convertedContent = this.getFormattedContent();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (valueChanged(changes?.highlightedWords)){\n      this.convertedContent = this.getFormattedContent();\n    }\n  }\n\n  /**\n   * Gets the reversed WordMap, mapping child words to their parent words\n   */\n  getReversedWordMap(): WordMap{\n    const entries = this.highlightedWordMap.entries();\n    const out = new Map>();\n    for (const [parent, set] of entries){\n      for (const match of set){\n        if (out.has(match)){\n          out.get(match).add(parent);\n        } else {\n          out.set(match, new Set([parent]));\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * Determines whether a word should be marked as lowlighted, making it less visible in the document\n   * @param word              The word that's being evaluated\n   * @param hoveredWord       The currently hovered on word\n   * @param words             The set, containing all the matched words\n   * @param reversedWordMap   The reversed WordMap\n   */\n  isWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap): boolean{\n    if (!hoveredWord){\n      return false;\n    }\n    if (hoveredWord.includes(pairSeparator)){\n      const [w1, w2] = this.splitUpPipe.transform(hoveredWord);\n      return (words.has(w1) || words.has(w2)) && !(word === w1 || word === w2);\n    }\n    return words.has(hoveredWord) && !(hoveredWord === word || reversedWordMap.get(word)?.has(hoveredWord));\n  }\n\n  /**\n   * Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n   */\n  getFormattedContent(): string{\n    const allWords = new Set([...this.highlightedSoftMatches, ...this.highlightedExactMatches]);\n    let content = this.escapeHtml.transform(this.content);\n    const reversedWordMap = this.getReversedWordMap();\n    for (const word of allWords){\n      const escapedWord = this.escapeHtml.transform(word);\n      const re = new RegExp(`(?${escapedWord}`);\n    }\n    return content;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./document-content.component.scss\n                \n                @import '../../../../../variables';\n\n$highlight: map-get($color, secondary);\n$soft-highlight: map-get($color, tertiary);\n$lowlight: map-get($color, lowlight);\n\np{\n  $hovered-word: attr(data-hovered);\n  font-style: italic;\n  word-spacing: 2px;\n  line-height: 1.65;\n\n  ::ng-deep .highlight{\n    background-color: $highlight;\n    box-shadow: -2px 0px 2px 0px $highlight, 2px 0px 2px 0px $highlight;\n  }\n\n  ::ng-deep .lowlight{\n    background-color: $lowlight;\n    box-shadow: -2px 0px 2px 0px $lowlight, 2px 0px 2px 0px $lowlight;\n  }\n\n  ::ng-deep .highlight.soft{\n    background-color: $soft-highlight;\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n\n  ::ng-deep .highlight.both{\n    background-color: linear-gradient(45deg, $soft-highlight 0%, $soft-highlight 50%, $highlight 50%, $highlight 50%);\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DocumentLoadedGuard.html":{"url":"guards/DocumentLoadedGuard.html","title":"guard - DocumentLoadedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    DocumentLoadedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/document-loaded.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents a route from happening unless a corpus is loaded within the QueryService\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/document-loaded.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The query service where the corpus is located\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router used for navigating to homepage if document is not loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/document-loaded.guard.ts:26\n                \n            \n\n\n            \n                \n                    Returns an observable that returns a boolean whether a corpus is present in the QueryService\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {QueryService} from '../services/query.service';\nimport {map} from 'rxjs/operators';\n\n/**\n * Prevents a route from happening unless a corpus is loaded within the QueryService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentLoadedGuard implements CanActivate {\n  /**\n   * @param queryService  The query service where the corpus is located\n   * @param router        The router used for navigating to homepage if document is not loaded\n   */\n  constructor(\n    private queryService: QueryService,\n    private router: Router\n  ) {}\n\n  /**\n   * Returns an observable that returns a boolean whether a corpus is present in the QueryService\n   */\n  canActivate(): Observable {\n    return this.queryService.currentCorpus\n      .pipe(map((corpus) => {\n        if (corpus !== undefined){\n          return true;\n        }\n        this.router.navigate(['']);\n        return false;\n      }));\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/escape-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe that replaces the HTML special characters\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        escapeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/escape-html.pipe.ts:14\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be transformed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * A pipe that replaces the HTML special characters\n */\n@Pipe({\n  name: 'escapeHtml'\n})\nexport class EscapeHtmlPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param text  The text to be transformed\n   */\n  transform(text: string): string {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(//g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        links\n                                \n                                \n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         GraphLink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphLink[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         GraphNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphLink.html":{"url":"interfaces/GraphLink.html","title":"interface - GraphLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphNode.html":{"url":"interfaces/GraphNode.html","title":"interface - GraphNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fx\n                                \n                                \n                                            Optional\n                                        fy\n                                \n                                \n                                        group\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                            Optional\n                                        vx\n                                \n                                \n                                            Optional\n                                        vy\n                                \n                                \n                                            Optional\n                                        x\n                                \n                                \n                                            Optional\n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fx\n                                    \n                                \n                                \n                                    \n                                        fx:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fy\n                                    \n                                \n                                \n                                    \n                                        fy:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vx\n                                    \n                                \n                                \n                                    \n                                        vx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vy\n                                    \n                                \n                                \n                                    \n                                        vy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  dictionary: {[key: string]: string};\n  results: {[key: string]: string[]};\n  texts: {[key: string]: string[]};\n  texts_bow: {[key: string]: {[key: string]: number}};\n  version: string;\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  id: string;\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  source: string;\n  target: string;\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  nodes: GraphNode[];\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  if (id1 === id2) {\n    return 1.0;\n  }\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two word ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one word id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  for (let i = 0; i  getWord(word, corpus));\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        continue;\n      }\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  for (const id of keys){\n    const ids = id.split(pairSeparator);\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    let i = 0;\n    for (const [id, docs] of entries){\n      subscriber.next({progress: (i / entries.length) * 100});\n      const node = {id, group: 1};\n      nodes.push(node);\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ComparisonComponent\n                        \n                        \n                            ComparisonEntryComponent\n                        \n                        \n                            DocumentComponent\n                        \n                        \n                            DocumentContentComponent\n                        \n                        \n                            GraphComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SidenavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HomeRoutes } from './home.routes';\nimport { GraphComponent } from './graph/graph.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { ComparisonComponent } from './comparison/comparison.component';\nimport { ComparisonEntryComponent } from './comparison/comparison-entry/comparison-entry.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport {AngularResizedEventModule} from 'angular-resize-event';\nimport { DocumentComponent } from './sidenav/document/document.component';\nimport { DocumentContentComponent } from './sidenav/document/document-content/document-content.component';\nimport {PipesModule} from '../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    GraphComponent,\n    SidenavComponent,\n    ComparisonComponent,\n    ComparisonEntryComponent,\n    SettingsComponent,\n    DocumentComponent,\n    DocumentContentComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularResizedEventModule,\n    PipesModule,\n    HomeRoutes\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutes.html":{"url":"modules/HomeRoutes.html","title":"module - HomeRoutes","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class HomeRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InitComponent.html":{"url":"components/InitComponent.html","title":"component - InitComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InitComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/init/init.component.ts\n\n\n    \n        Description\n    \n    \n        The initial welcoming component of the application, asking for the corpus to be inserted\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-init\n            \n\n            \n                styleUrls\n                ./init.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./init.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                insertedText\n                            \n                            \n                                insertingText\n                            \n                            \n                                jsonFile\n                            \n                            \n                                jsonTextarea\n                            \n                            \n                                validating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                            \n                                handleFileUpload\n                            \n                            \n                                handleTextUpload\n                            \n                            \n                                loadExample\n                            \n                            \n                                setQuery\n                            \n                            \n                                validateAndParse\n                            \n                            \n                                validateText\n                            \n                            \n                                validateUploadedFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, jsonValidateService: JsonValidateService, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService used to store the corpus once loaded\n\n                                                        \n                                                \n                                                \n                                                        jsonValidateService\n                                                  \n                                                        \n                                                                        JsonValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The validation service used to validate the inserted file/text\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar, showing error messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router responsible for the navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayError\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayError(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:91\n                \n            \n\n\n            \n                \n                    A function displaying an error message in the snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFileUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFileUpload(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:70\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating the inserted file and sending it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTextUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTextUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:56\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating and setting the inserted text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadExample\n                        \n                        \n                    \n                \n            \n            \n                \nloadExample()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:161\n                \n            \n\n\n            \n                \n                    Loads the example document\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsetQuery(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:153\n                \n            \n\n\n            \n                \n                    Sets the processed corpus to QueryService\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus that will be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAndParse\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAndParse(text: string, resolve: any, reject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:132\n                \n            \n\n\n            \n                \n                    The validation and parsing wrapper of a given text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be validated\n\n                                    \n                                \n                                \n                                    resolve\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if successful\n\n                                    \n                                \n                                \n                                    reject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if unsuccessful\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateText\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:107\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted text\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateUploadedFile\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateUploadedFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:116\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted file\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertedText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:25\n                            \n                        \n\n                \n                    \n                        A value, holding the inserted text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertingText\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:21\n                            \n                        \n\n                \n                    \n                        A flag, saying whether has selected to enter JSON as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:29\n                            \n                        \n\n                \n                    \n                        The file inserted in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonTextarea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTextAreaElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('jsonTextarea')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                        The reference to the textarea when inserting the corpus as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:33\n                            \n                        \n\n                \n                    \n                        A flag, specifying whether the validation service is currently validating the file/text\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {JsonValidateService} from '../services/json-validate.service';\nimport {QueryService} from '../services/query.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as exampleDocument from '../../assets/example.json';\nimport {Router} from '@angular/router';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The initial welcoming component of the application, asking for the corpus to be inserted\n */\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.component.html',\n  styleUrls: ['./init.component.scss']\n})\nexport class InitComponent {\n  /**\n   * A flag, saying whether has selected to enter JSON as text\n   */\n  insertingText = false;\n  /**\n   * A value, holding the inserted text\n   */\n  insertedText: string;\n  /**\n   * The file inserted in\n   */\n  jsonFile: File;\n  /**\n   * A flag, specifying whether the validation service is currently validating the file/text\n   */\n  validating: boolean;\n\n  /**\n   * The reference to the textarea when inserting the corpus as text\n   */\n  @ViewChild('jsonTextarea') jsonTextarea: HTMLTextAreaElement;\n\n  /**\n   * @param queryService          The QueryService used to store the corpus once loaded\n   * @param jsonValidateService   The validation service used to validate the inserted file/text\n   * @param snackBar              The snackbar, showing error messages\n   * @param router                The router responsible for the navigation\n   */\n  constructor(\n    private queryService: QueryService,\n    private jsonValidateService: JsonValidateService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * The event handler function responsible for validating and setting the inserted text\n   */\n  handleTextUpload(): void{\n    this.validating = true;\n    this.validateText().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * The event handler function responsible for validating the inserted file and sending it\n   * @param e The input change event\n   */\n  handleFileUpload(e: any): void{\n    this.validating = true;\n\n    const files = e?.target?.files;\n    if (files?.length !== 1) {\n      return;\n    }\n    this.jsonFile = files[0];\n\n    this.validateUploadedFile().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * A function displaying an error message in the snackbar\n   * @param msg The message to be displayed\n   */\n  displayError(msg: string): void{\n    this.jsonFile = undefined;\n    this.validating = false;\n    this.snackBar.open(\n      msg,\n      '',\n      {\n        panelClass: ['red-snackbar'],\n        duration: 5000\n      }\n    );\n  }\n\n  /**\n   * A promise responsible for validating the inserted text\n   */\n  validateText(): Promise{\n    return new Promise((resolve, reject) => {\n      this.validateAndParse(this.insertedText, resolve, reject);\n    });\n  }\n\n  /**\n   * A promise responsible for validating the inserted file\n   */\n  validateUploadedFile(): Promise{\n   return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsBinaryString(this.jsonFile);\n      fileReader.onloadend = () => {\n        this.validateAndParse(fileReader.result as string, resolve, reject);\n      };\n    });\n  }\n\n  /**\n   * The validation and parsing wrapper of a given text\n   * @param text    The text to be validated\n   * @param resolve The function to be called if successful\n   * @param reject  The function to be called if unsuccessful\n   */\n  validateAndParse(text: string, resolve: any, reject: any): void{\n    if (text) {\n      try{\n        const parsed = JSON.parse(text);\n        if (this.jsonValidateService.validateCorpus(parsed)){\n          resolve(parsed);\n        } else {\n          reject();\n        }\n      } catch (e) {\n        reject(e);\n      }\n    } else {\n      reject();\n    }\n  }\n\n  /**\n   * Sets the processed corpus to QueryService\n   * @param corpus  The corpus that will be set\n   */\n  setQuery(corpus: Corpus): void{\n    this.queryService.setCorpus(corpus);\n    this.router.navigate(['/map']);\n  }\n\n  /**\n   * Loads the example document\n   */\n  loadExample(): void{\n    this.setQuery((exampleDocument as any).default);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Document maps\n      visualization tool for semantic document representations\n      \n        This tool will allow you to explore the similarities of a data set of documents/texts,\n        showing you why documents are similar, what words they have in common and what's their respective weights\n      \n      \n        You can either import a valid JSON file containing the corpus data or enter the JSON by hand.\n        If you just wish to explore the tool, you can use the attached example corpus.\n      \n      \n        This tool is open-source and the source code is available on GitHub.\n        If you wish to read the documentation of this tool it is available here.\n      \n    \n    \n      file_uploadInsert corpus as file\n      wysiwygInsert corpus as JSON text\n    \n    \n      OR\n      description&nbsp;Use the example corpus\n    \n    \n      \n        arrow_backBack\n      \n      \n        Insert JSON\n        \n      \n      \n        file_uploadUpload\n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./init.component.scss\n                \n                .init-wrapper{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"../../../src/assets/background.jpg\");\n  background-position: center center;\n  background-size: cover;\n  width: 100%;\n  height: 100%;\n\n  .init-content{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 600px;\n    background: #fff;\n    border-radius: 5px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n    padding: 2em;\n    position: relative;\n    overflow: hidden;\n\n    .init-preface{\n      h1{\n        margin-bottom: 0;\n      }\n      padding-bottom: 1em;\n    }\n\n    .init-buttons{\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n      align-items: center;\n\n      button{\n        width: calc(50% - 0.5em);\n        height: 10em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        ::ng-deep .mat-button-wrapper {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n\n          >span{\n            display: block;\n          }\n        }\n\n        mat-icon{\n          $size: 96px;\n          font-size: $size;\n          height: $size;\n          width: $size;\n          line-height: $size;\n        }\n      }\n    }\n\n    .init-example{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n\n      .separator{\n        margin: 1em 0;\n      }\n    }\n\n    .loading{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      z-index: 1;\n      background-color: rgba(0, 0, 0, 0.25);\n      width: 100%;\n      height: 100%;\n\n      ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {\n        stroke: #fff;\n      }\n    }\n\n    .init-insert-text{\n      position: relative;\n      width: 100%;\n      min-height: 140px;\n\n      .navigate-back{\n        position: absolute;\n        top: -1em;\n        left: -1em;\n      }\n\n      .json-form{\n        width: 100%;\n        min-height: 140px;\n        margin-top: 24px;\n\n        textarea{\n          height: 393px;\n          max-height: calc(100vh - 12em);\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document maps      visualization tool for semantic document representations              This tool will allow you to explore the similarities of a data set of documents/texts,        showing you why documents are similar, what words they have in common and what\\'s their respective weights                    You can either import a valid JSON file containing the corpus data or enter the JSON by hand.        If you just wish to explore the tool, you can use the attached example corpus.                    This tool is open-source and the source code is available on GitHub.        If you wish to read the documentation of this tool it is available here.                    file_uploadInsert corpus as file      wysiwygInsert corpus as JSON text              OR      description Use the example corpus                      arrow_backBack                    Insert JSON                            file_uploadUpload                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InitComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitModule.html":{"url":"modules/InitModule.html","title":"module - InitModule","body":"\n                   \n\n\n\n\n    Modules\n    InitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InitModule\n\n\n\ncluster_InitModule_imports\n\n\n\ncluster_InitModule_declarations\n\n\n\n\nInitComponent\n\nInitComponent\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InitComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InitRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InitComponent } from './init.component';\nimport {InitRoutes} from './init.routes';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    InitComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    InitRoutes,\n    FormsModule,\n  ]\n})\nexport class InitModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitRoutes.html":{"url":"modules/InitRoutes.html","title":"module - InitRoutes","body":"\n                   \n\n\n\n\n    Modules\n    InitRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {InitComponent} from './init.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InitComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class InitRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonValidateService.html":{"url":"injectables/JsonValidateService.html","title":"injectable - JsonValidateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonValidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-validate.service.ts\n        \n\n            \n                Description\n            \n            \n                The validation service, validating a parsed JSON file\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCorpus(corpus: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/json-validate.service.ts:87\n                \n            \n\n\n            \n                \n                    The validation function of a corpus\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Ajv, {JSONSchemaType} from 'ajv';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The schema used to validate the parsed JSON\n */\n// @ts-ignore\nconst searchQuerySchema: JSONSchemaType = {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n};\n\n/**\n * The validation service, validating a parsed JSON file\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonValidateService {\n  /**\n   * The validation function of a corpus\n   * @param corpus  The corpus to be validated\n   */\n  validateCorpus(corpus: {}): boolean{\n    const ajv = new Ajv();\n    const validate = ajv.compile(searchQuerySchema);\n    try{\n      return validate(corpus);\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n            \n                Description\n            \n            \n                The service, responsible for passing the progress of long function to other components\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                isLoadingSource\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                    Private\n                                loadingProgressSource\n                            \n                            \n                                loadingStage\n                            \n                            \n                                    Private\n                                loadingStageSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsLoading\n                            \n                            \n                                setLoadingProgress\n                            \n                            \n                                setLoadingStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:46\n                \n            \n\n\n            \n                \n                    A setter for the isLoading value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingProgress\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingProgress(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:54\n                \n            \n\n\n            \n                \n                    A setter for the loadingProgress value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingStage\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingStage(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:62\n                \n            \n\n\n            \n                \n                    A setter for the loadingStage value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.isLoadingSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:20\n                            \n                        \n\n                \n                    \n                        The observable generated from isLoadingSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isLoadingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:16\n                            \n                        \n\n                \n                    \n                        The subject which stores the value, if something is currently loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingProgressSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:30\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingProgressSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingProgressSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:26\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current progress percentage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingStageSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:40\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingStageSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingStageSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:36\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current loading stage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * The service, responsible for passing the progress of long function to other components\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  /**\n   * The subject which stores the value, if something is currently loading\n   * @private\n   */\n  private isLoadingSource = new BehaviorSubject(false);\n  /**\n   * The observable generated from isLoadingSource\n   */\n  isLoading = this.isLoadingSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current progress percentage\n   * @private\n   */\n  private loadingProgressSource = new BehaviorSubject(0);\n  /**\n   * The observable generated from loadingProgressSource\n   */\n  loadingProgress = this.loadingProgressSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current loading stage\n   * @private\n   */\n  private loadingStageSource = new BehaviorSubject('');\n  /**\n   * The observable generated from loadingStageSource\n   */\n  loadingStage = this.loadingStageSource.asObservable();\n\n  /**\n   * A setter for the isLoading value\n   * @param value The value to be set\n   */\n  setIsLoading(value: boolean): void{\n    this.isLoadingSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingProgress value\n   * @param value The value to be set\n   */\n  setLoadingProgress(value: number): void{\n    this.loadingProgressSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingStage value\n   * @param value The value to be set\n   */\n  setLoadingStage(value: string): void{\n    this.loadingStageSource.next(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipsModule} from '@angular/material/chips';\n\nconst modules = [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [...modules],\n  exports: [...modules]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitFirstPipe.html":{"url":"pipes/PairSplitFirstPipe.html","title":"pipe - PairSplitFirstPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitFirstPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the first one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        first\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:16\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitSecondPipe.html":{"url":"pipes/PairSplitSecondPipe.html","title":"pipe - PairSplitSecondPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitSecondPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the second one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        second\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:33\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairUpPipe.html":{"url":"pipes/PairUpPipe.html","title":"pipe - PairUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that pairs up two values using a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pairUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(str1: string, str2: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:51\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    str1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The first string to be paired up\n\n                                    \n                                \n                                \n                                    str2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The second string to be paired up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator put between the two strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EscapeHtmlPipe } from './escape-html.pipe';\nimport {PairSplitFirstPipe, PairSplitSecondPipe, PairUpPipe, SplitUpPipe} from './pair-split.pipe';\n\n\n@NgModule({\n  declarations: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  exports: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  providers: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/query.service.ts\n        \n\n            \n                Description\n            \n            \n                The query service, responsible for querying on and operating with the corpus while also the corpus itself\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                corpusSource\n                            \n                            \n                                currentCorpus\n                            \n                            \n                                    Readonly\n                                worker\n                            \n                            \n                                    Private\n                                workerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDocumentText\n                            \n                            \n                                getNormalizedWordImportancePairs\n                            \n                            \n                                getSimilarity\n                            \n                            \n                                getSimilarityWord\n                            \n                            \n                                getSoftCosineMeasure\n                            \n                            \n                                getWord\n                            \n                            \n                                getWordId\n                            \n                            \n                                initGraphData\n                            \n                            \n                                innerProduct\n                            \n                            \n                                innerProductSingle\n                            \n                            \n                                setCorpus\n                            \n                            \n                                softCosineMeasureNorm\n                            \n                            \n                                    Private\n                                usedCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                            A constructor, initializing the worker\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The loading service, handling the progress reports\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocumentText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocumentText(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:151\n                \n            \n\n\n            \n                \n                    Returns the document text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNormalizedWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:161\n                \n            \n\n\n            \n                \n                    Returns the normalized pairs of word importances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarity\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarity(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:93\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first id to compare\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second id to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarityWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarityWord(word1: string, word2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:103\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two words\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first word to compare\n\n                                    \n                                \n                                \n                                    word2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second word to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSoftCosineMeasure\n                        \n                        \n                    \n                \n            \n            \n                \ngetSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:142\n                \n            \n\n\n            \n                \n                    Returns the soft cosine measure of two texts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetWord(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns the word from dictionary of a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to retrieve the word of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordId\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordId(word: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:74\n                \n            \n\n\n            \n                \n                    Returns the ID of a given word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word to retrieve the id of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initGraphData\n                        \n                        \n                    \n                \n            \n            \n                \ninitGraphData(corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:169\n                \n            \n\n\n            \n                \n                    Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProduct\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProduct(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:113\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarities of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProductSingle\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProductSingle(id, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:122\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarity of one word id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nsetCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:53\n                \n            \n\n\n            \n                \n                    A setter for the corpus value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softCosineMeasureNorm\n                        \n                        \n                    \n                \n            \n            \n                \nsoftCosineMeasureNorm(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:132\n                \n            \n\n\n            \n                \n                    Returns the soft cosine normalization of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            usedCorpus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    usedCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:62\n                \n            \n\n\n            \n                \n                    A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Corpus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            corpusSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:19\n                            \n                        \n\n                \n                    \n                        The subject storing the corpus itself\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCorpus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.corpusSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:23\n                            \n                        \n\n                \n                    \n                        The observable generated from corpusSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            worker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Worker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:28\n                            \n                        \n\n                \n                    \n                        The worker, eventually responsible for generating the initial GraphData\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workerData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                        The stored data from passed from the worker\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {LoadingService} from './loading.service';\nimport * as queryUtils from '../utils/query.utils';\nimport {GraphData, Corpus} from '../utils/query.utils';\nimport {filter, map, tap} from 'rxjs/operators';\n\n/**\n * The query service, responsible for querying on and operating with the corpus while also the corpus itself\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n  /**\n   * The subject storing the corpus itself\n   * @private\n   */\n  private corpusSource = new BehaviorSubject(undefined);\n  /**\n   * The observable generated from corpusSource\n   */\n  currentCorpus = this.corpusSource.asObservable();\n\n  /**\n   * The worker, eventually responsible for generating the initial GraphData\n   */\n  readonly worker: Worker;\n\n  /**\n   * The stored data from passed from the worker\n   * @private\n   */\n  private workerData = new Subject();\n\n  /**\n   * A constructor, initializing the worker\n   * @param loadingService  The loading service, handling the progress reports\n   */\n  constructor(private loadingService: LoadingService) {\n    if (typeof Worker !== 'undefined'){\n      this.worker = new Worker('../workers/graph-data.worker', { type: 'module' });\n      this.worker.onmessage = ({ data }) => {\n        this.workerData.next(data);\n      };\n    }\n  }\n\n  /**\n   * A setter for the corpus value\n   * @param corpus  The corpus to be set\n   */\n  setCorpus(corpus: Corpus): void{\n    this.corpusSource.next(corpus);\n  }\n\n  /**\n   * A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n   * @param corpus  The corpus to be checked\n   * @private\n   */\n  private usedCorpus(corpus: Corpus): Corpus{\n    if (!corpus && !this.corpusSource.getValue()){\n      return undefined;\n    }\n    return corpus ? corpus : this.corpusSource.getValue();\n  }\n\n  /**\n   * Returns the ID of a given word\n   * @param word    The word to retrieve the id of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWordId(word: string, corpus?: Corpus): string {\n    return queryUtils.getWordId(word, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the word from dictionary of a given id\n   * @param id      The id to retrieve the word of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWord(id: string, corpus?: Corpus): string {\n   return queryUtils.getWord(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two word ids\n   * @param id1     The first id to compare\n   * @param id2     The second id to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarity(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSimilarity(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two words\n   * @param word1   The first word to compare\n   * @param word2   The second word to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarityWord(word1: string, word2: string, corpus?: Corpus): number{\n    return queryUtils.getSimilarityWord(word1, word2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarities of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProduct(id1, id2, corpus?: Corpus): number{\n    return queryUtils.innerProduct(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarity of one word id\n   * @param id      The text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProductSingle(id, corpus?: Corpus): number {\n    return queryUtils.innerProductSingle(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine normalization of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  softCosineMeasureNorm(id1, id2, corpus?: Corpus): number{\n    return queryUtils.softCosineMeasureNorm(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine measure of two texts\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSoftCosineMeasure(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the document text\n   * @param id      The first text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getDocumentText(id: string, corpus?: Corpus): string{\n    return queryUtils.getDocumentText(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the normalized pairs of word importances\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus): {[key: string]: number}{\n    return queryUtils.getNormalizedWordImportancePairs(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  initGraphData(corpus?: Corpus): Observable{\n    this.loadingService.setIsLoading(true);\n    const observable = this.workerData.asObservable()\n      .pipe(\n        tap(progress => {\n          this.loadingService.setLoadingStage(progress.stage);\n          this.loadingService.setLoadingProgress(progress.value);\n        }),\n        filter(data => data.data),\n        map(data => {\n          this.loadingService.setIsLoading(false);\n          return data.data;\n        })\n      );\n    this.worker.postMessage({query: this.usedCorpus(corpus)});\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedDocument.html":{"url":"interfaces/SelectedDocument.html","title":"interface - SelectedDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/sidenav/sidenav.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a displayed document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        subtitle\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from '../comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches = new Set();\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    this.highlightedExactMatches = new Set(wordMap.keys());\n    const softMatches = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), [])\n      .filter(a => !this.highlightedExactMatches.has(a));\n    this.highlightedSoftMatches = new Set(softMatches);\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = new Set();\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        The component containing the user interface for the settings menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSetting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                settingsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         AppSettings\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/settings/settings.component.ts:26\n                            \n                        \n                \n                    \n                        The current app settings\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        settingsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/settings/settings.component.ts:30\n                            \n                        \n                \n                    \n                        An event, that emits when settings are changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSetting\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSetting(setting: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/settings/settings.component.ts:37\n                \n            \n\n\n            \n                \n                    Changes the specified setting, using a string key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string key, corresponding to a specific key in AppSettings\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value being set to the setting key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n    \n        \n  Show labels\n  Draw deviations\n  \n    Distance modifier:{{settings.distanceModifier}}\n    \n    \n  \n\n  \n    Clumping modifier:{{settings.clumpingModifier}}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                .settings-menu-wrapper{\n  display: flex;\n  flex-direction: column;\n  >*{\n    margin: 0.5em 0;\n\n    &:first-child{\n      margin-top: 0;\n    }\n    &:last-child{\n      margin-bottom: 0;\n    }\n  }\n}\n\nmat-label{\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Show labels  Draw deviations      Distance modifier:{{settings.distanceModifier}}                Clumping modifier:{{settings.clumpingModifier}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/sidenav.component.ts\n\n\n    \n        Description\n    \n    \n        The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearHighlightedWords\n                            \n                            \n                                clickedCompare\n                            \n                            \n                                closeSidenav\n                            \n                            \n                                handleWordHovered\n                            \n                            \n                                handleWordsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparingWindowOpen\n                            \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareClick\n                            \n                            \n                                sidebarClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparingWindowOpen\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:30\n                            \n                        \n                \n                    \n                        A value, specifying whether the comparing window should be open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:26\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        compareClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:39\n                            \n                        \n                \n                    \n                        An event, that emits when the user clicks on the comparison button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sidebarClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:35\n                            \n                        \n                \n                    \n                        An event, that emits when the sidebar closes\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearHighlightedWords\n                        \n                        \n                    \n                \n            \n            \n                \nclearHighlightedWords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:92\n                \n            \n\n\n            \n                \n                    Clears the highlighted words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickedCompare\n                        \n                        \n                    \n                \n            \n            \n                \nclickedCompare(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:71\n                \n            \n\n\n            \n                \n                    An event handler, that handles when user clicks on the comparison button\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event of clicking on the comparison button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSidenav(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:62\n                \n            \n\n\n            \n                \n                    An event handler, that handles when the sidenav is closed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event that closed the sidenav\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordHovered\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordHovered(word: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:102\n                \n            \n\n\n            \n                \n                    An event handler, handling the change of the hovered on word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new hovered word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordsChanged\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordsChanged(wordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:80\n                \n            \n\n\n            \n                \n                    An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The WordMap containing the relationships of matches\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedExactMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:44\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedSoftMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:48\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedWordMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:52\n                            \n                        \n\n                \n                    \n                        A map, that contains the relationships of matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:56\n                            \n                        \n\n                \n                    \n                        The currently hovered on word within the comparison screen\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from '../comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches = new Set();\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    this.highlightedExactMatches = new Set(wordMap.keys());\n    const softMatches = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), [])\n      .filter(a => !this.highlightedExactMatches.has(a));\n    this.highlightedSoftMatches = new Set(softMatches);\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = new Set();\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      Comparekeyboard_arrow_right\n    \n  \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                ::ng-deep{\n  .mat-drawer-inner-container{\n    overflow-x: hidden;\n  }\n}\n\n.sidenav-wrapper{\n  width: 400px;\n  height: 100%;\n  padding: 1em;\n  display: grid;\n  position: relative;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  grid-auto-rows: minmax(200px, 1fr);\n  grid-gap: 1em;\n  flex-shrink: 0;\n\n  &.comparing{\n    width: 100%;\n    height: 50%;\n    grid-template-columns: 1fr 1fr;\n\n    .sidenav-nav{\n      grid-column: 1/3;\n    }\n  }\n}\n\napp-document {\n  padding-bottom: 1em;\n  ::ng-deep {\n    .mat-card{\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    }\n    .mat-card-content {\n      overflow: auto;\n      max-height: 100%;\n      padding-right: 0.5em;\n    }\n  }\n}\n\n.sidenav-nav{\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.sidenav-comparison{\n  width: 100%;\n  height: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close              Comparekeyboard_arrow_right          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SplitUpPipe.html":{"url":"pipes/SplitUpPipe.html","title":"pipe - SplitUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SplitUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits up two values at a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        splitUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:68\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator at which the split will happen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/guards/document-loaded.guard.ts\n            \n            guard\n            DocumentLoadedGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/home/comparison/comparison-entry/comparison-entry.component.ts\n            \n            component\n            ComparisonEntryComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/home/comparison/comparison.component.ts\n            \n            component\n            ComparisonComponent\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                src/app/home/graph/graph.component.ts\n            \n            component\n            GraphComponent\n            \n                89 %\n                (35/39)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (39/41)\n            \n        \n        \n            \n                \n                src/app/home/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/home/settings/settings.component.ts\n            \n            interface\n            AppSettings\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document-content/document-content.component.ts\n            \n            component\n            DocumentContentComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document.component.ts\n            \n            component\n            DocumentComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            interface\n            SelectedDocument\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/init/init.component.ts\n            \n            component\n            InitComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/material.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/escape-html.pipe.ts\n            \n            pipe\n            EscapeHtmlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitFirstPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitSecondPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            SplitUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            injectable\n            JsonValidateService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            variable\n            searchQuerySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/query.service.ts\n            \n            injectable\n            QueryService\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            interface\n            Color\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            colorMix\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            colorSrgbGradient\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            colorToHex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            inverseSrgbCompanding\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            log2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            normalizeDeviation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            pow2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            srgbCompanding\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            Corpus\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphLink\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphNode\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            calculateCosineDistance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createLinks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createNodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getDocumentText\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantExactMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantSoftMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getNormalizedWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarityWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSoftCosineMeasure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProduct\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProductSingle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            softCosineMeasureNorm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            function\n            valueChanged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            variable\n            pairSeparator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.12\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ^11.2.12\n        \n            @angular/compiler : ^11.2.12\n        \n            @angular/core : ^11.2.12\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.2.12\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ^11.2.12\n        \n            @angular/platform-browser-dynamic : ^11.2.12\n        \n            @angular/router : ^11.2.12\n        \n            ajv : ^8.2.0\n        \n            angular-resize-event : ^2.1.0\n        \n            d3 : ^6.7.0\n        \n            d3-force : ^2.1.1\n        \n            escape-string-regexp : ^5.0.0\n        \n            hammerjs : ^2.0.8\n        \n            material-icons : ^0.5.5\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EntryHoverEvent   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/comparison/comparison.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EntryHoverEvent\n                    \n                \n                    \n                        \n                            An enum, specifying the hover event type\n\n                        \n                    \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nA visualisation tool of document maps\nThis project was generated with Angular CLI version 11.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRouter\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nInitComponent\n\nInitComponent\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WordMap   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/comparison/comparison.component.ts\n    \n    \n        \n            \n                \n                    \n                    WordMap\n                \n            \n            \n                \n                    A type, specifying the relation of two matched words\n\n                \n            \n            \n                \n                        Map>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../material.module.ts)\n                        \n                        \n                            pairSeparator   (src/.../various.utils.ts)\n                        \n                        \n                            searchQuerySchema   (src/.../json-validate.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/various.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairSeparator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\0'\n                        \n                    \n\n                \n                    \n                        The default pair separator, used for simulating string tuples within the app.\nNeeds to be placed in a utility file because of the WebWorker\n\n                    \n                \n\n            \n        \n\n    src/app/services/json-validate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            searchQuerySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JSONSchemaType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n}\n                        \n                    \n\n                \n                    \n                        The schema used to validate the parsed JSON\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
