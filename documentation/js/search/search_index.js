var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.544,1,1.236]],["body/components/AppComponent.html",[0,0.95,1,2.064,2,1.59,3,0.274,4,0.244,5,1.604,6,1.604,7,1.604,8,1.604,9,0.216,10,2.98,11,0.691,12,2.951,13,2.861,14,4.058,15,3.233,16,4.71,17,1.409,18,2.717,19,2.184,20,4.077,21,1.168,22,2.761,23,2.436,24,2.951,25,1.915,26,5.43,27,1.915,28,4.775,29,0.743,30,1.326,31,4.615,32,5.183,33,5.183,34,4.077,35,1.326,36,4.378,37,2.516,38,2.98,39,3.98,40,1.455,41,4.775,42,0.916,43,0.024,44,1.179,45,0.667,46,0.811,47,2.717,48,4.058,49,2.184,50,3.507,51,0.67,52,1.915,53,1.326,54,1.37,55,2.34,56,3.507,57,5.348,58,4.058,59,1.326,60,3.507,61,2.34,62,2.184,63,2.196,64,4.378,65,0.729,66,4.058,67,4.058,68,1.419,69,3.586,70,3.507,71,0.457,72,0.435,73,3.507,74,0.274,75,0.304,76,4.615,77,0.627,78,2.167,79,3.507,80,4.775,81,3.507,82,4.775,83,3.507,84,4.775,85,2.583,86,4.775,87,2.717,88,2.98,89,2.633,90,3.507,91,1.995,92,2.374,93,1.5,94,1.326,95,2.374,96,3.317,97,2.516,98,2.861,99,3.071,100,3.089,101,2.661,102,4.261,103,3.676,104,2.861,105,1.995,106,1.995,107,2.374,108,2.98,109,1.995,110,3.507,111,2.717,112,1.995,113,1.995,114,2.374,115,2.633,116,3.507,117,1.995,118,2.633,119,2.374,120,1.995,121,1.168,122,2.043,123,2.184,124,1.604,125,2.666,126,1.604,127,1.604,128,1.241,129,1.604,130,1.241,131,1.5,132,1.604,133,1.241,134,1.604,135,1.241,136,1.604,137,1.321,138,1.604,139,1.241,140,1.604,141,1.168,142,1.604,143,1.168,144,1.604,145,1.168,146,1.604,147,1.241,148,1.321,149,0.627,150,1.604,151,1.604,152,0.012,153,0.016,154,0.012]],["title/modules/AppModule.html",[155,1.163,156,2.364]],["body/modules/AppModule.html",[1,2.534,3,0.378,4,0.338,9,0.298,43,0.024,71,0.67,72,0.601,74,0.378,75,0.42,121,1.612,152,0.016,153,0.019,154,0.016,155,1.612,156,4.826,157,1.714,158,2.55,159,3.602,160,3.913,161,3.633,162,2.214,163,4.114,164,4.114,165,4.114,166,4.114,167,4.239,168,3.613,169,3.344,170,2.754,171,1.823,172,4.841,173,2.881,174,2.881,175,5.879,176,4.996,177,3.635,178,4.841,179,3.635,180,5.879,181,4.841,182,5.879,183,5.879,184,4.114,185,3.635,186,3.98,187,2.55,188,4.841]],["title/modules/AppRouter.html",[155,1.163,167,2.158]],["body/modules/AppRouter.html",[3,0.405,4,0.361,9,0.319,18,3.707,43,0.024,71,0.624,72,0.643,74,0.405,75,0.449,152,0.017,153,0.02,154,0.017,157,1.834,162,2.369,167,3.783,173,2.538,174,3,186,4.145,187,2.729,189,5.18,190,5.203,191,4.145,192,5.18,193,5.18,194,1.438,195,4.894,196,6.122,197,5.18,198,5.18,199,1.623,200,5.18,201,5.18,202,5.18,203,5.18]],["title/interfaces/AppSettings.html",[149,0.624,204,2.158]],["body/interfaces/AppSettings.html",[0,0.967,3,0.362,4,0.323,9,0.285,11,0.671,22,1.858,23,2.295,25,1.858,27,1.858,29,0.721,30,1.589,43,0.024,45,0.742,52,1.858,54,1.321,59,1.884,63,1.744,65,0.834,71,0.443,72,0.575,74,0.447,75,0.402,77,1.023,143,1.542,148,1.744,149,1.159,152,0.015,153,0.019,154,0.015,204,4.007,205,2.44,206,3.135,207,3.477,208,2.067,209,5.164,210,5.51,211,5.51,212,5.51,213,5.51,214,2.904,215,3.014,216,2.448,217,2.155,218,3.477,219,3.935,220,3.935,221,1.858,222,2.862,223,2.634,224,3.477,225,1.07,226,2.862,227,2.862,228,4.662,229,2.269,230,2.774,231,3.935,232,3.935,233,3.477,234,2.118,235,3.935,236,3.935,237,3.935]],["title/classes/Color.html",[75,0.303,238,1.597]],["body/classes/Color.html",[0,0.588,2,1.878,3,0.198,4,0.176,9,0.156,11,0.655,17,1.481,29,0.394,35,1.05,37,1.332,40,1.351,42,1.313,43,0.024,44,1.091,45,0.574,46,1.161,49,1.156,51,1.148,54,0.922,59,1.932,62,2.297,65,0.84,74,0.42,75,0.466,77,1.008,94,1.623,149,0.676,152,0.008,153,0.012,154,0.008,194,1.806,208,1.258,225,1.243,227,1.562,229,1.852,238,3.285,239,1.898,240,1.712,241,2.336,242,4.268,243,3.064,244,3.78,245,4.968,246,3.78,247,5.108,248,4.268,249,4.568,250,4.268,251,4.268,252,2.528,253,5.791,254,5.816,255,2.528,256,5.624,257,3.212,258,5.764,259,2.528,260,1.768,261,4.968,262,5.222,263,3.212,264,4.268,265,3.212,266,2.528,267,2.528,268,2.528,269,1.623,270,4.793,271,4.968,272,3.797,273,3.212,274,2.528,275,3.212,276,2.559,277,3.212,278,3.212,279,3.212,280,2.528,281,3.399,282,2.528,283,3.212,284,2.559,285,1.898,286,3.399,287,2.422,288,1.599,289,2.149,290,1.898,291,2.413,292,2.838,293,3.399,294,1.898,295,2.149,296,2.838,297,1.898,298,2.149,299,2.149,300,2.559,301,2.149,302,1.156,303,2.149,304,2.149,305,2.149,306,3.846,307,3.846,308,3.212,309,2.149,310,1.423,311,2.149,312,2.149,313,1.562,314,2.149,315,1.438,316,3.419,317,2.832,318,3.212,319,2.15,320,2.149,321,2.149,322,3.846,323,2.149,324,2.149,325,4.268,326,1.991,327,2.15,328,2.149,329,2.149,330,1.438,331,4.268,332,2.149,333,4.268,334,2.149,335,4.268,336,2.149,337,3.212,338,5.578,339,2.838,340,3.212,341,3.846,342,2.149,343,4.793,344,4.793,345,4.793,346,4.793,347,2.149,348,2.149,349,3.846,350,2.149,351,2.149,352,2.149,353,0.895,354,2.149,355,2.149,356,2.149,357,2.149,358,2.149,359,2.149,360,3.846,361,2.149,362,2.149,363,0.746,364,2.149,365,1.898,366,2.149,367,2.149,368,2.149,369,2.149,370,1.712,371,3.399,372,2.149,373,2.149,374,2.149,375,2.149,376,2.149,377,2.149]],["title/components/ComparisonComponent.html",[0,0.544,128,1.236]],["body/components/ComparisonComponent.html",[0,0.81,1,0.73,2,1.077,3,0.161,4,0.144,5,1.824,6,0.943,7,0.943,8,0.943,9,0.127,11,0.71,13,1.086,15,2.189,17,0.954,19,1.479,20,2.995,21,0.687,22,2.497,23,2.23,25,1.297,27,1.297,29,0.321,30,0.898,35,0.898,36,3.391,37,1.086,40,1.537,42,1.282,43,0.024,44,1.181,45,0.771,46,1.134,51,1.106,52,2.6,53,1.108,54,0.813,59,1.108,65,0.731,66,1.753,68,0.539,71,0.432,72,0.256,74,0.312,75,0.179,77,0.807,85,1.297,87,2.569,91,2.269,92,2.189,93,0.882,94,1.362,95,2.189,96,1.839,97,2.584,98,2.101,99,2.584,104,2.379,105,1.839,106,1.839,109,2.269,111,1.839,112,2.269,113,3.204,117,1.839,119,2.189,120,1.173,121,0.687,122,2.535,123,2.762,124,0.943,125,2.065,126,0.943,127,0.943,128,1.598,129,0.943,130,0.73,131,2.226,132,0.943,133,0.73,134,0.943,135,0.73,136,0.943,137,0.777,138,0.943,139,0.73,140,0.943,141,0.687,142,0.943,143,0.687,144,0.943,145,0.687,146,0.943,147,0.73,148,2.232,149,0.713,150,0.943,151,0.943,152,0.007,153,0.011,154,0.007,170,1.173,185,1.549,194,1.511,199,1.415,214,0.882,215,2.584,216,1.383,217,1.502,221,2.578,222,2.791,223,2.269,225,1.134,226,1.998,230,1.932,238,1.479,241,1.998,260,1.537,276,1.396,287,0.777,288,0.795,291,1.383,310,2.517,313,1.274,315,1.173,363,0.608,378,1.396,379,1.297,380,5.203,381,2.121,382,1.998,383,3.389,384,3.988,385,3.233,386,3.988,387,4.922,388,2.465,389,4.905,390,3.988,391,4.905,392,4.905,393,2.465,394,3.233,395,4.516,396,4.516,397,4.516,398,4.516,399,3.233,400,3.233,401,2.748,402,1.703,403,2.995,404,1.998,405,3.988,406,3.988,407,1.549,408,3.436,409,3.233,410,2.269,411,1.847,412,2.269,413,2.062,414,2.584,415,3.121,416,2.182,417,2.062,418,3.837,419,4.516,420,2.569,421,2.604,422,2.062,423,3.233,424,3.988,425,2.062,426,3.233,427,2.584,428,1.584,429,3.233,430,2.062,431,2.428,432,2.062,433,4.516,434,3.837,435,2.478,436,2.062,437,2.312,438,2.062,439,3.233,440,2.121,441,3.233,442,2.062,443,3.362,444,2.101,445,3.389,446,2.062,447,2.791,448,2.062,449,1.274,450,1.173,451,2.062,452,1.549,453,2.062,454,2.748,455,3.837,456,2.062,457,2.062,458,2.062,459,1.584,460,2.748,461,2.748,462,3.233,463,2.189,464,3.837,465,2.062,466,2.062,467,3.662,468,1.998,469,2.269,470,2.062,471,3.233,472,3.233,473,2.062,474,4.516,475,2.062,476,2.062,477,2.584,478,3.233,479,1.703,480,1.549,481,1.753,482,1.753,483,1.396,484,1.383,485,1.753,486,1.549,487,1.753,488,1.753,489,2.062,490,2.062,491,2.062,492,2.062,493,3.233,494,1.086,495,2.062,496,1.703,497,3.233,498,2.062,499,2.062,500,2.062,501,2.062,502,2.062,503,2.062,504,2.062,505,1.086,506,2.062,507,2.062,508,3.988,509,2.062,510,2.062,511,2.062,512,2.062,513,1.998,514,2.379,515,2.062,516,2.062,517,3.233,518,1.297,519,3.233,520,3.233,521,2.791,522,2.062,523,2.062,524,2.062,525,2.062,526,2.062,527,2.062,528,1.753,529,2.062,530,1.173,531,2.062,532,2.062,533,2.062,534,2.062,535,2.062,536,2.062,537,2.062,538,2.062,539,1.549,540,3.057,541,1.753,542,2.062,543,2.062,544,2.748,545,2.062,546,2.062,547,2.428,548,3.233,549,2.062,550,2.062,551,2.062,552,3.233,553,3.683,554,1.549,555,2.062,556,2.062,557,2.062,558,3.233,559,3.057,560,2.189,561,3.031,562,1.396,563,2.062,564,1.549,565,1.173,566,1.274,567,1.396,568,1.396,569,1.549,570,2.748,571,3.233,572,2.062,573,2.062,574,2.062,575,2.062,576,2.748,577,1.753,578,0.827,579,2.062,580,2.062,581,1.396,582,2.062,583,2.062,584,1.396,585,1.549,586,1.396,587,1.396,588,1.753,589,2.062,590,1.549]],["title/components/ComparisonEntryComponent.html",[0,0.544,130,1.236]],["body/components/ComparisonEntryComponent.html",[0,0.827,1,1.189,2,1.544,3,0.263,4,0.234,5,1.537,6,1.537,7,1.537,8,1.537,9,0.207,11,0.672,13,2.443,21,1.119,22,2.743,23,2.42,25,1.86,27,1.86,29,0.523,35,1.288,40,1.472,42,0.878,43,0.024,44,1.153,45,0.71,46,0.777,51,0.886,52,1.86,59,1.725,62,2.121,63,1.747,65,0.769,68,1.388,71,0.508,72,0.417,74,0.263,75,0.292,77,0.601,85,1.86,87,2.638,91,1.912,93,1.438,94,1.59,96,3.258,97,2.798,98,2.443,99,2.798,100,1.912,101,1.647,102,2.275,103,2.275,104,1.77,109,1.912,111,2.638,113,3.021,114,2.275,115,2.523,119,3.595,121,1.119,122,1.984,123,2.121,124,1.537,125,2.619,126,1.537,127,1.537,128,1.189,129,1.537,130,2.027,131,2.88,132,1.537,133,1.189,134,1.537,135,1.189,136,1.537,137,1.266,138,1.537,139,1.189,140,1.537,141,1.119,142,1.537,143,1.119,144,1.537,145,1.119,146,1.537,147,1.189,148,2,149,0.601,150,1.537,151,1.537,152,0.011,153,0.015,154,0.011,199,1.053,208,1.544,215,2.798,216,2.571,217,1.747,221,2.492,225,0.777,238,1.537,260,1.453,287,1.266,288,0.826,313,3.539,317,2.443,363,1.368,402,2.443,404,2.866,415,2.443,416,1.86,418,3.941,421,2.647,437,1.747,444,3.354,449,2.866,450,2.638,452,3.988,459,2.273,479,3.165,561,2.077,567,2.275,568,2.275,576,3.941,581,2.275,584,2.275,591,5.513,592,4.872,593,2.856,594,3.941,595,4.638,596,5.311,597,4.638,598,6.488,599,4.638,600,5.311,601,5.726,602,5.311,603,3.36,604,4.638,605,2.443,606,4.638,607,3.36,608,3.36,609,3.36,610,2.638,611,3.36,612,3.941,613,3.36,614,2.443,615,3.877,616,4.638,617,5.726,618,3.36,619,3.14,620,4.638,621,2.856,622,3.36,623,3.36,624,3.36,625,3.36,626,3.36,627,3.36,628,4.638,629,4.638,630,2.275,631,2.856,632,3.36,633,2.856,634,2.856,635,3.36,636,3.36,637,2.856,638,3.36,639,2.523,640,2.856,641,2.523,642,3.36,643,3.36,644,3.36,645,2.523,646,3.36,647,2.523,648,4.638]],["title/interfaces/Corpus.html",[149,0.624,411,1.315]],["body/interfaces/Corpus.html",[3,0.237,4,0.211,9,0.117,11,0.275,12,1.874,17,1.273,29,0.734,30,0.842,43,0.024,45,0.723,51,1.105,53,0.528,54,0.771,59,1.874,61,2.115,62,1.729,63,1.424,65,0.92,68,1.475,71,0.29,74,0.494,77,1.215,85,1.216,93,1.618,94,1.309,149,1.009,152,0.006,153,0.01,154,0.017,171,0.716,194,1.925,199,1.352,205,1.002,208,1.57,217,1.424,225,1.219,230,2.612,260,1.652,269,1.695,287,1.625,288,1.604,291,0.813,302,0.869,310,1.625,316,1.725,317,1.597,326,1.992,327,2.151,330,1.725,353,1.778,363,0.561,379,1.216,381,2.403,393,2.337,410,1.082,411,2.678,416,1.731,420,3.114,421,2.511,428,1.486,435,0.813,437,1.142,440,2.33,444,1.002,447,3.575,459,2.946,467,1.175,468,1.874,477,1.992,479,1.597,484,1.297,494,2.972,496,3.111,505,1.992,513,1.175,514,2.273,518,2.015,530,1.725,578,1.891,605,3.047,610,1.082,614,1.597,649,1.082,650,2.682,651,2.682,652,2.455,653,2.647,654,2.455,655,2.053,656,3.111,657,2.053,658,1.597,659,2.56,660,2.053,661,2.913,662,2.053,663,2.053,664,2.647,665,2.583,666,0.932,667,0.763,668,1.287,669,3.258,670,2.337,671,2.337,672,2.053,673,2.053,674,1.287,675,2.484,676,3.307,677,3.192,678,1.287,679,2.894,680,1.175,681,1.287,682,1.287,683,1.287,684,1.287,685,2.053,686,1.287,687,1.287,688,2.151,689,2.053,690,2.053,691,1.287,692,1.082,693,1.287,694,1.874,695,1.874,696,1.287,697,1.002,698,3.291,699,0.932,700,2.667,701,3.383,702,1.082,703,1.175,704,1.287,705,1.287,706,1.082,707,1.287,708,2.455,709,1.082,710,2.921,711,1.287,712,1.287,713,1.287,714,1.287,715,2.053,716,1.874,717,1.287,718,1.287,719,2.921,720,1.287,721,1.287,722,1.725,723,2.151,724,1.082,725,1.175,726,1.287,727,1.874,728,1.287,729,1.287,730,1.486,731,1.725,732,1.082,733,2.053,734,2.053,735,2.053,736,2.053,737,1.287,738,1.287,739,1.175,740,1.287,741,2.053,742,2.053,743,2.053,744,1.287,745,1.082,746,2.667,747,1.287,748,2.151,749,1.287,750,2.647,751,2.337,752,1.175,753,1.287,754,1.287,755,1.297,756,2.56,757,1.287,758,1.287,759,1.725,760,3.383,761,1.082,762,2.337,763,2.913,764,1.287,765,1.874,766,1.082,767,2.053,768,1.082,769,2.053,770,2.053,771,1.287,772,1.287,773,1.287,774,1.287,775,1.175,776,3.192,777,1.287,778,2.053,779,2.053,780,2.053,781,1.287,782,2.053,783,1.287,784,1.287,785,1.287,786,1.287,787,1.287,788,1.287,789,1.517,790,1.175,791,1.287,792,1.287,793,2.462,794,1.287,795,2.053,796,1.874,797,2.667,798,1.874,799,1.725,800,1.175,801,2.455,802,2.053,803,2.053,804,2.053,805,2.053,806,2.053,807,1.287,808,2.053,809,1.175,810,1.725,811,1.287,812,1.082,813,1.175,814,2.337,815,1.175,816,2.667,817,1.002,818,2.151,819,1.175,820,1.175,821,1.287,822,1.874,823,1.175,824,1.175,825,2.053,826,2.053,827,1.874,828,2.455,829,2.053,830,1.287,831,1.175,832,2.053,833,1.287,834,1.287,835,2.053,836,1.287,837,1.287,838,1.287,839,1.287,840,2.053,841,1.287,842,1.287,843,1.175,844,1.287,845,1.287,846,1.175,847,1.175]],["title/classes/DefaultColors.html",[75,0.303,370,2.364]],["body/classes/DefaultColors.html",[0,0.626,2,1.936,3,0.215,4,0.192,9,0.169,11,0.398,17,1.187,29,0.428,30,1.117,40,1.099,43,0.024,49,1.258,51,0.768,53,1.321,54,1.135,59,1.876,62,1.84,65,0.781,74,0.435,75,0.483,77,1.04,94,1.668,149,0.492,152,0.009,153,0.013,154,0.009,194,1.835,208,0.916,225,1.287,227,1.7,229,1.348,238,3.202,239,2.066,240,1.862,241,1.7,242,3.419,243,3.22,245,5.562,247,4.447,248,2.338,249,3.419,250,2.338,251,2.338,253,5.804,254,5.831,256,5.663,257,2.338,258,5.616,260,1.49,261,4.731,262,4.942,263,2.338,264,3.419,265,2.338,269,1.546,270,4.042,271,4.731,272,3.712,273,2.338,275,2.338,276,1.862,277,2.338,278,2.338,279,2.338,281,3.021,283,2.338,284,1.862,285,2.066,286,3.571,287,2.465,288,1.638,289,2.338,290,2.066,291,2.488,292,3.021,293,3.571,294,2.066,295,2.338,296,3.021,297,2.066,298,2.338,299,2.338,300,2.723,301,2.338,302,1.258,303,2.338,304,2.338,305,2.338,306,4.042,307,4.042,308,3.419,309,2.338,310,1.515,311,2.338,312,2.338,313,1.7,314,2.338,315,1.565,316,3.503,317,2.933,318,3.419,319,2.288,320,2.338,321,2.338,322,4.042,323,2.338,324,2.338,325,4.447,326,2.119,327,2.288,328,2.338,329,2.338,330,1.565,331,4.447,332,2.338,333,4.447,334,2.338,335,4.447,336,2.338,337,3.419,338,5.663,339,3.021,340,3.419,341,4.042,342,2.338,343,4.942,344,4.942,345,4.942,346,4.942,347,2.338,348,2.338,349,4.042,350,2.338,351,2.338,352,2.338,353,0.974,354,2.338,355,2.338,356,2.338,357,2.338,358,2.338,359,2.338,360,4.042,361,2.338,362,2.338,363,0.811,364,2.338,365,2.066,366,2.338,367,2.338,368,2.338,369,3.419,370,2.723,371,4.717,372,4.042,373,2.338,374,4.042,375,2.338,376,4.042,377,2.338,848,2.751,849,2.751,850,2.751]],["title/components/DocumentComponent.html",[0,0.544,133,1.236]],["body/components/DocumentComponent.html",[0,1.044,1,1.46,2,1.771,3,0.322,4,0.288,5,1.886,6,1.886,7,1.886,8,1.886,9,0.254,11,0.597,21,1.374,22,2.825,23,2.493,25,2.133,27,2.133,29,0.642,40,1.488,43,0.024,44,1.155,45,0.736,63,2.003,65,0.714,68,1.808,71,0.563,72,0.512,74,0.322,75,0.358,121,1.374,122,2.276,123,2.432,124,1.886,125,2.843,126,1.886,127,1.886,128,1.46,129,1.886,130,1.46,131,1.765,132,1.886,133,2.201,134,1.886,135,1.46,136,1.886,137,1.554,138,1.886,139,1.46,140,1.886,141,1.374,142,1.886,143,1.374,144,1.886,145,1.374,146,1.886,147,1.46,148,1.554,149,0.737,150,1.886,151,1.886,152,0.014,153,0.017,154,0.014,208,1.771,216,2.819,234,2.843,310,2.481,382,3.842,388,3.637,402,2.802,412,3.348,414,3.471,416,2.133,421,2.003,435,2.276,437,2.003,443,3.287,469,3.661,481,3.505,578,2.133,610,3.025,699,3.047,851,3.505,852,3.6,853,5.886,854,5.318,855,3.985,856,3.985,857,3.985,858,4.125,859,4.125,860,4.125,861,4.125,862,4.519,863,4.125,864,2.793,865,5.318,866,5.318]],["title/components/DocumentContentComponent.html",[0,0.544,135,1.236]],["body/components/DocumentContentComponent.html",[0,0.67,1,0.824,2,1.183,3,0.182,4,0.162,5,1.065,6,1.065,7,1.065,8,1.065,9,0.143,11,0.623,19,1.624,20,3.233,21,0.775,22,2.565,23,2.263,25,1.425,27,1.425,29,0.363,30,0.986,35,0.986,36,3.617,37,1.871,40,1.494,42,1.125,43,0.024,44,1.126,45,0.712,46,0.995,51,0.991,52,1.932,55,1.141,63,1.338,65,0.876,67,3.018,68,1.741,71,0.544,72,0.289,74,0.182,75,0.202,76,4.645,77,0.977,91,2.74,94,0.647,97,1.227,101,3.166,114,1.576,121,0.775,122,2.57,123,1.624,124,1.065,125,2.203,126,1.065,127,1.065,128,0.824,129,1.065,130,0.824,131,0.996,132,1.065,133,0.824,134,1.065,135,1.705,136,1.065,137,0.877,138,1.065,139,0.824,140,1.065,141,0.775,142,1.065,143,0.775,144,1.065,145,0.775,146,1.065,147,0.824,148,0.877,149,0.416,150,1.065,151,1.065,152,0.008,153,0.012,154,0.008,171,1.338,194,1.701,199,1.625,208,1.604,214,1.52,216,2.339,225,1.199,226,2.195,230,0.996,233,3.617,234,2.889,238,2.203,288,1.275,300,1.576,310,2.059,313,2.661,326,1.227,363,1.27,379,1.727,381,2.524,382,3.205,383,3.659,388,3.711,401,3.018,402,1.871,414,3.088,415,2.268,420,2.021,421,2.56,427,1.871,435,2.061,437,2.379,440,1.622,443,3.786,444,1.227,454,3.018,455,4.094,461,3.018,469,3.676,477,2.538,530,2.021,539,1.748,540,3.701,562,2.915,565,2.74,566,2.977,578,2.458,581,1.576,586,3.261,587,3.261,630,1.576,637,3.659,639,4.971,667,0.934,703,1.439,725,2.195,727,2.195,746,2.195,748,2.021,750,2.268,752,1.439,755,2.061,789,0.934,793,1.74,817,1.227,852,2.405,855,2.915,856,2.915,857,2.915,862,3.018,864,1.576,867,5.541,868,4.896,869,1.979,870,3.552,871,3.552,872,3.552,873,4.306,874,3.552,875,4.306,876,4.408,877,2.849,878,4.817,879,4.817,880,3.552,881,2.329,882,2.951,883,3.552,884,1.935,885,4.306,886,5.187,887,4.306,888,2.329,889,2.329,890,2.329,891,2.329,892,2.329,893,2.329,894,2.915,895,3.552,896,3.552,897,3.552,898,2.329,899,3.552,900,4.817,901,3.552,902,4.094,903,3.552,904,5.187,905,2.329,906,3.018,907,3.552,908,3.552,909,3.552,910,3.552,911,3.552,912,5.187,913,2.329,914,2.329,915,2.329,916,2.329,917,2.329,918,2.329,919,1.979,920,2.329,921,3.233,922,1.979,923,1.748,924,1.439,925,2.329,926,1.979,927,3.552,928,3.552,929,2.329,930,2.329,931,2.329,932,2.329,933,2.329,934,2.329,935,2.329,936,2.329,937,2.329,938,2.329,939,2.329,940,2.329,941,1.748,942,2.329,943,1.439,944,2.329,945,3.018,946,2.329,947,2.329,948,2.329,949,2.329,950,1.748,951,3.552,952,2.329,953,1.748,954,2.329,955,2.329,956,3.659,957,2.329,958,2.329,959,2.329,960,2.329,961,2.329,962,1.979,963,2.329,964,2.329,965,6.52,966,2.329,967,2.329,968,5.466,969,2.329,970,2.329,971,2.329,972,2.329,973,2.329,974,2.329,975,6.573,976,2.329,977,2.329,978,2.329]],["title/guards/DocumentLoadedGuard.html",[191,2.364,979,2.622]],["body/guards/DocumentLoadedGuard.html",[3,0.355,4,0.316,9,0.279,11,0.818,19,2.075,24,2.805,29,0.707,35,1.569,37,2.976,40,1.306,42,1.186,43,0.024,44,0.986,45,0.519,46,1.049,47,3.214,51,1.265,55,2.224,68,1.477,71,0.634,72,0.563,74,0.355,75,0.394,77,1.01,78,3.492,152,0.015,153,0.019,154,0.015,187,2.391,190,5.738,191,3.825,199,1.422,214,2.417,288,1.513,315,2.582,407,3.408,408,4.02,411,2.579,427,2.976,480,3.408,665,3.245,666,2.224,679,2.768,980,4.538,981,5.228,982,3.857,983,5.65,984,5.65,985,5.65,986,5.65,987,5.471,988,3.825,989,5.971,990,4.538,991,5.65,992,3.825,993,5.65,994,5.65,995,4.538,996,5.65,997,2.768,998,3.857,999,3.072,1000,4.538,1001,4.538,1002,3.408,1003,4.538]],["title/pipes/EscapeHtmlPipe.html",[882,1.987,884,1.236]],["body/pipes/EscapeHtmlPipe.html",[3,0.391,4,0.349,9,0.308,11,0.869,19,2.29,21,1.668,35,1.391,40,1.158,42,1.309,43,0.024,44,1.395,45,0.573,46,1.158,51,0.957,65,0.915,71,0.479,72,0.622,74,0.391,75,0.435,77,0.895,122,2.567,152,0.016,153,0.02,154,0.016,269,1.666,288,1.231,578,2.732,876,5.099,882,3.414,884,2.447,956,5.099,1004,2.849,1005,5.099,1006,4.256,1007,6,1008,6,1009,3.97,1010,6,1011,5.008,1012,6,1013,3.708,1014,5.008,1015,5.008,1016,5.008,1017,5.008,1018,5.008,1019,5.008,1020,5.008,1021,5.008]],["title/interfaces/GraphData.html",[149,0.624,697,1.84]],["body/interfaces/GraphData.html",[3,0.301,4,0.217,9,0.121,11,0.284,12,1.211,17,1.138,29,0.745,30,0.862,43,0.024,45,0.355,51,1.115,53,0.544,54,0.786,59,1.881,61,2.151,62,1.764,63,1.453,65,0.919,68,1.446,71,0.297,74,0.497,77,1.219,85,1.246,93,1.329,94,1.329,149,1.019,152,0.006,153,0.01,154,0.013,171,0.738,194,1.931,199,0.973,205,1.032,208,1.462,217,1.453,225,1.233,230,2.631,260,1.595,269,1.708,287,1.653,288,1.613,291,0.839,302,1.42,310,1.653,316,1.767,317,1.032,326,2.033,327,2.195,330,1.767,353,1.802,363,0.578,379,1.246,381,2.372,393,2.384,410,1.767,411,2.676,416,1.761,420,3.148,421,2.498,428,1.522,435,0.839,437,1.17,440,2.346,444,1.032,459,2.969,467,1.211,468,1.919,477,2.033,479,1.636,484,1.329,494,3.002,496,3.138,505,2.033,513,1.211,514,2.033,518,2.042,530,1.115,578,1.92,605,3.002,610,1.115,614,1.636,649,1.115,650,2.345,651,1.891,652,1.115,653,1.636,654,1.115,655,1.327,656,3.002,657,1.327,658,1.032,659,2.103,660,1.327,661,2.713,662,1.327,663,1.327,664,2.682,665,2.614,666,0.96,667,0.786,668,1.327,669,3.297,670,2.713,671,2.713,672,2.103,673,2.103,674,1.327,675,2.81,676,3.32,677,3.24,678,1.327,679,2.919,680,1.211,681,1.327,682,1.327,683,1.327,684,1.327,685,2.103,686,1.327,687,1.327,688,2.722,689,2.103,690,2.103,691,1.327,692,1.115,693,2.103,694,2.384,695,2.384,696,2.103,697,1.636,698,3.583,699,1.522,700,3.42,701,3.42,702,1.115,703,1.211,704,1.327,705,1.327,706,1.115,707,1.327,708,2.497,709,1.115,710,2.972,711,1.327,712,1.327,713,1.327,714,1.327,715,2.103,716,1.919,717,1.327,718,1.327,719,2.972,720,1.327,721,1.327,722,1.767,723,2.195,724,1.115,725,1.211,726,1.327,727,1.919,728,1.327,729,1.327,730,1.522,731,1.767,732,1.115,733,2.103,734,2.103,735,2.103,736,2.103,737,1.327,738,1.327,739,1.211,740,1.327,741,2.103,742,2.103,743,2.103,744,1.327,745,1.115,746,2.713,747,1.327,748,2.195,749,1.327,750,2.682,751,2.384,752,1.211,753,1.327,754,1.327,755,1.329,756,2.612,757,1.327,758,1.327,759,1.767,760,3.42,761,1.115,762,2.384,763,2.957,764,1.327,765,1.919,766,1.115,767,2.103,768,1.115,769,2.103,770,2.103,771,1.327,772,1.327,773,1.327,774,1.327,775,1.211,776,3.24,777,1.327,778,2.103,779,2.103,780,2.103,781,1.327,782,2.103,783,1.327,784,1.327,785,1.327,786,1.327,787,1.327,788,1.327,789,1.548,790,1.211,791,1.327,792,1.327,793,2.495,794,1.327,795,2.103,796,1.919,797,2.713,798,1.919,799,1.767,800,1.211,801,2.497,802,2.103,803,2.103,804,2.103,805,2.103,806,2.103,807,1.327,808,2.103,809,1.211,810,1.767,811,1.327,812,1.115,813,1.211,814,2.384,815,1.211,816,2.713,817,1.032,818,2.195,819,1.211,820,1.211,821,1.327,822,1.919,823,1.211,824,1.211,825,2.103,826,2.103,827,1.919,828,2.497,829,2.103,830,1.327,831,1.211,832,2.103,833,1.327,834,1.327,835,2.103,836,1.327,837,1.327,838,1.327,839,1.327,840,2.103,841,1.327,842,1.327,843,1.211,844,1.327,845,1.327,846,1.211,847,1.211]],["title/interfaces/GraphLink.html",[149,0.624,688,1.987]],["body/interfaces/GraphLink.html",[3,0.24,4,0.332,9,0.119,11,0.28,12,1.197,17,1.286,29,0.858,30,0.854,43,0.024,45,0.499,46,0.711,51,1.111,53,0.538,54,1.032,59,1.902,61,2.137,62,1.751,63,1.442,65,0.927,68,1.44,71,0.294,74,0.496,77,1.217,85,1.234,93,1.317,94,1.321,149,1.015,152,0.006,153,0.01,154,0.013,171,0.729,194,1.929,199,0.964,205,1.02,208,1.275,217,1.442,225,1.228,230,2.624,260,1.664,269,1.703,287,1.642,288,1.609,291,0.829,302,0.886,310,1.642,316,1.75,317,1.02,326,2.017,327,2.178,330,1.75,353,1.88,363,0.571,379,1.234,381,2.366,393,2.366,410,1.102,411,2.674,416,1.908,420,3.135,421,2.493,428,1.508,435,0.829,437,1.159,440,2.34,444,1.02,459,2.96,467,1.197,468,2.366,477,2.017,479,1.621,484,1.638,494,2.99,496,3.128,505,2.017,513,1.197,514,2.017,518,2.13,530,1.102,578,1.908,605,3.064,610,1.102,614,1.621,649,1.102,650,2.331,651,1.876,652,1.102,653,1.621,654,1.102,655,1.311,656,2.99,657,1.311,658,1.02,659,2.083,660,1.311,661,2.695,662,1.311,663,1.311,664,2.506,665,2.602,666,0.949,667,0.777,668,1.311,669,3.405,670,2.695,671,2.695,672,2.592,673,2.592,674,1.311,675,2.506,676,3.337,677,3.221,678,1.311,679,2.909,680,1.197,681,1.311,682,1.311,683,1.311,684,1.311,685,2.083,686,1.311,687,2.083,688,2.481,689,2.952,690,2.952,691,2.952,692,1.75,693,1.311,694,1.902,695,1.902,696,1.311,697,1.02,698,3.309,699,0.949,700,2.695,701,3.405,702,1.102,703,1.197,704,1.311,705,1.311,706,1.102,707,1.311,708,2.481,709,1.102,710,2.952,711,1.311,712,1.311,713,1.311,714,1.311,715,2.083,716,1.902,717,1.311,718,1.311,719,2.952,720,1.311,721,1.311,722,1.75,723,2.178,724,1.102,725,1.197,726,1.311,727,1.902,728,1.311,729,1.311,730,1.508,731,1.75,732,1.102,733,2.083,734,2.083,735,2.083,736,2.083,737,1.311,738,1.311,739,1.197,740,1.311,741,2.083,742,2.083,743,2.083,744,1.311,745,1.102,746,2.695,747,1.311,748,2.178,749,1.311,750,2.668,751,2.366,752,1.197,753,1.311,754,1.311,755,1.317,756,2.592,757,1.311,758,1.311,759,1.75,760,3.405,761,1.102,762,2.366,763,2.94,764,1.311,765,1.902,766,1.102,767,2.083,768,1.102,769,2.083,770,2.083,771,1.311,772,1.311,773,1.311,774,1.311,775,1.197,776,3.221,777,1.311,778,2.083,779,2.083,780,2.083,781,1.311,782,2.083,783,1.311,784,1.311,785,1.311,786,1.311,787,1.311,788,1.311,789,1.536,790,1.197,791,1.311,792,1.311,793,2.482,794,1.311,795,2.083,796,1.902,797,2.695,798,1.902,799,1.75,800,1.197,801,2.481,802,2.083,803,2.083,804,2.083,805,2.083,806,2.083,807,1.311,808,2.083,809,1.197,810,1.75,811,1.311,812,1.102,813,1.197,814,2.366,815,1.197,816,2.695,817,1.02,818,2.178,819,1.197,820,1.197,821,1.311,822,1.902,823,1.197,824,1.197,825,2.083,826,2.083,827,1.902,828,2.481,829,2.083,830,1.311,831,1.197,832,2.083,833,1.311,834,1.311,835,2.083,836,1.311,837,1.311,838,1.311,839,1.311,840,2.083,841,1.311,842,1.311,843,1.197,844,1.311,845,1.311,846,1.197,847,1.197]],["title/interfaces/GraphNode.html",[149,0.624,675,1.84]],["body/interfaces/GraphNode.html",[3,0.235,4,0.21,9,0.116,11,0.273,12,1.165,17,1.109,29,0.849,30,0.836,43,0.024,45,0.643,46,1.427,51,1.102,53,0.523,54,0.766,59,1.944,61,2.104,62,1.719,63,1.416,65,0.919,68,1.508,71,0.288,74,0.493,77,1.213,85,1.208,93,1.288,94,1.303,149,1.006,152,0.006,153,0.01,154,0.012,171,0.71,194,1.923,199,0.943,205,0.993,208,1.252,217,1.416,225,1.214,230,2.606,260,1.568,269,1.691,287,1.617,288,1.602,291,0.806,302,0.862,310,1.617,316,1.713,317,0.993,326,1.981,327,2.139,330,1.713,353,1.772,363,0.556,379,1.208,381,2.352,393,2.323,410,1.072,411,2.668,416,1.722,420,3.104,421,2.483,428,1.475,435,0.806,437,1.134,440,2.325,444,0.993,459,2.939,467,1.165,468,2.323,477,1.981,479,1.586,484,1.609,494,2.964,496,3.104,505,1.981,513,1.165,514,1.981,518,2.007,530,1.072,578,1.883,605,2.964,610,1.713,614,1.586,649,1.072,650,2.3,651,1.842,652,1.072,653,1.586,654,1.072,655,1.276,656,2.964,657,1.276,658,0.993,659,2.038,660,1.276,661,2.653,662,1.276,663,1.276,664,2.473,665,2.574,666,0.923,667,0.756,668,1.276,669,3.565,670,2.653,671,2.653,672,2.545,673,2.545,674,2.038,675,2.636,676,3.346,677,3.808,678,2.038,679,2.939,680,2.653,681,2.907,682,2.907,683,2.907,684,2.907,685,3.388,686,2.907,687,1.276,688,2.139,689,2.038,690,2.038,691,1.276,692,1.072,693,1.276,694,1.86,695,1.86,696,1.276,697,0.993,698,3.282,699,0.923,700,2.653,701,3.372,702,1.072,703,1.165,704,1.276,705,1.276,706,1.072,707,1.276,708,2.443,709,1.072,710,2.907,711,1.276,712,1.276,713,1.276,714,1.276,715,2.038,716,1.86,717,1.276,718,1.276,719,2.907,720,1.276,721,1.276,722,1.713,723,2.139,724,1.072,725,1.165,726,1.276,727,1.86,728,1.276,729,1.276,730,1.475,731,1.713,732,1.072,733,2.038,734,2.038,735,2.038,736,2.038,737,1.276,738,1.276,739,1.165,740,1.276,741,2.038,742,2.038,743,2.038,744,1.276,745,1.072,746,2.653,747,1.276,748,2.139,749,1.276,750,2.636,751,2.323,752,1.165,753,1.276,754,1.276,755,1.288,756,2.545,757,1.276,758,1.276,759,1.713,760,3.372,761,1.072,762,2.323,763,2.901,764,1.276,765,1.86,766,1.072,767,2.038,768,1.072,769,2.038,770,2.038,771,1.276,772,1.276,773,1.276,774,1.276,775,1.165,776,3.178,777,1.276,778,2.038,779,2.038,780,2.038,781,1.276,782,2.038,783,1.276,784,1.276,785,1.276,786,1.276,787,1.276,788,1.276,789,1.508,790,1.165,791,1.276,792,1.276,793,2.452,794,1.276,795,2.038,796,1.86,797,2.653,798,1.86,799,1.713,800,1.165,801,2.443,802,2.038,803,2.038,804,2.038,805,2.038,806,2.038,807,1.276,808,2.038,809,1.165,810,1.713,811,1.276,812,1.072,813,1.165,814,2.323,815,1.165,816,2.653,817,0.993,818,2.139,819,1.165,820,1.165,821,1.276,822,1.86,823,1.165,824,1.165,825,2.038,826,2.038,827,1.86,828,2.443,829,2.038,830,1.276,831,1.165,832,2.038,833,1.276,834,1.276,835,2.038,836,1.276,837,1.276,838,1.276,839,1.276,840,2.038,841,1.276,842,1.276,843,1.165,844,1.276,845,1.276,846,1.165,847,1.165]],["title/modules/HomeModule.html",[155,1.163,1022,2.364]],["body/modules/HomeModule.html",[3,0.334,4,0.298,9,0.263,43,0.024,71,0.684,72,0.531,74,0.334,75,0.371,121,1.424,128,2.354,130,2.354,133,2.354,135,2.354,137,2.505,139,2.354,143,2.215,145,2.215,147,2.354,148,2.05,152,0.014,153,0.018,154,0.014,155,1.424,157,1.514,158,2.253,159,3.405,160,2.642,161,2.642,162,1.955,168,3.504,169,3.096,170,2.432,171,1.61,173,2.667,174,2.667,179,3.211,221,1.715,592,3.211,868,3.211,1022,4.924,1023,3.634,1024,3.634,1025,3.634,1026,4.11,1027,4.276,1028,4.086,1029,2.895,1030,3.634,1031,4.625,1032,5.442,1033,3.211,1034,4.276,1035,4.276,1036,4.276,1037,4.276,1038,4.276,1039,4.276,1040,4.276,1041,5.442,1042,2.642,1043,3.634,1044,4.276,1045,4.276,1046,4.276,1047,3.363,1048,4.276,1049,3.211,1050,4.276]],["title/modules/HomeRoutes.html",[155,1.163,1026,2.158]],["body/modules/HomeRoutes.html",[0,0.838,3,0.42,4,0.375,9,0.331,18,3.766,43,0.024,71,0.633,72,0.668,74,0.42,75,0.467,139,2.216,152,0.018,153,0.021,154,0.018,157,1.904,162,2.46,173,2.636,174,3.067,186,4.238,187,2.834,194,1.494,195,4.04,1026,3.868,1030,4.572,1051,5.38,1052,4.572]],["title/components/InitComponent.html",[0,0.544,141,1.163]],["body/components/InitComponent.html",[0,0.748,1,0.699,2,1.04,3,0.154,4,0.335,5,0.903,6,0.903,7,0.903,8,0.903,9,0.402,11,0.775,13,2.322,14,2.654,16,1.336,17,0.582,21,0.657,22,2.471,23,2.181,25,1.253,27,1.253,29,0.486,30,0.867,35,0.867,37,1.645,40,1.442,42,1.255,43,0.024,44,1.162,45,0.653,46,1.11,47,3.043,51,1.06,52,2.435,53,0.548,54,0.79,55,2.353,61,0.967,65,0.767,68,1.398,69,2.345,71,0.546,72,0.245,74,0.154,75,0.171,77,1.046,78,2.724,85,2.225,87,2.732,89,1.482,91,2.732,92,2.114,93,1.336,94,1.485,95,1.336,96,3.249,97,3.009,98,2.922,99,3.082,100,3.043,101,2.718,102,4.271,103,3.622,104,2.818,105,2.205,106,2.205,107,1.336,108,1.677,109,1.777,111,2.205,112,1.777,113,2.507,114,1.336,115,4.017,117,2.507,118,2.345,120,1.123,121,0.657,122,1.336,123,1.428,124,0.903,125,2.015,126,0.903,127,0.903,128,0.699,129,0.903,130,0.699,131,0.844,132,0.903,133,0.699,134,0.903,135,0.699,136,0.903,137,0.743,138,0.903,139,0.699,140,0.903,141,1.467,142,0.903,143,0.657,144,0.903,145,0.657,146,0.903,147,0.699,148,0.743,149,0.353,150,0.903,151,0.903,152,0.006,153,0.01,154,0.006,187,1.04,194,1.076,199,0.618,208,1.04,214,1.336,216,1.336,221,2.048,225,0.896,228,2.345,234,2.446,238,0.903,269,1.624,272,1.22,281,1.482,284,2.114,287,1.176,288,0.953,302,1.428,315,1.123,339,1.482,363,0.582,379,2.346,381,1.176,407,1.482,408,3.395,410,1.777,411,2.571,414,1.645,415,1.645,416,1.253,427,2.322,428,1.53,449,2.724,450,2.205,463,2.624,480,1.482,483,1.336,484,1.336,486,3.309,521,1.93,541,1.677,559,1.336,560,1.336,561,1.93,565,1.777,566,1.93,567,1.336,568,1.336,569,1.482,578,2.677,581,1.336,584,2.114,585,1.482,586,1.336,587,1.336,588,1.677,590,1.482,615,1.336,640,1.677,641,2.345,645,1.482,647,1.482,664,1.645,679,1.899,699,1.53,716,1.93,739,1.93,789,0.792,828,2.507,852,2.984,894,2.114,987,2.654,989,4.971,992,2.984,1002,2.345,1053,1.677,1054,2.654,1055,3.123,1056,3.123,1057,6.371,1058,5.547,1059,3.876,1060,3.123,1061,3.876,1062,3.876,1063,3.876,1064,3.876,1065,5.235,1066,3.123,1067,3.123,1068,4.407,1069,4.407,1070,3.123,1071,3.123,1072,4.407,1073,4.407,1074,3.755,1075,5.85,1076,4.407,1077,3.123,1078,3.123,1079,4.34,1080,3.835,1081,4.407,1082,3.745,1083,3.123,1084,3.123,1085,3.123,1086,1.974,1087,2.345,1088,4.802,1089,3.876,1090,3.123,1091,1.974,1092,3.123,1093,1.777,1094,1.974,1095,1.974,1096,3.123,1097,5.349,1098,3.123,1099,1.974,1100,2.654,1101,3.123,1102,5.107,1103,5.85,1104,1.974,1105,3.123,1106,2.654,1107,4.407,1108,3.123,1109,3.123,1110,1.974,1111,5.547,1112,1.974,1113,1.974,1114,1.974,1115,3.745,1116,3.123,1117,4.625,1118,1.974,1119,3.123,1120,1.974,1121,3.123,1122,2.654,1123,3.876,1124,3.123,1125,1.974,1126,1.974,1127,1.974,1128,1.974,1129,1.677,1130,1.974,1131,1.974,1132,4.802,1133,3.123,1134,1.974,1135,3.123,1136,3.123,1137,3.123,1138,3.876,1139,3.294,1140,1.677,1141,1.974,1142,1.974,1143,3.123,1144,1.974,1145,1.974,1146,1.677,1147,1.974,1148,1.974,1149,1.974,1150,1.974,1151,1.974,1152,3.123,1153,1.974,1154,3.876,1155,1.974,1156,3.123,1157,1.974,1158,1.974,1159,1.974,1160,1.677,1161,2.345,1162,1.974,1163,1.974,1164,1.974,1165,1.974,1166,1.677,1167,1.974,1168,1.974,1169,1.974,1170,1.482,1171,1.974,1172,1.974,1173,1.974,1174,3.123,1175,4.971,1176,3.123,1177,3.123,1178,3.123,1179,4.407,1180,3.123,1181,3.123,1182,1.974,1183,3.123,1184,3.123,1185,4.407,1186,3.123,1187,2.345,1188,3.745,1189,3.123,1190,2.654,1191,3.123,1192,3.123,1193,3.123,1194,1.974,1195,3.123,1196,3.876,1197,3.123,1198,1.974,1199,1.974,1200,1.974,1201,1.974,1202,1.974,1203,1.974,1204,1.974,1205,2.114,1206,1.974,1207,1.974,1208,1.974,1209,1.974,1210,3.123,1211,1.974,1212,2.654,1213,3.123,1214,1.677,1215,1.974,1216,1.974,1217,1.974,1218,1.974,1219,1.974,1220,1.974]],["title/modules/InitModule.html",[155,1.163,1221,2.364]],["body/modules/InitModule.html",[3,0.392,4,0.35,9,0.309,43,0.024,71,0.662,72,0.623,74,0.392,75,0.435,121,1.67,141,2.303,152,0.016,153,0.02,154,0.016,155,1.67,157,1.775,158,2.642,159,3.657,160,3.099,161,3.099,162,2.293,168,3.643,169,3.416,170,2.853,171,1.889,173,2.943,174,2.943,179,3.766,1028,4.509,1029,3.395,1031,5.103,1033,3.766,1221,4.828,1222,4.262,1223,4.262,1224,4.262,1225,4.274,1226,5.015,1227,4.262,1228,5.015]],["title/modules/InitRoutes.html",[155,1.163,1225,2.158]],["body/modules/InitRoutes.html",[0,0.838,3,0.42,4,0.375,9,0.331,18,3.766,43,0.024,71,0.633,72,0.668,74,0.42,75,0.467,141,2.084,152,0.018,153,0.021,154,0.018,157,1.904,162,2.46,173,2.636,174,3.067,186,4.238,187,2.834,194,1.494,195,4.04,1052,4.572,1225,3.868,1227,4.572,1229,5.38]],["title/injectables/JsonValidateService.html",[997,1.711,1074,2.364]],["body/injectables/JsonValidateService.html",[3,0.322,4,0.287,9,0.362,11,0.769,24,2.546,29,0.641,30,1.144,35,1.476,40,0.952,42,1.077,43,0.024,44,0.895,45,0.82,46,0.952,47,3.023,51,0.787,55,2.604,59,1.476,65,0.835,71,0.563,72,0.512,74,0.322,75,0.358,77,0.737,104,2.8,152,0.014,153,0.017,154,0.019,194,1.633,214,2.274,225,0.952,269,1.476,288,1.307,302,1.884,411,2.557,447,3.284,450,2.344,483,2.789,514,2.8,650,2.604,651,2.604,652,3.023,653,2.8,654,3.023,658,3.614,793,2.019,945,3.501,992,2.789,997,2.604,999,2.789,1065,4.516,1074,3.598,1079,5.281,1080,3.99,1106,4.516,1117,4.417,1139,3.501,1160,3.501,1161,4.417,1166,3.501,1230,2.789,1231,3.99,1232,3.094,1233,5.314,1234,5.314,1235,4.12,1236,5.281,1237,4.516,1238,3.501,1239,4.12,1240,4.12,1241,3.094,1242,5.695,1243,3.501,1244,3.501,1245,4.12,1246,4.12,1247,4.12,1248,4.12]],["title/injectables/LoadingService.html",[39,2.158,997,1.711]],["body/injectables/LoadingService.html",[2,1.677,3,0.297,4,0.265,9,0.234,11,0.872,16,4.076,24,2.346,29,0.591,30,1.399,31,5.325,32,5.325,33,5.325,35,1.399,39,3.113,40,1.561,42,1.477,43,0.024,44,1.228,45,0.646,46,1.307,47,2.866,48,4.281,51,1.08,52,2.583,53,1.788,54,1.477,59,1.57,61,2.95,62,2.304,63,2.268,64,3.782,65,0.759,71,0.482,72,0.471,74,0.297,75,0.329,77,1.011,78,4.278,152,0.012,153,0.017,154,0.012,214,2.419,225,1.489,234,2.945,269,1.399,365,3.782,379,2.021,414,2.654,665,3.156,666,1.86,997,2.468,999,2.57,1230,2.57,1249,3.226,1250,6.266,1251,6.266,1252,6.266,1253,5.037,1254,5.037,1255,5.037,1256,5.037,1257,3.797,1258,5.473,1259,5.037,1260,3.797,1261,5.037,1262,3.797,1263,5.037,1264,3.797,1265,4.836,1266,5.037,1267,3.797,1268,5.473,1269,6.441,1270,5.037,1271,5.037,1272,3.797,1273,5.037,1274,3.797,1275,5.037,1276,3.797,1277,4.804,1278,3.797,1279,3.797,1280,3.797,1281,3.797]],["title/modules/MaterialModule.html",[155,1.163,168,1.84]],["body/modules/MaterialModule.html",[3,0.359,4,0.32,9,0.283,43,0.023,71,0.702,72,0.57,74,0.359,75,0.398,118,3.446,152,0.015,153,0.019,154,0.015,157,2.288,159,2.611,162,2.099,168,2.997,173,2.249,174,2.788,194,1.275,460,3.9,615,3.852,621,3.9,1129,3.9,1282,3.446,1283,4.835,1284,4.59,1285,4.835,1286,4.59,1287,4.835,1288,4.59,1289,4.835,1290,4.59,1291,4.835,1292,5.69,1293,4.835,1294,4.59,1295,4.835,1296,4.59,1297,4.835,1298,4.59,1299,4.835,1300,4.835,1301,4.59,1302,4.835,1303,4.59,1304,4.835,1305,4.59,1306,4.835,1307,4.59,1308,5.69,1309,4.835,1310,4.59,1311,4.835,1312,4.59,1313,4.59,1314,4.835,1315,4.59,1316,4.835,1317,4.59,1318,4.835,1319,4.59,1320,4.835,1321,4.835,1322,5.69,1323,4.835,1324,4.835,1325,4.59,1326,4.835,1327,4.59,1328,4.835,1329,4.835,1330,4.59,1331,4.835,1332,4.59,1333,4.835,1334,4.59,1335,4.835,1336,4.59,1337,4.835,1338,4.59,1339,4.835,1340,4.59]],["title/pipes/PairSplitFirstPipe.html",[884,1.236,1341,1.711]],["body/pipes/PairSplitFirstPipe.html",[3,0.314,4,0.28,9,0.247,11,0.757,17,1.186,19,2.815,21,1.338,35,1.116,40,0.929,42,1.051,43,0.024,44,1.421,45,0.46,46,0.929,49,2.392,51,0.768,53,1.116,54,1.301,65,0.965,71,0.5,72,0.499,74,0.481,75,0.534,77,1.221,152,0.013,153,0.017,154,0.013,229,3.017,260,1.822,269,1.772,288,1.514,319,2.287,353,2.259,363,1.715,440,1.514,518,2.332,667,2.625,755,2.731,789,2.878,877,1.838,884,2.505,924,2.484,943,3.945,1004,2.287,1009,4.044,1013,3.945,1341,2.563,1342,3.232,1343,2.484,1344,4.168,1345,3.936,1346,4.168,1347,4.02,1348,3.936,1349,2.721,1350,1.97,1351,2.721,1352,2.721,1353,1.97,1354,2.721,1355,3.541,1356,3.541,1357,2.721,1358,2.721,1359,2.721,1360,2.721,1361,2.721,1362,2.721]],["title/pipes/PairSplitSecondPipe.html",[884,1.236,1350,1.711]],["body/pipes/PairSplitSecondPipe.html",[3,0.314,4,0.28,9,0.247,11,0.757,17,1.186,19,2.815,21,1.338,35,1.116,40,0.929,42,1.051,43,0.024,44,1.421,45,0.46,46,0.929,49,2.392,51,0.768,53,1.116,54,1.301,65,0.965,71,0.5,72,0.499,74,0.481,75,0.534,77,1.221,152,0.013,153,0.017,154,0.013,229,3.017,260,1.822,269,1.772,288,1.514,319,2.287,353,2.058,363,1.715,440,1.514,518,2.56,667,2.625,755,2.731,789,2.878,877,1.838,884,2.505,924,2.484,943,3.945,1004,2.287,1009,4.044,1013,3.945,1341,1.97,1342,3.232,1343,2.484,1344,4.168,1345,3.936,1346,4.168,1348,3.936,1349,2.721,1350,2.563,1351,2.721,1352,2.721,1353,1.97,1354,2.721,1355,3.541,1356,3.541,1357,2.721,1358,2.721,1359,2.721,1360,2.721,1361,2.721,1362,2.721,1363,4.02]],["title/pipes/PairUpPipe.html",[884,1.236,1353,1.711]],["body/pipes/PairUpPipe.html",[3,0.31,4,0.276,9,0.244,11,0.75,17,1.528,19,2.8,21,1.319,35,1.1,40,0.916,42,1.036,43,0.024,44,1.415,45,0.453,46,0.916,49,2.64,51,0.757,53,1.1,54,1.248,65,0.968,71,0.496,72,0.492,74,0.478,75,0.531,77,1.217,152,0.013,153,0.017,154,0.013,229,3,260,1.991,269,1.764,288,1.505,319,2.948,353,2.167,363,1.528,440,1.951,518,2.456,667,2.614,755,2.882,789,2.874,877,1.812,884,2.501,924,2.449,943,3.784,1004,2.254,1009,4.028,1013,3.927,1341,1.942,1342,3.202,1343,2.449,1344,3.908,1345,3.508,1346,3.908,1348,3.908,1349,2.683,1350,1.942,1351,2.683,1352,3.508,1353,2.539,1354,3.508,1355,4.145,1356,4.145,1357,3.508,1358,3.508,1359,2.683,1360,2.683,1361,2.683,1362,2.683,1364,3.963]],["title/modules/PipesModule.html",[155,1.163,1047,2.158]],["body/modules/PipesModule.html",[3,0.359,4,0.321,9,0.283,43,0.024,71,0.619,72,0.571,74,0.359,75,0.399,121,1.532,152,0.015,153,0.019,154,0.015,155,1.532,157,1.629,158,2.424,159,3.522,160,2.844,161,3.522,162,2.831,169,3.242,170,2.618,171,1.733,173,2.255,174,2.792,750,2.424,877,3.265,882,4.061,919,3.91,921,3.455,926,3.91,1028,4.279,1029,3.115,1047,4.477,1341,3.498,1350,3.498,1353,3.498,1365,3.91,1366,3.91,1367,3.91,1368,4.601]],["title/injectables/QueryService.html",[408,1.987,997,1.711]],["body/injectables/QueryService.html",[3,0.149,4,0.133,9,0.118,11,0.907,16,3.713,24,1.182,29,0.298,30,0.846,35,0.846,37,2,38,1.625,39,3.265,40,1.489,42,1.619,43,0.024,44,1.345,45,0.73,46,1.6,47,3.12,51,1.306,52,1.222,53,1.313,54,0.964,59,1.697,61,1.86,64,1.436,65,0.937,68,0.796,71,0.482,72,0.237,74,0.149,75,0.166,77,1.219,78,3.721,152,0.006,153,0.01,154,0.006,155,0.637,194,0.531,199,0.599,217,0.72,225,1.093,230,0.818,234,1.736,241,1.882,260,1.816,269,0.846,288,1.556,302,2.416,315,2.16,353,2.193,363,2.006,371,2.851,379,1.737,381,1.147,408,1.733,411,2.756,421,2.513,428,2.121,437,1.631,440,1.147,447,1.182,452,2.287,459,2.468,463,2.062,482,1.625,483,2.062,488,1.625,494,3.053,496,3.53,505,2.281,518,2.415,521,1.182,528,1.625,544,3.679,554,1.436,578,2.651,605,3.172,614,2.281,619,2.062,650,1.493,651,1.493,656,2.654,664,1.605,665,2.839,666,0.937,676,3.418,679,1.493,692,1.733,697,2.491,702,1.733,706,1.733,708,3.12,709,1.733,722,1.733,723,2.69,724,1.733,730,2.121,731,2.463,732,1.733,745,1.733,751,1.182,759,1.733,761,1.733,766,1.733,768,1.733,790,4.083,793,1.493,799,1.088,827,1.882,828,3.216,831,1.882,843,1.182,884,0.677,997,1.493,998,1.625,999,1.295,1054,2.588,1093,1.088,1100,1.625,1230,1.295,1258,2.588,1265,2.287,1268,4.018,1277,1.625,1369,1.625,1370,3.046,1371,3.046,1372,4.329,1373,4.728,1374,3.796,1375,6.44,1376,3.796,1377,2.287,1378,2.287,1379,2.287,1380,2.287,1381,2.287,1382,2.287,1383,2.287,1384,3.046,1385,2.287,1386,2.287,1387,3.046,1388,2.287,1389,3.046,1390,3.046,1391,3.046,1392,3.046,1393,2.588,1394,1.912,1395,5.916,1396,6.673,1397,1.912,1398,3.046,1399,1.912,1400,1.912,1401,2.588,1402,1.912,1403,1.912,1404,1.912,1405,3.046,1406,1.912,1407,3.046,1408,2.588,1409,2.588,1410,3.046,1411,3.046,1412,1.912,1413,1.912,1414,3.046,1415,1.912,1416,1.912,1417,3.046,1418,1.912,1419,3.046,1420,3.046,1421,3.046,1422,3.046,1423,1.912,1424,3.046,1425,1.912,1426,1.912,1427,3.046,1428,2.588,1429,1.912,1430,1.912,1431,4.329,1432,1.912,1433,1.912,1434,1.912,1435,1.912,1436,1.912,1437,1.912,1438,1.912,1439,1.912,1440,3.046,1441,1.912,1442,5.916,1443,1.912,1444,1.912,1445,1.912,1446,1.912,1447,1.912,1448,1.912,1449,1.912,1450,1.912,1451,1.912,1452,3.796,1453,1.912,1454,1.912,1455,1.912,1456,1.912,1457,1.912,1458,1.912,1459,1.912,1460,1.912,1461,1.912,1462,1.912,1463,1.912,1464,1.912,1465,3.046,1466,1.912,1467,1.912,1468,1.912,1469,1.625,1470,1.912,1471,1.912]],["title/interfaces/SelectedDocument.html",[149,0.624,412,1.987]],["body/interfaces/SelectedDocument.html",[0,0.862,2,1.213,3,0.285,4,0.254,9,0.224,11,0.528,15,3.318,22,1.462,23,1.29,25,1.462,27,1.462,29,0.567,30,1.361,34,4.447,43,0.024,45,0.677,49,1.666,52,2.479,54,0.743,55,1.786,65,0.935,68,1.281,71,0.469,72,0.452,74,0.383,75,0.316,77,1.059,101,2.902,131,2.644,145,1.213,148,2.086,149,0.99,152,0.012,153,0.016,154,0.012,194,1.012,199,1.937,205,1.92,208,1.972,215,2.917,216,2.37,217,2.086,221,2.652,222,3.029,223,2.073,225,1.579,234,2.974,310,2.49,381,1.846,382,3.82,388,2.252,403,2.736,412,3.15,414,3.12,415,1.92,416,1.966,421,2.449,427,1.92,431,2.736,435,2.097,437,2.086,443,3.422,449,3.66,450,2.788,469,3.621,484,1.559,521,3.029,540,3.318,547,3.68,553,2.736,619,2.467,676,2.902,699,2.402,801,2.073,810,2.073,855,2.467,856,2.467,857,2.467,864,2.467,894,2.467,941,2.736,950,2.736,953,3.68,988,3.318,1042,2.252,1087,2.736,1093,2.073,1170,2.736,1187,2.736,1205,3.749,1472,2.736,1473,5.033,1474,4.165,1475,2.736,1476,5.033,1477,3.097,1478,3.097,1479,3.097,1480,3.097,1481,3.097,1482,3.097,1483,3.097,1484,3.097,1485,4.165,1486,3.097,1487,4.165,1488,4.165,1489,4.165,1490,3.097,1491,4.165,1492,3.097,1493,4.165,1494,3.097,1495,3.097,1496,3.097,1497,3.097,1498,3.097,1499,3.097,1500,3.097,1501,3.097,1502,3.097,1503,3.097,1504,3.097,1505,3.097,1506,3.097,1507,4.165,1508,3.097,1509,4.165,1510,3.097,1511,3.097]],["title/components/SettingsComponent.html",[0,0.544,143,1.163]],["body/components/SettingsComponent.html",[0,0.975,1,1.341,2,1.675,3,0.296,4,0.264,5,1.733,6,1.733,7,1.733,8,1.733,9,0.233,11,0.728,13,1.996,17,1.118,21,1.262,22,2.792,23,2.497,25,2.018,27,2.018,29,0.59,35,1.397,40,1.305,42,0.99,43,0.024,44,1.226,45,0.646,46,0.876,51,0.724,52,2.018,54,1.338,59,1.397,63,1.895,65,0.882,68,0.99,71,0.363,72,0.47,74,0.393,75,0.329,77,0.899,93,1.621,94,1.568,98,2.65,99,2.975,100,2.155,101,1.856,105,2.155,106,2.155,111,3.213,112,2.155,117,2.155,120,2.155,121,1.262,122,2.152,123,2.3,124,1.733,125,2.751,126,1.733,127,1.733,128,1.341,129,1.733,130,1.341,131,1.621,132,1.733,133,1.341,134,1.733,135,1.341,136,1.733,137,1.427,138,1.733,139,1.341,140,1.733,141,1.262,142,1.733,143,2.003,144,1.733,145,1.262,146,1.733,147,1.341,148,2.127,149,1.119,150,1.733,151,1.733,152,0.012,153,0.017,154,0.012,204,3.87,206,4.073,207,2.845,208,1.88,209,5.227,210,3.22,211,3.22,212,3.22,213,3.22,214,2.152,215,2.975,216,2.152,217,1.895,218,4.24,219,4.275,220,4.799,221,2.018,222,3.109,223,2.862,224,4.24,225,0.876,226,3.109,227,3.109,228,4.833,229,2.465,230,2.854,231,4.275,232,4.275,233,3.777,234,2.3,235,4.275,236,3.22,237,3.22,272,2.341,353,1.341,402,2.65,404,3.109,577,3.22,812,2.862,818,2.862,902,4.275,1146,4.275,1512,5.03,1513,3.789,1514,3.789,1515,3.789,1516,5.03,1517,5.03,1518,5.03,1519,5.03,1520,5.03,1521,3.789]],["title/components/SidenavComponent.html",[0,0.544,145,1.163]],["body/components/SidenavComponent.html",[0,0.841,1,0.906,2,1.683,3,0.2,4,0.179,5,2.311,6,1.171,7,1.171,8,1.171,9,0.158,11,0.783,13,1.349,15,3.421,17,0.755,21,0.853,22,2.615,23,2.329,25,1.53,27,1.53,29,0.399,30,1.059,34,1.923,35,1.059,40,1.507,42,1.321,43,0.024,44,1.231,45,0.705,46,1.168,49,1.171,51,1.032,52,2.518,53,1.501,54,1.196,55,1.87,65,0.828,68,1.192,71,0.365,72,0.318,74,0.298,75,0.222,77,0.903,85,2.273,87,1.457,94,0.711,96,2.875,97,2.985,98,2.402,99,2.662,100,1.457,101,2.235,105,1.457,106,2.17,107,1.733,109,1.457,112,1.457,113,2.594,117,2.594,119,1.733,120,1.457,121,0.853,122,1.632,123,1.745,124,1.171,125,2.311,126,1.171,127,1.171,128,0.906,129,1.171,130,0.906,131,2.76,132,1.171,133,0.906,134,1.171,135,0.906,136,1.171,137,0.964,138,1.171,139,0.906,140,1.171,141,0.853,142,1.171,143,0.853,144,1.171,145,1.683,146,1.171,147,0.906,148,2.211,149,0.815,150,1.171,151,1.171,152,0.008,153,0.013,154,0.008,194,0.711,199,1.84,208,1.955,215,2.847,216,1.951,217,1.717,221,2.68,222,3.123,223,2.17,225,1.533,234,2.913,272,1.582,310,2.455,381,1.903,382,3.879,388,2.818,402,2.01,403,3.424,404,2.358,412,2.594,414,3.178,415,2.01,416,2.027,421,2.399,427,2.01,431,2.865,435,1.951,437,1.903,443,3.502,449,3.728,450,2.875,469,3.623,484,1.632,521,2.358,540,2.583,547,2.865,553,1.923,559,2.583,560,1.733,561,2.818,562,2.583,564,2.865,565,2.17,566,2.358,619,2.583,633,2.176,676,1.255,680,1.582,699,1.255,730,1.255,801,1.457,810,1.457,855,3.087,856,3.087,857,3.087,864,1.733,894,1.733,941,2.865,950,1.923,953,2.865,988,3.421,1042,2.358,1087,2.865,1093,2.17,1170,2.865,1187,2.865,1205,3.836,1472,1.923,1473,2.176,1474,3.875,1475,2.865,1476,5.481,1477,3.242,1478,3.875,1479,3.875,1480,3.242,1481,3.875,1482,3.242,1483,3.242,1484,3.875,1485,4.295,1486,3.875,1487,4.295,1488,4.295,1489,4.295,1490,3.242,1491,4.816,1492,2.176,1493,3.242,1494,3.242,1495,3.242,1496,2.176,1497,3.242,1498,3.242,1499,2.176,1500,2.176,1501,2.176,1502,2.176,1503,2.176,1504,2.176,1505,2.176,1506,2.176,1507,3.242,1508,2.176,1509,3.242,1510,4.295,1511,3.242,1522,3.815,1523,3.815,1524,3.815,1525,3.815,1526,2.56,1527,2.56,1528,2.56,1529,2.56,1530,2.56,1531,2.56,1532,2.56,1533,2.56,1534,2.56,1535,2.56,1536,2.56,1537,2.56,1538,2.56,1539,3.242,1540,3.815,1541,2.56,1542,2.56,1543,2.56,1544,5.87,1545,3.815,1546,5.054,1547,3.815,1548,3.242,1549,2.56,1550,2.56,1551,3.815,1552,2.56,1553,3.815]],["title/pipes/SplitUpPipe.html",[877,1.597,884,1.236]],["body/pipes/SplitUpPipe.html",[3,0.314,4,0.28,9,0.247,11,0.757,17,1.184,19,2.814,21,1.337,35,1.115,40,0.928,42,1.049,43,0.024,44,1.421,45,0.459,46,0.928,49,2.657,51,0.767,53,1.115,54,1.3,65,0.963,71,0.5,72,0.499,74,0.481,75,0.534,77,1.22,152,0.013,153,0.017,154,0.013,229,2.847,260,1.928,269,1.772,288,1.513,319,2.284,353,2.057,363,1.542,440,1.512,518,2.331,667,2.624,755,2.85,789,2.877,877,2.39,884,2.505,924,2.481,943,4.042,1004,2.284,1009,4.042,1013,3.943,1341,1.968,1342,3.23,1343,2.481,1344,4.166,1345,3.538,1346,4.166,1348,3.933,1349,2.718,1350,1.968,1351,2.718,1352,2.718,1353,1.968,1354,2.718,1355,3.538,1356,3.538,1357,2.718,1358,2.718,1359,2.718,1360,3.538,1361,3.538,1362,2.718,1554,4.015]],["title/components/UserInterfaceComponent.html",[0,0.544,147,1.236]],["body/components/UserInterfaceComponent.html",[0,0.821,1,0.856,2,1.217,3,0.189,4,0.169,5,1.105,6,1.105,7,1.105,8,1.105,9,0.149,11,0.35,13,2.778,21,0.805,22,2.585,23,2.342,25,1.466,27,1.466,29,0.569,30,1.015,40,1.49,43,0.024,44,0.793,45,0.728,53,1.223,54,0.898,57,4.713,59,1.646,63,1.849,65,0.491,68,0.632,71,0.35,72,0.3,74,0.189,75,0.21,85,0.97,87,3.373,88,2.054,89,1.815,91,2.999,92,2.982,93,2.647,94,1.881,95,4.109,96,3.155,97,3.259,98,3.124,99,3.485,100,2.079,101,1.79,102,3.324,103,1.636,104,1.273,105,3.155,106,3.155,107,2.474,109,2.079,111,3.155,112,3.373,113,3.702,117,2.506,120,2.079,121,1.467,122,1.563,123,1.671,124,1.105,125,2.245,126,1.105,127,1.105,128,0.856,129,1.105,130,0.856,131,1.034,132,1.105,133,0.856,134,1.105,135,0.856,136,1.105,137,0.91,138,1.105,139,0.856,140,1.105,141,0.805,142,1.105,143,0.805,144,1.105,145,0.805,146,1.105,147,1.738,148,2.524,149,0.943,150,1.105,151,1.105,152,0.008,153,0.012,154,0.008,169,3.79,171,1.849,199,1.38,204,2.722,206,4.406,209,4.887,214,1.563,215,3.311,216,2.537,217,2.089,218,2.744,221,2.481,224,3.308,225,1.219,238,1.105,287,0.91,291,1.034,379,1.466,402,1.925,404,2.258,415,1.925,427,1.925,559,2.982,560,2.982,561,3.034,562,2.474,564,1.815,565,1.375,566,1.494,567,3.754,568,2.982,569,1.815,570,2.054,584,3.57,585,2.744,586,2.982,587,2.982,590,1.815,594,3.744,612,5.257,615,1.636,631,2.054,634,2.054,639,4.324,641,3.687,645,1.815,647,1.815,656,1.925,698,2.079,730,1.184,755,1.034,817,1.273,852,2.474,962,2.054,1049,4.887,1082,3.105,1093,2.793,1205,2.474,1212,2.054,1469,3.105,1539,4.173,1548,2.054,1555,2.054,1556,4.405,1557,3.654,1558,5.273,1559,4.405,1560,4.405,1561,4.405,1562,4.405,1563,4.405,1564,4.405,1565,4.405,1566,4.405,1567,4.405,1568,4.405,1569,2.417,1570,4.91,1571,3.654,1572,2.417,1573,6.508,1574,3.654,1575,3.654,1576,2.417,1577,3.654,1578,3.654,1579,3.654,1580,4.405,1581,2.417,1582,3.654,1583,2.417,1584,3.654,1585,2.417,1586,2.417,1587,2.417,1588,5.546,1589,2.417,1590,3.654,1591,5.273,1592,2.417,1593,2.417,1594,2.417,1595,2.417,1596,4.405,1597,2.417,1598,3.654,1599,3.654,1600,3.654,1601,3.654,1602,3.654,1603,5.546,1604,2.417,1605,2.054,1606,3.654,1607,4.405,1608,4.405,1609,5.273,1610,4.405,1611,2.417,1612,2.417,1613,2.417,1614,2.417,1615,2.417,1616,2.417,1617,2.417,1618,4.405,1619,2.417,1620,3.654,1621,2.417,1622,2.417,1623,4.405,1624,4.405,1625,2.417,1626,2.417,1627,2.417,1628,3.654,1629,4.91,1630,4.405,1631,3.654,1632,2.417,1633,3.654,1634,2.417,1635,3.654,1636,3.654,1637,2.054,1638,2.417,1639,2.417]],["title/coverage.html",[1640,4.047]],["body/coverage.html",[0,1.065,1,1.303,9,0.227,10,3.128,39,2.275,43,0.024,45,0.421,75,0.428,85,2.922,94,1.546,128,1.303,130,1.303,133,1.303,135,1.303,137,1.386,139,1.303,141,1.226,143,1.226,145,1.226,147,1.303,149,1.141,152,0.012,153,0.016,154,0.012,157,1.303,191,2.492,204,2.275,206,3.768,207,3.705,225,0.851,238,1.683,240,4.198,269,1.98,370,2.492,378,2.492,408,2.094,411,1.386,412,2.094,434,5.27,591,3.128,592,2.764,593,3.128,649,4.048,667,1.477,675,1.939,688,2.094,697,1.939,851,3.128,867,3.128,868,2.764,869,3.128,877,1.683,882,2.094,884,2.195,923,2.764,979,2.764,981,3.128,982,3.128,997,2.728,1005,3.128,1006,3.128,1049,2.764,1053,3.128,1074,2.492,1190,3.128,1231,3.705,1232,3.705,1241,2.764,1249,3.128,1282,2.764,1341,1.804,1342,3.675,1343,3.675,1350,1.804,1353,1.804,1369,3.128,1377,2.764,1378,2.764,1379,2.764,1380,2.764,1381,2.764,1382,2.764,1383,2.764,1385,2.764,1386,2.764,1388,2.764,1472,3.705,1555,3.128,1640,3.128,1641,3.681,1642,3.681,1643,3.681,1644,3.681,1645,3.681,1646,3.681,1647,3.681,1648,3.681,1649,3.681,1650,3.681,1651,3.681,1652,3.681,1653,3.681,1654,3.681,1655,3.681,1656,4.935,1657,3.681,1658,3.681,1659,4.935,1660,4.935,1661,4.935,1662,3.681,1663,3.681,1664,3.681,1665,5.566,1666,7.216,1667,3.681,1668,3.681,1669,3.681,1670,3.681,1671,3.681,1672,3.681,1673,3.681,1674,3.128,1675,3.128,1676,3.128,1677,3.681,1678,3.681,1679,3.681,1680,3.681,1681,3.681,1682,3.128,1683,3.128,1684,3.128,1685,3.128,1686,3.128,1687,3.128,1688,4.18,1689,3.128,1690,3.128,1691,4.193,1692,3.128,1693,3.681,1694,3.681]],["title/dependencies.html",[158,2.212,1695,2.919]],["body/dependencies.html",[43,0.024,65,0.685,72,0.633,152,0.017,153,0.02,154,0.017,158,2.687,176,5.155,177,4.555,184,4.334,185,3.829,187,2.687,221,2.046,666,2.499,670,3.749,921,3.829,922,4.334,1029,3.453,1033,3.829,1042,3.152,1043,4.334,1236,4.334,1475,3.829,1696,5.1,1697,7.07,1698,5.1,1699,6.066,1700,5.1,1701,5.1,1702,5.1,1703,5.1,1704,5.1,1705,5.1,1706,5.1,1707,5.1,1708,5.1,1709,5.1,1710,5.1,1711,5.1,1712,5.1,1713,5.1,1714,5.1,1715,5.1,1716,5.1,1717,5.1,1718,5.1,1719,5.1]],["title/miscellaneous/enumerations.html",[1720,1.43,1721,3.569]],["body/miscellaneous/enumerations.html",[29,0.869,43,0.021,45,0.638,152,0.018,153,0.021,154,0.018,221,2.238,378,3.777,387,5.432,445,4.741,464,4.741,484,2.387,485,4.741,486,4.189,1720,2.734,1721,4.741,1722,4.741]],["title/miscellaneous/functions.html",[243,2.843,1720,1.43]],["body/miscellaneous/functions.html",[11,1.009,17,1.247,29,0.459,42,1.822,43,0.024,44,1.514,45,0.654,46,1.612,51,1.367,54,1.25,59,1.872,65,0.725,68,1.603,152,0.01,153,0.014,154,0.01,214,1.26,223,1.676,226,1.82,227,1.82,230,1.809,240,1.994,241,1.82,243,1.994,260,1.866,269,1.373,276,1.994,285,2.212,286,3.174,287,1.592,288,1.039,290,2.212,291,2.115,292,3.174,293,3.174,294,2.212,296,3.174,297,2.212,300,1.994,310,1.592,353,2.221,363,0.869,379,1.696,381,1.109,411,2.708,416,1.181,421,2.556,428,2.071,435,1.26,437,1.862,440,2.363,447,2.612,459,2.803,479,1.552,494,3.013,496,3.416,505,2.227,518,2.46,578,2.633,605,3.366,614,2.227,649,1.676,650,1.443,651,1.443,656,2.604,658,1.552,661,2.612,664,1.552,665,2.647,669,2.612,675,1.552,676,3.445,679,3.216,692,1.676,694,1.82,695,1.82,698,2.812,700,1.82,701,4.056,702,1.676,706,1.676,708,3.073,709,1.676,722,1.676,723,2.405,724,1.676,730,2.071,731,2.405,732,1.676,745,1.676,759,2.812,760,3.338,761,1.676,762,1.82,763,2.612,765,1.82,766,2.405,768,1.676,775,1.82,793,2.423,796,2.612,797,3.338,798,2.612,799,2.405,800,1.82,809,1.82,812,1.676,813,1.82,814,3.055,815,1.82,816,3.055,817,1.552,818,2.405,819,1.82,820,1.82,822,2.612,823,1.82,824,1.82,846,1.82,847,1.82,906,2.503,923,3.174,1377,3.174,1378,3.174,1379,3.174,1380,3.174,1381,3.174,1382,3.174,1383,3.174,1385,3.174,1386,3.174,1388,3.174,1393,2.503,1401,2.503,1674,3.592,1675,3.592,1676,3.592,1682,3.592,1683,3.592,1684,3.592,1685,3.592,1686,3.592,1687,3.592,1688,2.212,1689,3.592,1720,1.443,1723,6.825,1724,3.592,1725,4.944,1726,2.945,1727,4.227,1728,2.945,1729,2.945,1730,2.945,1731,2.945,1732,2.945,1733,2.945,1734,2.503,1735,2.945,1736,2.945,1737,2.945,1738,2.945]],["title/index.html",[29,0.454,554,2.191,1739,2.919]],["body/index.html",[0,0.994,4,0.344,23,1.749,43,0.02,44,1.073,58,4.198,68,1.291,69,3.709,152,0.016,153,0.02,154,0.016,171,1.861,225,1.142,284,3.344,463,4.324,539,3.709,565,3.965,653,2.602,748,2.81,1042,3.947,1093,2.81,1115,4.198,1122,4.198,1140,4.198,1175,4.198,1214,4.198,1265,3.709,1409,5.428,1428,4.198,1605,5.634,1734,4.198,1740,4.94,1741,5.951,1742,6.387,1743,4.94,1744,4.94,1745,5.951,1746,6.784,1747,4.94,1748,4.94,1749,4.94,1750,4.94,1751,4.94,1752,4.94,1753,4.94,1754,6.784,1755,4.94,1756,4.94,1757,4.94,1758,4.94,1759,4.198,1760,5.951,1761,5.951,1762,6.63,1763,4.94,1764,5.951,1765,5.951,1766,4.94,1767,4.94,1768,4.94,1769,4.94,1770,6.387,1771,3.709,1772,4.94]],["title/modules.html",[157,1.686]],["body/modules.html",[43,0.021,152,0.018,153,0.021,154,0.018,156,3.648,157,1.907,167,3.33,168,2.838,177,5.121,671,4.215,1022,3.648,1026,3.33,1047,3.33,1188,5.796,1221,3.648,1225,3.33,1773,6.82,1774,6.82,1775,7.136]],["title/overview.html",[1771,3.576]],["body/overview.html",[1,2.392,2,1.424,43,0.024,94,1.187,121,1.424,128,2.119,130,2.119,133,2.119,135,2.119,137,2.254,139,2.119,141,1.993,143,1.993,145,1.993,147,2.119,152,0.014,153,0.018,154,0.014,155,1.424,156,4.676,157,1.514,158,2.253,159,2.432,160,2.642,161,2.642,162,1.955,163,3.634,164,3.634,165,3.634,166,3.634,167,3.699,168,3.428,169,3.096,170,2.432,171,1.61,205,2.253,239,3.211,287,1.61,291,1.83,877,3.091,882,3.845,979,3.211,1004,2.432,1022,4.912,1023,3.634,1024,3.634,1025,3.634,1026,3.699,1047,4.429,1221,4.631,1222,3.634,1223,3.634,1224,3.634,1225,3.699,1230,2.895,1341,3.312,1350,3.312,1353,3.312,1365,3.634,1366,3.634,1367,3.634,1637,3.634,1771,3.211,1776,4.276,1777,4.276,1778,4.276,1779,4.276]],["title/routes.html",[18,2.709]],["body/routes.html",[18,3.238,43,0.021,152,0.019,153,0.021,154,0.019]],["title/miscellaneous/typealiases.html",[1720,1.43,1780,4.199]],["body/miscellaneous/typealiases.html",[29,0.867,43,0.021,45,0.73,152,0.018,153,0.021,154,0.018,199,1.745,260,1.745,378,3.771,381,2.098,469,3.633,477,2.934,484,2.383,487,4.734,1720,2.729,1722,4.734,1781,5.57]],["title/miscellaneous/variables.html",[630,2.843,1720,1.43]],["body/miscellaneous/variables.html",[9,0.259,23,1.487,29,0.654,30,1.167,43,0.024,45,0.825,53,1.839,54,1.319,55,2.637,59,1.494,65,0.889,94,1.167,104,2.835,152,0.014,153,0.018,154,0.02,157,1.905,514,2.835,630,2.844,650,2.637,651,2.637,652,3.061,653,2.835,654,3.061,658,3.656,667,2.159,750,2.213,789,1.685,988,2.844,992,3.643,1002,3.155,1080,3.155,1117,3.155,1161,3.155,1231,3.155,1232,4.041,1237,3.57,1238,3.57,1241,4.041,1242,5.721,1243,3.57,1244,3.57,1282,3.155,1283,3.57,1285,3.57,1287,3.57,1289,3.57,1291,3.57,1293,3.57,1295,3.57,1297,3.57,1299,3.57,1300,3.57,1302,3.57,1304,3.57,1306,3.57,1309,3.57,1311,3.57,1314,3.57,1316,3.57,1318,3.57,1320,3.57,1321,3.57,1323,3.57,1324,3.57,1326,3.57,1328,3.57,1329,3.57,1331,3.57,1333,3.57,1335,3.57,1337,3.57,1339,3.57,1408,3.57,1688,3.155,1690,3.57,1691,5.32,1692,3.57,1720,2.059,1724,3.57,1759,4.573,1782,4.202,1783,4.202,1784,4.202,1785,4.202,1786,4.202,1787,4.202,1788,4.202,1789,4.202,1790,4.202]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0).tostring(16",{"_index":360,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.0",{"_index":719,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["0.0031308",{"_index":349,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.04045",{"_index":341,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.05",{"_index":1201,"title":{},"body":{"components/InitComponent.html":{}}}],["0.055",{"_index":343,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["0.1",{"_index":1608,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["0.11.3",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1613,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["0.25",{"_index":1209,"title":{},"body":{"components/InitComponent.html":{}}}],["0.25em",{"_index":631,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["0.4em",{"_index":646,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.5.5",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["0.5em",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["0.7",{"_index":642,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0.95",{"_index":1626,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["0.9em",{"_index":644,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["0/1",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["039",{"_index":1021,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["0px",{"_index":975,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1",{"_index":287,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["1.0",{"_index":711,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["1.055",{"_index":344,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["1.4",{"_index":582,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["1.65",{"_index":974,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["1.65em",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1552,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1/4",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["10/10",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["100px",{"_index":580,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["10em",{"_index":1206,"title":{},"body":{"components/InitComponent.html":{}}}],["11",{"_index":1777,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["11.1.4",{"_index":1743,"title":{},"body":{"index.html":{}}}],["11.2.11",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["11.2.12",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["12.92",{"_index":346,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["12/15",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":634,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["128px",{"_index":1610,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["12em",{"_index":1219,"title":{},"body":{"components/InitComponent.html":{}}}],["12px",{"_index":590,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["14/14",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["140px",{"_index":1213,"title":{},"body":{"components/InitComponent.html":{}}}],["15px",{"_index":589,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["16",{"_index":322,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["170px",{"_index":1614,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["176",{"_index":1620,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["19/19",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["19/22",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["19px",{"_index":1611,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["1em",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["1fr",{"_index":1546,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1px",{"_index":570,"title":{},"body":{"components/ComparisonComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["2",{"_index":291,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["2.0.8",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["2.4",{"_index":345,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["2.5em",{"_index":1624,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["2/2",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1216,"title":{},"body":{"components/InitComponent.html":{}}}],["25",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":338,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["2em",{"_index":585,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["2px",{"_index":639,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["3",{"_index":1637,"title":{},"body":{"components/UserInterfaceComponent.html":{},"overview.html":{}}}],["3/10",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["37/39",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["372px",{"_index":1638,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["39/43",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["393px",{"_index":1217,"title":{},"body":{"components/InitComponent.html":{}}}],["3em",{"_index":636,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4/4",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1543,"title":{},"body":{"components/SidenavComponent.html":{}}}],["40px",{"_index":1548,"title":{},"body":{"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["4em",{"_index":643,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["4px",{"_index":588,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["5",{"_index":1778,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":562,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["5000",{"_index":1151,"title":{},"body":{"components/InitComponent.html":{}}}],["540px",{"_index":1634,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["55",{"_index":1618,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["57",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":1621,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["5px",{"_index":569,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["6",{"_index":1779,"title":{},"body":{"overview.html":{}}}],["6.6.7",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["66",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1607,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["7/7",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1629,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["8",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1609,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["90",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["96px",{"_index":1208,"title":{},"body":{"components/InitComponent.html":{}}}],["9a",{"_index":306,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["a.concat([...c",{"_index":1504,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["absolute",{"_index":584,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["according",{"_index":339,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{}}}],["active",{"_index":490,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["actual",{"_index":530,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["actual_component",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["add",{"_index":326,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["add_circle_outline",{"_index":1601,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["adding",{"_index":328,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["additionalproperties",{"_index":1244,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["adjust",{"_index":1600,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["again",{"_index":930,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["ajv",{"_index":1236,"title":{},"body":{"injectables/JsonValidateService.html":{},"dependencies.html":{}}}],["ajv.compile(searchqueryschema",{"_index":1247,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["aliases",{"_index":1781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["allow",{"_index":1178,"title":{},"body":{"components/InitComponent.html":{}}}],["allwords",{"_index":951,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["already",{"_index":752,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["amp",{"_index":1015,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["angular",{"_index":1042,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1029,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1033,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1315,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":621,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1340,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":1325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1319,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1312,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1330,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":1322,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1332,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1334,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":1307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1336,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":1129,"title":{},"body":{"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1296,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":1317,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1298,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1338,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1327,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"dependencies.html":{}}}],["angularresizedeventmodule",{"_index":1041,"title":{},"body":{"modules/HomeModule.html":{}}}],["any).default",{"_index":1173,"title":{},"body":{"components/InitComponent.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{}}}],["appmodule",{"_index":156,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":897,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["approuter",{"_index":167,"title":{"modules/AppRouter.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":204,"title":{"interfaces/AppSettings.html":{}},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["aren't",{"_index":785,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["array",{"_index":514,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["array.from(wordmap.values",{"_index":1501,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["arrays",{"_index":693,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["arrow_backback",{"_index":1195,"title":{},"body":{"components/InitComponent.html":{}}}],["artifacts",{"_index":1755,"title":{},"body":{"index.html":{}}}],["asking",{"_index":1056,"title":{},"body":{"components/InitComponent.html":{}}}],["assets/example.json",{"_index":1131,"title":{},"body":{"components/InitComponent.html":{}}}],["associated",{"_index":478,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["attached",{"_index":1186,"title":{},"body":{"components/InitComponent.html":{}}}],["attr(data",{"_index":970,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["auto",{"_index":564,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["automatically",{"_index":1750,"title":{},"body":{"index.html":{}}}],["available",{"_index":1188,"title":{},"body":{"components/InitComponent.html":{},"modules.html":{}}}],["away",{"_index":826,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["b",{"_index":254,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["back",{"_index":281,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{}}}],["background",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["bag",{"_index":661,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["bar",{"_index":615,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{},"components/UserInterfaceComponent.html":{}}}],["base",{"_index":290,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":330,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["becomes",{"_index":489,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["before",{"_index":962,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["behaviorsubject",{"_index":1277,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["behaviorsubject(0",{"_index":1273,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(false",{"_index":1266,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(undefined",{"_index":1422,"title":{},"body":{"injectables/QueryService.html":{}}}],["being",{"_index":233,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["belongs",{"_index":678,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["beta.33",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["binding",{"_index":655,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["black",{"_index":1632,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["block",{"_index":647,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":567,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["bottom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["bound",{"_index":610,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["bowentries1",{"_index":762,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["bowentries2",{"_index":763,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":586,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["browse",{"_index":1775,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1754,"title":{},"body":{"index.html":{}}}],["button",{"_index":1205,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["buttons",{"_index":1204,"title":{},"body":{"components/InitComponent.html":{}}}],["c",{"_index":1503,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["c1",{"_index":354,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["c1.mix(c2",{"_index":358,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["c2",{"_index":356,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["calc",{"_index":1627,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calc(100vh",{"_index":1218,"title":{},"body":{"components/InitComponent.html":{}}}],["calc(1em",{"_index":1628,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calc(2em",{"_index":1615,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calc(50",{"_index":645,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["calc(8px",{"_index":1623,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["calculate",{"_index":781,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["calculatecosinedistance",{"_index":1682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatecosinedistance(weight",{"_index":820,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["calculates",{"_index":614,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["calculating",{"_index":846,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["calculation",{"_index":813,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1107,"title":{},"body":{"components/InitComponent.html":{}}}],["camera",{"_index":1573,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["canactivate",{"_index":190,"title":{},"body":{"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{}}}],["card",{"_index":1553,"title":{},"body":{"components/SidenavComponent.html":{}}}],["catch",{"_index":1166,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["catch(err",{"_index":1136,"title":{},"body":{"components/InitComponent.html":{}}}],["center",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["centercamera",{"_index":1565,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["change",{"_index":1093,"title":{},"body":{"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["changecamerazoom",{"_index":1566,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["changed",{"_index":223,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["changedetection",{"_index":871,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy",{"_index":917,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":872,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["changes",{"_index":226,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["changes.selecteddocuments",{"_index":502,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changes.selecteddocuments.currentvalue.length",{"_index":503,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["changesetting",{"_index":1512,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changesetting(setting",{"_index":235,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["changesvalue",{"_index":1733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["character",{"_index":364,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["characters",{"_index":956,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{}}}],["check",{"_index":1734,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["checkbox",{"_index":576,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["checked",{"_index":452,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{}}}],["checking",{"_index":1419,"title":{},"body":{"injectables/QueryService.html":{}}}],["checkmark",{"_index":620,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["checkoverflow",{"_index":394,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checkoverflow(element",{"_index":423,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["checks",{"_index":426,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child",{"_index":902,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{}}}],["child(even",{"_index":574,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["child(odd",{"_index":572,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["children",{"_index":933,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["circle",{"_index":1210,"title":{},"body":{"components/InitComponent.html":{}}}],["class",{"_index":75,"title":{"classes/Color.html":{},"classes/DefaultColors.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["classes",{"_index":239,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"overview.html":{}}}],["clearhighlightedwords",{"_index":1510,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clears",{"_index":431,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clearwordselection",{"_index":395,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["cli",{"_index":1742,"title":{},"body":{"index.html":{}}}],["clickedcompare",{"_index":1522,"title":{},"body":{"components/SidenavComponent.html":{}}}],["clickedcompare(e",{"_index":1495,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicking",{"_index":1494,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["clicks",{"_index":1485,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["close",{"_index":1539,"title":{},"body":{"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["closed",{"_index":1488,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closes",{"_index":1483,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closesidenav",{"_index":1523,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closesidenav(e",{"_index":1490,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["closest",{"_index":1582,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["clumping",{"_index":818,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["clumpingmodifier",{"_index":210,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1023,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1024,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":1025,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_initmodule",{"_index":1222,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_declarations",{"_index":1223,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_initmodule_imports",{"_index":1224,"title":{},"body":{"modules/InitModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1365,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1366,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1367,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":284,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{},"index.html":{}}}],["color",{"_index":238,"title":{"classes/Color.html":{}},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["color(r",{"_index":325,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["color.fromhex('#37b03b",{"_index":373,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["color.fromhex('#4537b0",{"_index":377,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["color.fromhex('#b03737",{"_index":375,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["colors",{"_index":261,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["colorsrgbgradient",{"_index":244,"title":{},"body":{"classes/Color.html":{}}}],["colorsrgbgradient(other",{"_index":257,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["column",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["columns",{"_index":1545,"title":{},"body":{"components/SidenavComponent.html":{}}}],["command",{"_index":1772,"title":{},"body":{"index.html":{}}}],["common",{"_index":1181,"title":{},"body":{"components/InitComponent.html":{}}}],["commonmodule",{"_index":1028,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{}}}],["compare",{"_index":708,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["compareclick",{"_index":1486,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["compared",{"_index":606,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["comparekeyboard_arrow_right",{"_index":1540,"title":{},"body":{"components/SidenavComponent.html":{}}}],["comparing",{"_index":1479,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparingwindowopen",{"_index":1481,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparison",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["comparison'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["comparison.component.html",{"_index":385,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison.component.scss",{"_index":384,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["comparison/comparison.component",{"_index":864,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["comparisoncomponent",{"_index":128,"title":{"components/ComparisonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["comparisonentrycomponent",{"_index":130,"title":{"components/ComparisonEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"overview.html":{}}}],["compression",{"_index":278,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["consisting",{"_index":660,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["const",{"_index":194,"title":{},"body":{"modules/AppRouter.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"modules/MaterialModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(escapehtml",{"_index":881,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["constructor(loadingservice",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(private",{"_index":488,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["constructor(protected",{"_index":299,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["constructor(queryservice",{"_index":407,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["constructor(r",{"_index":252,"title":{},"body":{"classes/Color.html":{}}}],["contain",{"_index":1500,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["contained",{"_index":1474,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["container",{"_index":1542,"title":{},"body":{"components/SidenavComponent.html":{}}}],["containing",{"_index":208,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["contains",{"_index":941,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["content'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["content.component",{"_index":1046,"title":{},"body":{"modules/HomeModule.html":{}}}],["content.component.html",{"_index":874,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.scss",{"_index":873,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts",{"_index":869,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:113",{"_index":893,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:22",{"_index":888,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:26",{"_index":889,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:30",{"_index":890,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:34",{"_index":891,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:38",{"_index":892,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:43",{"_index":883,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:50",{"_index":915,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:51",{"_index":916,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:54",{"_index":914,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:58",{"_index":913,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:68",{"_index":898,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content.component.ts:94",{"_index":905,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["content/document",{"_index":868,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["continue",{"_index":786,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["contributed",{"_index":738,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["control",{"_index":1606,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["controls",{"_index":1603,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["conversionre",{"_index":304,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["convert",{"_index":316,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["convertedcontent",{"_index":875,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converting",{"_index":885,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["converts",{"_index":270,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["corpus",{"_index":411,"title":{"interfaces/Corpus.html":{}},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["corpus.dictionary[id",{"_index":707,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.dictionary[key",{"_index":705,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities",{"_index":717,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities[id1",{"_index":718,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpus.word_similarities[id1][id2",{"_index":721,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["corpussource",{"_index":1373,"title":{},"body":{"injectables/QueryService.html":{}}}],["corresponding",{"_index":231,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["cosine",{"_index":605,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["cover",{"_index":1200,"title":{},"body":{"components/InitComponent.html":{}}}],["coverage",{"_index":1640,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":793,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["createlinks",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createlinks(nodes",{"_index":847,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["createnodes",{"_index":1684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createnodes(corpus",{"_index":824,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":822,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["cumulatively",{"_index":737,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["current",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["currentcorpus",{"_index":1374,"title":{},"body":{"injectables/QueryService.html":{}}}],["currently",{"_index":414,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["currentzoom",{"_index":1559,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["d",{"_index":840,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["d3",{"_index":670,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"dependencies.html":{}}}],["data",{"_index":828,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["data.data",{"_index":1465,"title":{},"body":{"injectables/QueryService.html":{}}}],["data.worker",{"_index":1435,"title":{},"body":{"injectables/QueryService.html":{}}}],["declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decorators",{"_index":1120,"title":{},"body":{"components/InitComponent.html":{}}}],["decreasecamera",{"_index":1567,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["deep",{"_index":566,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultcolors",{"_index":370,"title":{"classes/DefaultColors.html":{}},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"coverage.html":{}}}],["defaulting",{"_index":1421,"title":{},"body":{"injectables/QueryService.html":{}}}],["defaults",{"_index":790,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["defaultstepzoom",{"_index":1560,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["delete",{"_index":545,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["deny",{"_index":314,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["dependencies",{"_index":158,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["description&nbsp;use",{"_index":1194,"title":{},"body":{"components/InitComponent.html":{}}}],["deselected",{"_index":538,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["deselects",{"_index":501,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["determines",{"_index":906,"title":{},"body":{"components/DocumentContentComponent.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1748,"title":{},"body":{"index.html":{}}}],["development",{"_index":1744,"title":{},"body":{"index.html":{}}}],["deviance",{"_index":1579,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["deviationclose",{"_index":374,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["deviationcorrect",{"_index":372,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["deviationfar",{"_index":376,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["deviations",{"_index":1518,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dictionary",{"_index":650,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["didn't",{"_index":312,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["direction",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["directive",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["directives",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1753,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1757,"title":{},"body":{"index.html":{}}}],["display",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["displayed",{"_index":699,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["displayerror",{"_index":1066,"title":{},"body":{"components/InitComponent.html":{}}}],["displayerror(msg",{"_index":1085,"title":{},"body":{"components/InitComponent.html":{}}}],["displaying",{"_index":1087,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["dist",{"_index":1756,"title":{},"body":{"index.html":{}}}],["distance",{"_index":812,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["distancemodifier",{"_index":211,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["doc",{"_index":841,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["docs",{"_index":832,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["document",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["document's",{"_index":663,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["document'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["document.component.html",{"_index":854,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.component.scss",{"_index":853,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.subtitle",{"_index":866,"title":{},"body":{"components/DocumentComponent.html":{}}}],["document.title",{"_index":865,"title":{},"body":{"components/DocumentComponent.html":{}}}],["documentation",{"_index":1190,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{}}}],["documentcomponent",{"_index":133,"title":{"components/DocumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentcontentcomponent",{"_index":135,"title":{"components/DocumentContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentloadedguard",{"_index":191,"title":{"guards/DocumentLoadedGuard.html":{}},"body":{"modules/AppRouter.html":{},"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["documents",{"_index":416,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["documents/texts",{"_index":1180,"title":{},"body":{"components/InitComponent.html":{}}}],["documentsimilarities",{"_index":386,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["documentsimilarity",{"_index":600,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["done",{"_index":751,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["down",{"_index":534,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["draw",{"_index":1517,"title":{},"body":{"components/SettingsComponent.html":{}}}],["drawer",{"_index":1541,"title":{},"body":{"components/SidenavComponent.html":{}}}],["duration",{"_index":1150,"title":{},"body":{"components/InitComponent.html":{}}}],["dynamic",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":450,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["e.checked",{"_index":626,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["e2e",{"_index":1767,"title":{},"body":{"index.html":{}}}],["e?.target?.files",{"_index":1141,"title":{},"body":{"components/InitComponent.html":{}}}],["each",{"_index":327,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["eeeeee",{"_index":575,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["element",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["element.offsetheight",{"_index":536,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["elements",{"_index":823,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["ellipsis",{"_index":579,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["emit",{"_index":844,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["emits",{"_index":222,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["emitter",{"_index":418,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{}}}],["emitting",{"_index":612,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["end",{"_index":1605,"title":{},"body":{"components/UserInterfaceComponent.html":{},"index.html":{}}}],["enter",{"_index":486,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entire",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{}}}],["entries",{"_index":746,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries.length",{"_index":836,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries1",{"_index":733,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entries2",{"_index":735,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entry",{"_index":444,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["entry'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["entry.component",{"_index":1039,"title":{},"body":{"modules/HomeModule.html":{}}}],["entry.component.html",{"_index":597,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.scss",{"_index":596,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts",{"_index":593,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:17",{"_index":609,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":608,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":603,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":607,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":611,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":613,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.component.ts:47",{"_index":618,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["entry.delete(matchword",{"_index":543,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entry/comparison",{"_index":592,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["entry?.size",{"_index":542,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["entryhoverevent",{"_index":387,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entryhoverevent.enter",{"_index":556,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["enum",{"_index":464,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1721,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1082,"title":{},"body":{"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["errorindicatoroffset",{"_index":1561,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["escape",{"_index":921,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["escapedword",{"_index":960,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["escapehtml",{"_index":876,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{}}}],["escapehtmlpipe",{"_index":882,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["escapes",{"_index":1007,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["escapestringregexp",{"_index":920,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["evaluated",{"_index":912,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["event",{"_index":221,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":215,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["eventually",{"_index":827,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["exact",{"_index":435,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["exactly",{"_index":491,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["exactmatches",{"_index":803,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactmatches[ids[0",{"_index":807,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["exactpairs",{"_index":511,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["exactpairs[key",{"_index":516,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["example",{"_index":1097,"title":{},"body":{"components/InitComponent.html":{}}}],["exampledocument",{"_index":1130,"title":{},"body":{"components/InitComponent.html":{}}}],["execute",{"_index":1764,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1420,"title":{},"body":{"injectables/QueryService.html":{}}}],["explore",{"_index":1179,"title":{},"body":{"components/InitComponent.html":{}}}],["exponent",{"_index":819,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["extendedmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["extract",{"_index":508,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["f]{1,2",{"_index":309,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["f]{1,2})([0",{"_index":308,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["fa",{"_index":307,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["fade",{"_index":583,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fafafa",{"_index":573,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["false",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":1598,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["fff",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["field",{"_index":460,"title":{},"body":{"components/ComparisonComponent.html":{},"modules/MaterialModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file/text",{"_index":1081,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadinsert",{"_index":1192,"title":{},"body":{"components/InitComponent.html":{}}}],["file_uploadupload",{"_index":1197,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader",{"_index":1156,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.onloadend",{"_index":1158,"title":{},"body":{"components/InitComponent.html":{}}}],["filereader.readasbinarystring(this.jsonfile",{"_index":1157,"title":{},"body":{"components/InitComponent.html":{}}}],["files",{"_index":1140,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["files?.length",{"_index":1142,"title":{},"body":{"components/InitComponent.html":{}}}],["files[0",{"_index":1144,"title":{},"body":{"components/InitComponent.html":{}}}],["filter",{"_index":799,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["filter(a",{"_index":1505,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["filter(data",{"_index":1464,"title":{},"body":{"injectables/QueryService.html":{}}}],["filters",{"_index":796,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":1463,"title":{},"body":{"injectables/QueryService.html":{}}}],["finally",{"_index":1466,"title":{},"body":{"injectables/QueryService.html":{}}}],["firing",{"_index":1455,"title":{},"body":{"injectables/QueryService.html":{}}}],["first",{"_index":353,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["first[1",{"_index":520,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["fixed",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["flag",{"_index":1115,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["flex",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["flexmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["font",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["force",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":1215,"title":{},"body":{"components/InitComponent.html":{}}}],["format",{"_index":929,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["formsmodule",{"_index":1031,"title":{},"body":{"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["formula",{"_index":814,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":720,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["fromhex",{"_index":246,"title":{},"body":{"classes/Color.html":{}}}],["fromhex(hexcode",{"_index":265,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["function",{"_index":269,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":243,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1769,"title":{},"body":{"index.html":{}}}],["furthest",{"_index":1584,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["fx",{"_index":684,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["fy",{"_index":686,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["g",{"_index":253,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["g)}${(b.length",{"_index":368,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["gap",{"_index":1550,"title":{},"body":{"components/SidenavComponent.html":{}}}],["generate",{"_index":1409,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["generated",{"_index":1265,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["generateexactpairs",{"_index":396,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generates",{"_index":439,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatesoftpairs",{"_index":397,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generatewordpairs",{"_index":398,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["generating",{"_index":1427,"title":{},"body":{"injectables/QueryService.html":{}}}],["get($color",{"_index":637,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{}}}],["getbarwidth",{"_index":598,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["getdocumenttext",{"_index":1377,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdocumenttext(id",{"_index":1393,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getformattedcontent",{"_index":878,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getmostimportantexactmatches",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmostimportantexactmatches(wordimportancepairs",{"_index":800,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["getmostimportantsoftmatches",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmostimportantsoftmatches(wordimportancepairs",{"_index":809,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["getnodedocumentid",{"_index":1689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnodedocumentid(nodeid",{"_index":1726,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getnormalizedwordimportancepairs",{"_index":1378,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnormalizedwordimportancepairs(id1",{"_index":761,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getreversedwordmap",{"_index":879,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["gets",{"_index":899,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["getsimilarity",{"_index":1379,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsimilarity(id1",{"_index":709,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getsimilarity(w1",{"_index":729,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(w1id",{"_index":744,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarity(wid1",{"_index":783,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getsimilarityword",{"_index":1380,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsimilarityword(word1",{"_index":724,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getsoftcosinemeasure",{"_index":1381,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsoftcosinemeasure(id1",{"_index":1401,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":1739,"title":{"index.html":{}},"body":{}}],["getword",{"_index":1382,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getword(id",{"_index":706,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getword(wid1",{"_index":787,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(wid2",{"_index":788,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getword(word",{"_index":753,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid",{"_index":1383,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwordid(word",{"_index":702,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["getwordid(word1",{"_index":726,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordid(word2",{"_index":728,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["getwordimportancepairs",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwordimportancepairs(bowentries1",{"_index":765,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["github",{"_index":1189,"title":{},"body":{"components/InitComponent.html":{}}}],["give",{"_index":1459,"title":{},"body":{"injectables/QueryService.html":{}}}],["given",{"_index":428,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":1396,"title":{},"body":{"injectables/QueryService.html":{}}}],["go",{"_index":748,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"index.html":{}}}],["gradient",{"_index":258,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["gradient(45deg",{"_index":978,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["gradient(to",{"_index":1616,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["gradient).srgbcompounding",{"_index":359,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["graph",{"_index":671,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["graph/graph.component",{"_index":1035,"title":{},"body":{"modules/HomeModule.html":{}}}],["graphcomponent",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graphdata",{"_index":697,"title":{"interfaces/GraphData.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["graphlink",{"_index":688,"title":{"interfaces/GraphLink.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["graphlinks",{"_index":695,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["graphnode",{"_index":675,"title":{"interfaces/GraphNode.html":{}},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["graphnodes",{"_index":694,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["grid",{"_index":1544,"title":{},"body":{"components/SidenavComponent.html":{}}}],["group",{"_index":677,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["grow",{"_index":635,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["gt",{"_index":1017,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["guard",{"_index":979,"title":{"guards/DocumentLoadedGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":980,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["guards/document",{"_index":192,"title":{},"body":{"modules/AppRouter.html":{}}}],["h1",{"_index":1203,"title":{},"body":{"components/InitComponent.html":{}}}],["h2",{"_index":563,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["hammerjs",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":1184,"title":{},"body":{"components/InitComponent.html":{}}}],["handlechange",{"_index":599,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handlechange(e",{"_index":616,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["handleentryhover",{"_index":399,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handleentryhover(word",{"_index":441,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlefileupload",{"_index":1067,"title":{},"body":{"components/InitComponent.html":{}}}],["handlefileupload(e",{"_index":1090,"title":{},"body":{"components/InitComponent.html":{}}}],["handler",{"_index":449,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handles",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handletextupload",{"_index":1068,"title":{},"body":{"components/InitComponent.html":{}}}],["handlewordhovered",{"_index":1524,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordhovered(word",{"_index":1511,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordschanged",{"_index":1525,"title":{},"body":{"components/SidenavComponent.html":{}}}],["handlewordschanged(wordmap",{"_index":1498,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["handlewordselection",{"_index":400,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handlewordselection(e",{"_index":446,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["handling",{"_index":619,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["happen",{"_index":1361,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["happening",{"_index":985,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["hard",{"_index":558,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["height",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["help",{"_index":1770,"title":{},"body":{"index.html":{}}}],["helper",{"_index":241,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"classes/DefaultColors.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":1191,"title":{},"body":{"components/InitComponent.html":{}}}],["hex",{"_index":283,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["hexadecimal",{"_index":318,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["hexcode",{"_index":267,"title":{},"body":{"classes/Color.html":{}}}],["hexcode.match(conversionre",{"_index":311,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["hidden",{"_index":560,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["hierarchical",{"_index":471,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["highlight",{"_index":965,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.both",{"_index":977,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlight.soft",{"_index":976,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlighted",{"_index":382,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedexactmatches",{"_index":855,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedsoftmatches",{"_index":856,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlightedwordmap",{"_index":857,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["highlighting",{"_index":895,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["highlights",{"_index":870,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["holding",{"_index":410,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{}}}],["holds",{"_index":467,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["home'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["home.component",{"_index":1030,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{}}}],["home.routes",{"_index":1034,"title":{},"body":{"modules/HomeModule.html":{}}}],["homecomponent",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1022,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepage",{"_index":994,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["homeroutes",{"_index":1026,"title":{"modules/HomeRoutes.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules.html":{},"overview.html":{}}}],["hover",{"_index":485,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hovered",{"_index":443,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword",{"_index":388,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["hoveredword.includes(pairseparator",{"_index":942,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["hovering",{"_index":555,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["hovers",{"_index":419,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["html",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["html.pipe",{"_index":919,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["html.pipe.ts",{"_index":1006,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:14",{"_index":1011,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["htmlelement",{"_index":424,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["htmltextareaelement",{"_index":1119,"title":{},"body":{"components/InitComponent.html":{}}}],["http://localhost:4200",{"_index":1749,"title":{},"body":{"index.html":{}}}],["https://entropymine.com/imageworsener/srgbformula",{"_index":340,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["icon",{"_index":1207,"title":{},"body":{"components/InitComponent.html":{}}}],["icons",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":676,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["id.split(pairseparator",{"_index":804,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["id1",{"_index":494,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["id2",{"_index":496,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["id2][0",{"_index":713,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["identifier",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":656,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["ids[0",{"_index":805,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ids[1",{"_index":806,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["ignore",{"_index":1240,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["image",{"_index":1198,"title":{},"body":{"components/InitComponent.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["import('./home/home.module').then(m",{"_index":200,"title":{},"body":{"modules/AppRouter.html":{}}}],["import('./init/init.module').then(m",{"_index":197,"title":{},"body":{"modules/AppRouter.html":{}}}],["importance",{"_index":760,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["importances",{"_index":1398,"title":{},"body":{"injectables/QueryService.html":{}}}],["important",{"_index":764,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["in/out",{"_index":1570,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["incline",{"_index":1738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["increasecamera",{"_index":1568,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":837,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["indicator",{"_index":1580,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["indirectly",{"_index":672,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["individual",{"_index":317,"title":{},"body":{"classes/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["information",{"_index":468,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["inherits",{"_index":673,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["init",{"_index":1058,"title":{},"body":{"components/InitComponent.html":{}}}],["init'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["init.component",{"_index":1227,"title":{},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{}}}],["init.component.html",{"_index":1060,"title":{},"body":{"components/InitComponent.html":{}}}],["init.component.scss",{"_index":1059,"title":{},"body":{"components/InitComponent.html":{}}}],["init.routes",{"_index":1228,"title":{},"body":{"modules/InitModule.html":{}}}],["initcomponent",{"_index":141,"title":{"components/InitComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["initgraphdata",{"_index":1384,"title":{},"body":{"injectables/QueryService.html":{}}}],["initgraphdata(corpus",{"_index":1405,"title":{},"body":{"injectables/QueryService.html":{}}}],["initial",{"_index":1054,"title":{},"body":{"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["initializing",{"_index":1391,"title":{},"body":{"injectables/QueryService.html":{}}}],["initmodule",{"_index":1221,"title":{"modules/InitModule.html":{}},"body":{"modules/InitModule.html":{},"modules.html":{},"overview.html":{}}}],["initroutes",{"_index":1225,"title":{"modules/InitRoutes.html":{}},"body":{"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules.html":{},"overview.html":{}}}],["injectable",{"_index":997,"title":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["injectables",{"_index":1230,"title":{},"body":{"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["inner",{"_index":730,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["innerproduct",{"_index":1385,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["innerproduct(id1",{"_index":732,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["innerproductsingle",{"_index":1386,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["innerproductsingle(id",{"_index":745,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["input",{"_index":216,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["inputs",{"_index":402,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["inputted",{"_index":1737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["insert",{"_index":1196,"title":{},"body":{"components/InitComponent.html":{}}}],["inserted",{"_index":1057,"title":{},"body":{"components/InitComponent.html":{}}}],["insertedtext",{"_index":1061,"title":{},"body":{"components/InitComponent.html":{}}}],["inserting",{"_index":1124,"title":{},"body":{"components/InitComponent.html":{}}}],["insertingtext",{"_index":1062,"title":{},"body":{"components/InitComponent.html":{}}}],["instance",{"_index":1246,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["integers",{"_index":320,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["interface",{"_index":149,"title":{"interfaces/AppSettings.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["interface.component",{"_index":1050,"title":{},"body":{"modules/HomeModule.html":{}}}],["interface.component.html",{"_index":1557,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.scss",{"_index":1556,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts",{"_index":1555,"title":{},"body":{"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["interface.component.ts:17",{"_index":1586,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:21",{"_index":1585,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:25",{"_index":1576,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:29",{"_index":1583,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:33",{"_index":1581,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:37",{"_index":1572,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:41",{"_index":1569,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:46",{"_index":1587,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:50",{"_index":1593,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:54",{"_index":1592,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:58",{"_index":1589,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:62",{"_index":1594,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface.component.ts:67",{"_index":1595,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["interface/settings/settings.component",{"_index":1040,"title":{},"body":{"modules/HomeModule.html":{}}}],["interface/settings/settings.component.ts",{"_index":207,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["interface/settings/settings.component.ts:26",{"_index":1513,"title":{},"body":{"components/SettingsComponent.html":{}}}],["interface/settings/settings.component.ts:30",{"_index":1514,"title":{},"body":{"components/SettingsComponent.html":{}}}],["interface/settings/settings.component.ts:37",{"_index":1515,"title":{},"body":{"components/SettingsComponent.html":{}}}],["interface/user",{"_index":1049,"title":{},"body":{"modules/HomeModule.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":205,"title":{},"body":{"interfaces/AppSettings.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"overview.html":{}}}],["intrusive",{"_index":955,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["inversesrgbcompounding",{"_index":248,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["isloading",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["isloadingsource",{"_index":1250,"title":{},"body":{"injectables/LoadingService.html":{}}}],["isn't",{"_index":532,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["iswordlowlighted",{"_index":880,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["iswordlowlighted(word",{"_index":903,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["italic",{"_index":972,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["items",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["items.sort((first",{"_index":517,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["iterate",{"_index":776,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["itself",{"_index":1372,"title":{},"body":{"injectables/QueryService.html":{}}}],["join",{"_index":754,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["json",{"_index":1117,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(text",{"_index":1162,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonfile",{"_index":1063,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonschematype",{"_index":1237,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["jsontextarea",{"_index":1064,"title":{},"body":{"components/InitComponent.html":{}}}],["jsonvalidateservice",{"_index":1074,"title":{"injectables/JsonValidateService.html":{}},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"coverage.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["karma",{"_index":1766,"title":{},"body":{"index.html":{}}}],["key",{"_index":230,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["keys",{"_index":801,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["kickstarting",{"_index":1407,"title":{},"body":{"injectables/QueryService.html":{}}}],["label",{"_index":577,"title":{},"body":{"components/ComparisonComponent.html":{},"components/SettingsComponent.html":{}}}],["labels",{"_index":1516,"title":{},"body":{"components/SettingsComponent.html":{}}}],["last",{"_index":1521,"title":{},"body":{"components/SettingsComponent.html":{}}}],["layout",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"dependencies.html":{}}}],["leading",{"_index":361,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["leave",{"_index":445,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["legend",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"overview.html":{}}}],["length",{"_index":834,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["less",{"_index":909,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["level",{"_index":1571,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["lighted",{"_index":940,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["line",{"_index":581,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{}}}],["linear",{"_index":817,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["links",{"_index":700,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":1313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["literal",{"_index":447,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["loadchildren",{"_index":196,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded",{"_index":987,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["loaded.guard",{"_index":193,"title":{},"body":{"modules/AppRouter.html":{}}}],["loaded.guard.ts",{"_index":982,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["loaded.guard.ts:13",{"_index":990,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["loaded.guard.ts:26",{"_index":995,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["loadexample",{"_index":1069,"title":{},"body":{"components/InitComponent.html":{}}}],["loading",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["loading.service",{"_index":1429,"title":{},"body":{"injectables/QueryService.html":{}}}],["loadingprogress",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingprogresssource",{"_index":1251,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":39,"title":{"injectables/LoadingService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["loadingstage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingstagesource",{"_index":1252,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loads",{"_index":1096,"title":{},"body":{"components/InitComponent.html":{}}}],["located",{"_index":991,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["log2",{"_index":1674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["log2(n",{"_index":294,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["logarithm",{"_index":292,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["logic",{"_index":595,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["long",{"_index":365,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"injectables/LoadingService.html":{}}}],["look",{"_index":528,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["looked",{"_index":703,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["low",{"_index":939,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lower",{"_index":712,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["lowlight",{"_index":968,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighted",{"_index":908,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["lowlighting",{"_index":896,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["m.homemodule",{"_index":201,"title":{},"body":{"modules/AppRouter.html":{}}}],["m.initmodule",{"_index":198,"title":{},"body":{"modules/AppRouter.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["making",{"_index":461,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["map",{"_index":199,"title":{},"body":{"modules/AppRouter.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map(data",{"_index":1467,"title":{},"body":{"injectables/QueryService.html":{}}}],["mapping",{"_index":901,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["maps",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"index.html":{}}}],["margin",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["marked",{"_index":907,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["mat",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["matautocompletemodule",{"_index":1300,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1291,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":1320,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1314,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":313,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{}}}],["matcheckboxchange",{"_index":617,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["matcheckboxmodule",{"_index":1299,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matched",{"_index":477,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/typealiases.html":{}}}],["matches",{"_index":310,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1339,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matchword",{"_index":537,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["matdatepickermodule",{"_index":1302,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":1324,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1475,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["material.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{}}}],["materialmodule",{"_index":168,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1318,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1304,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":1311,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(value",{"_index":289,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.log2(n",{"_index":295,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow((b",{"_index":348,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow((g",{"_index":347,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow((r",{"_index":342,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(1",{"_index":821,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["math.pow(2",{"_index":298,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(b",{"_index":352,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(g",{"_index":351,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["math.pow(r",{"_index":350,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["maticonmodule",{"_index":1287,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1329,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1289,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1309,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginatormodule",{"_index":1293,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1323,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1321,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":1331,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":1333,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":1283,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidermodule",{"_index":1335,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":1306,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1076,"title":{},"body":{"components/InitComponent.html":{}}}],["matsnackbarmodule",{"_index":1328,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsortmodule",{"_index":1295,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsteppermodule",{"_index":1316,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":1297,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":1337,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1285,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1326,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["maxzoom",{"_index":1562,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["meaning",{"_index":657,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["measure",{"_index":692,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["media",{"_index":1633,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["menu",{"_index":218,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["merge",{"_index":950,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["message",{"_index":1088,"title":{},"body":{"components/InitComponent.html":{}}}],["messages",{"_index":1083,"title":{},"body":{"components/InitComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["method",{"_index":263,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["middle",{"_index":1625,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["min",{"_index":1212,"title":{},"body":{"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["mind",{"_index":279,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["minmax(200px",{"_index":1549,"title":{},"body":{"components/SidenavComponent.html":{}}}],["minzoom",{"_index":1563,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["miscellaneous",{"_index":1720,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":249,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["mix(other",{"_index":273,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["mixed",{"_index":264,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["mixing",{"_index":242,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["modifier:{{settings.clumpingmodifier",{"_index":1520,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifier:{{settings.distancemodifier",{"_index":1519,"title":{},"body":{"components/SettingsComponent.html":{}}}],["modifiers",{"_index":815,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["module",{"_index":155,"title":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"overview.html":{}}}],["modules",{"_index":157,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":539,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"index.html":{}}}],["mouse",{"_index":1489,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["mouseevent",{"_index":1491,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["msg",{"_index":1089,"title":{},"body":{"components/InitComponent.html":{}}}],["multiplier",{"_index":816,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["n",{"_index":293,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["naive",{"_index":275,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":1551,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigate",{"_index":1214,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["navigating",{"_index":993,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["navigation",{"_index":1084,"title":{},"body":{"components/InitComponent.html":{}}}],["needs",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":225,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":565,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"modules/MaterialModule.html":{},"modules/PipesModule.html":{}}}],["ngonchanges",{"_index":401,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["ngonchanges(changes",{"_index":454,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["node",{"_index":669,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["node's",{"_index":689,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodeid",{"_index":1729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nodes",{"_index":698,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["nodes.push(doc",{"_index":842,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["nodes.push(node",{"_index":838,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["non",{"_index":775,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":1639,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["norm",{"_index":767,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normal",{"_index":271,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["normalization",{"_index":766,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["normalize",{"_index":772,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normalized",{"_index":759,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["normalizedeviation",{"_index":1675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalizedeviation(value",{"_index":285,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["normalizing",{"_index":1736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normwordpairs",{"_index":769,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["normwordpairs[id",{"_index":773,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["notify",{"_index":547,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["nth",{"_index":571,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["null",{"_index":685,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["number",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":658,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.entries(corpus.results",{"_index":830,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id",{"_index":747,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id1",{"_index":734,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.entries(corpus.texts_bow[id2",{"_index":736,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(corpus.dictionary).find(key",{"_index":704,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(exactpairs).map((key",{"_index":515,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(softpairs).map((key",{"_index":525,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["object.keys(wordimportancepairs",{"_index":802,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs",{"_index":771,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["object.keys(wordpairs).includes(wordskey",{"_index":794,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["observable",{"_index":665,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["observable(subscriber",{"_index":829,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["observes",{"_index":1454,"title":{},"body":{"injectables/QueryService.html":{}}}],["offset",{"_index":1577,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["once",{"_index":1078,"title":{},"body":{"components/InitComponent.html":{}}}],["onchanges",{"_index":383,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["one",{"_index":363,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["open",{"_index":1187,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["opened",{"_index":1596,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["operating",{"_index":1371,"title":{},"body":{"injectables/QueryService.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1636,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["other.b",{"_index":336,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["other.g",{"_index":334,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["other.inversesrgbcompounding",{"_index":357,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["other.r",{"_index":332,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["others",{"_index":714,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["otherwise",{"_index":544,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["out",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/UserInterfaceComponent.html":{},"index.html":{},"overview.html":{}}}],["out.get(match).add(parent",{"_index":936,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.has(match",{"_index":935,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["out.set(match",{"_index":937,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["output",{"_index":217,"title":{},"body":{"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["outputs",{"_index":404,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["outputted",{"_index":1133,"title":{},"body":{"components/InitComponent.html":{}}}],["over",{"_index":420,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["overflow",{"_index":559,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["overflowing",{"_index":429,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["overview",{"_index":1771,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":969,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["package",{"_index":1695,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":561,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["page",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pair",{"_index":750,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/PipesModule.html":{},"miscellaneous/variables.html":{}}}],["paired",{"_index":1355,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairs",{"_index":440,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["pairseparator",{"_index":667,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pairsplitfirstpipe",{"_index":1341,"title":{"pipes/PairSplitFirstPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairsplitsecondpipe",{"_index":1350,"title":{"pipes/PairSplitSecondPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pairup",{"_index":1352,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pairuppipe",{"_index":1353,"title":{"pipes/PairUpPipe.html":{}},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["panelclass",{"_index":1148,"title":{},"body":{"components/InitComponent.html":{}}}],["param",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":540,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["parse",{"_index":1138,"title":{},"body":{"components/InitComponent.html":{}}}],["parsed",{"_index":1161,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["parseint(matches[1",{"_index":321,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["parseint(matches[2",{"_index":323,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["parseint(matches[3",{"_index":324,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["parsing",{"_index":1105,"title":{},"body":{"components/InitComponent.html":{}}}],["part",{"_index":329,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["passed",{"_index":302,"title":{},"body":{"classes/Color.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["passing",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["path",{"_index":195,"title":{},"body":{"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["patternproperties",{"_index":1242,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["percent:'.2",{"_index":628,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percent:\\'.2",{"_index":648,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["percentage",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{}}}],["perfect",{"_index":1599,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["perform",{"_index":701,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["phrase",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe",{"_index":884,"title":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["pipe(map((corpus",{"_index":1001,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["pipes",{"_index":1004,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"overview.html":{}}}],["pipes/escape",{"_index":918,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pair",{"_index":925,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["pipes/pipes.module",{"_index":1048,"title":{},"body":{"modules/HomeModule.html":{}}}],["pipesmodule",{"_index":1047,"title":{"modules/PipesModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1013,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["pixels",{"_index":1578,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["placed",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populates",{"_index":433,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["position",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["possible",{"_index":462,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["potential",{"_index":954,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["potentially",{"_index":453,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["pow2",{"_index":1676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pow2(n",{"_index":297,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["power",{"_index":296,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["predefined",{"_index":369,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["preface",{"_index":1202,"title":{},"body":{"components/InitComponent.html":{}}}],["present",{"_index":996,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["press",{"_index":1575,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["prevents",{"_index":983,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["previously",{"_index":551,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["prevword",{"_index":552,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["primary",{"_index":638,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["process",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["processed",{"_index":1100,"title":{},"body":{"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["processing",{"_index":1470,"title":{},"body":{"injectables/QueryService.html":{}}}],["prod",{"_index":1758,"title":{},"body":{"index.html":{}}}],["product",{"_index":731,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["production",{"_index":1759,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["project",{"_index":1741,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1111,"title":{},"body":{"components/InitComponent.html":{}}}],["promise((resolve",{"_index":1152,"title":{},"body":{"components/InitComponent.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":247,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["protractor",{"_index":1768,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":999,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentContentComponent.html":{}}}],["put",{"_index":1357,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["queries",{"_index":659,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["query",{"_index":679,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["querying",{"_index":1370,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryservice",{"_index":408,"title":{"injectables/QueryService.html":{}},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["queryutils",{"_index":482,"title":{},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["queryutils.getdocumenttext(id",{"_index":1450,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getmostimportantexactmatches(this.wordpairs",{"_index":512,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getmostimportantsoftmatches(this.wordpairs",{"_index":524,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["queryutils.getnormalizedwordimportancepairs(id1",{"_index":1451,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarity(id1",{"_index":1444,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsimilarityword(word1",{"_index":1445,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getsoftcosinemeasure(id1",{"_index":1449,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getword(id",{"_index":1443,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.getwordid(word",{"_index":1441,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproduct(id1",{"_index":1446,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.innerproductsingle(id",{"_index":1447,"title":{},"body":{"injectables/QueryService.html":{}}}],["queryutils.softcosinemeasurenorm(id1",{"_index":1448,"title":{},"body":{"injectables/QueryService.html":{}}}],["quick",{"_index":1727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quot",{"_index":1019,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["r",{"_index":256,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["r)}${(g.length",{"_index":367,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["r.length",{"_index":366,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["radius",{"_index":568,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["range",{"_index":337,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["re",{"_index":963,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reactiveformsmodule",{"_index":1032,"title":{},"body":{"modules/HomeModule.html":{}}}],["read",{"_index":1154,"title":{},"body":{"components/InitComponent.html":{}}}],["readonly",{"_index":371,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"injectables/QueryService.html":{}}}],["ready",{"_index":1155,"title":{},"body":{"components/InitComponent.html":{}}}],["receives",{"_index":1436,"title":{},"body":{"injectables/QueryService.html":{}}}],["red",{"_index":1149,"title":{},"body":{"components/InitComponent.html":{}}}],["redirectto",{"_index":202,"title":{},"body":{"modules/AppRouter.html":{}}}],["reduce((a",{"_index":1502,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["reference",{"_index":1122,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["regex",{"_index":300,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/functions.html":{}}}],["regexp",{"_index":922,"title":{},"body":{"components/DocumentContentComponent.html":{},"dependencies.html":{}}}],["regexp(/^#?([0",{"_index":305,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["regexp(`(?${escapedword",{"_index":964,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reject",{"_index":1103,"title":{},"body":{"components/InitComponent.html":{}}}],["reject(e",{"_index":1167,"title":{},"body":{"components/InitComponent.html":{}}}],["relation",{"_index":487,"title":{},"body":{"components/ComparisonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relations",{"_index":862,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{}}}],["relationship",{"_index":690,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["relationships",{"_index":1487,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["relative",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["reload",{"_index":1751,"title":{},"body":{"index.html":{}}}],["remove",{"_index":541,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{}}}],["remove_circle_outline",{"_index":1602,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["replace(/\"/g",{"_index":1018,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/&/g",{"_index":1014,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(/'/g",{"_index":1020,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["replace(//g",{"_index":1016,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["reports",{"_index":1392,"title":{},"body":{"injectables/QueryService.html":{}}}],["representation",{"_index":662,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["representations",{"_index":1177,"title":{},"body":{"components/InitComponent.html":{}}}],["requests",{"_index":1588,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["required",{"_index":1243,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["reroute",{"_index":1169,"title":{},"body":{"components/InitComponent.html":{}}}],["reset",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"components/ComparisonComponent.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resize",{"_index":1043,"title":{},"body":{"modules/HomeModule.html":{},"dependencies.html":{}}}],["resolve",{"_index":1102,"title":{},"body":{"components/InitComponent.html":{}}}],["resolve(parsed",{"_index":1165,"title":{},"body":{"components/InitComponent.html":{}}}],["respective",{"_index":1183,"title":{},"body":{"components/InitComponent.html":{}}}],["responsible",{"_index":379,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{}}}],["result",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":505,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1345,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["retrieving",{"_index":1728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":288,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":934,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversed",{"_index":900,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap",{"_index":904,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["reversedwordmap.get(word)?.has(hoveredword",{"_index":949,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["rgb(176",{"_index":1617,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["rgb(55",{"_index":1619,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["rgb(69",{"_index":1622,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["rgba(0",{"_index":641,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["right",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["root'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["route",{"_index":984,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["router",{"_index":989,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["routermodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forchild(routes",{"_index":1052,"title":{},"body":{"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{}}}],["routermodule.forroot(routes",{"_index":203,"title":{},"body":{"modules/AppRouter.html":{}}}],["routes",{"_index":18,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRouter.html":{},"modules/HomeRoutes.html":{},"modules/InitRoutes.html":{},"routes.html":{}}}],["rows",{"_index":1547,"title":{},"body":{"components/SidenavComponent.html":{}}}],["run",{"_index":1746,"title":{},"body":{"index.html":{}}}],["running",{"_index":1760,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":666,"title":{},"body":{"interfaces/Corpus.html":{},"guards/DocumentLoadedGuard.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":998,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"injectables/QueryService.html":{}}}],["safe",{"_index":886,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["same",{"_index":710,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["saying",{"_index":1116,"title":{},"body":{"components/InitComponent.html":{}}}],["scaffolding",{"_index":1752,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1238,"title":{},"body":{"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":1163,"title":{},"body":{"components/InitComponent.html":{}}}],["screen",{"_index":1170,"title":{},"body":{"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["scrollable",{"_index":389,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["scrolled",{"_index":533,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["searchqueryschema",{"_index":1241,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["second",{"_index":518,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{}}}],["second[1",{"_index":519,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["secondary",{"_index":966,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["see",{"_index":945,"title":{},"body":{"components/DocumentContentComponent.html":{},"injectables/JsonValidateService.html":{}}}],["selected",{"_index":415,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["selectedchange",{"_index":602,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["selecteddocument",{"_index":412,"title":{"interfaces/SelectedDocument.html":{}},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["selecteddocuments",{"_index":403,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["selectednodes",{"_index":1564,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["selectedwords",{"_index":390,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selection",{"_index":380,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["selects",{"_index":500,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["self",{"_index":1604,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["semantic",{"_index":1176,"title":{},"body":{"components/InitComponent.html":{}}}],["send",{"_index":833,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["sending",{"_index":1092,"title":{},"body":{"components/InitComponent.html":{}}}],["separate",{"_index":756,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["separates",{"_index":303,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["separator",{"_index":789,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1747,"title":{},"body":{"index.html":{}}}],["server",{"_index":1745,"title":{},"body":{"index.html":{}}}],["service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["services/json",{"_index":1127,"title":{},"body":{"components/InitComponent.html":{}}}],["services/loading.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["services/query.service",{"_index":480,"title":{},"body":{"components/ComparisonComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{}}}],["set",{"_index":234,"title":{},"body":{"interfaces/AppSettings.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["set([...this.highlightedsoftmatches",{"_index":952,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set([parent",{"_index":938,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["set(softmatches",{"_index":1508,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["set(wordmap.keys",{"_index":1499,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["setcorpus",{"_index":1387,"title":{},"body":{"injectables/QueryService.html":{}}}],["setcorpus(corpus",{"_index":1414,"title":{},"body":{"injectables/QueryService.html":{}}}],["setisloading",{"_index":1253,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setisloading(value",{"_index":1256,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress",{"_index":1254,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingprogress(value",{"_index":1259,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage",{"_index":1255,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloadingstage(value",{"_index":1261,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setquery",{"_index":1070,"title":{},"body":{"components/InitComponent.html":{}}}],["setquery(corpus",{"_index":1098,"title":{},"body":{"components/InitComponent.html":{}}}],["sets",{"_index":894,"title":{},"body":{"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["setter",{"_index":1258,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["setting",{"_index":228,"title":{},"body":{"interfaces/AppSettings.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":209,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["settings'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["settings.component.html",{"_index":219,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":220,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":1597,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["settingschange",{"_index":224,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["settingscomponent",{"_index":143,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsopen",{"_index":1558,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["shadow",{"_index":587,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["show",{"_index":1146,"title":{},"body":{"components/InitComponent.html":{},"components/SettingsComponent.html":{}}}],["showdeviations",{"_index":212,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["showed",{"_index":531,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["showing",{"_index":852,"title":{},"body":{"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["showlabels",{"_index":213,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["shrink",{"_index":633,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/SidenavComponent.html":{}}}],["sidebar",{"_index":1482,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidebarclose",{"_index":1484,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav",{"_index":1476,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["sidenav.component",{"_index":481,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{}}}],["sidenav.component.html",{"_index":1477,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1478,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["sidenav/comparison/comparison",{"_index":1038,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/comparison/comparison.component",{"_index":1037,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/document/document",{"_index":1045,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/document/document.component",{"_index":1044,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenav/sidenav.component",{"_index":1036,"title":{},"body":{"modules/HomeModule.html":{}}}],["sidenavcomponent",{"_index":145,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["similar",{"_index":716,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{}}}],["similarities",{"_index":664,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["similarity",{"_index":459,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["simple",{"_index":1735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simplechange",{"_index":1732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simplechanges",{"_index":455,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{}}}],["simulating",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simulation",{"_index":696,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationlinkdatum",{"_index":687,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["simulationnodedatum",{"_index":674,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["size",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["skip",{"_index":784,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["skipping",{"_index":749,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["slider",{"_index":1591,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["snackbar",{"_index":1075,"title":{},"body":{"components/InitComponent.html":{}}}],["soft",{"_index":437,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["softcosinemeasurenorm",{"_index":1388,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["softcosinemeasurenorm(id1",{"_index":768,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["softmatch",{"_index":601,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["softmatches",{"_index":810,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["softmatches[id",{"_index":811,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["softpairs",{"_index":523,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["softpairs[key",{"_index":526,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["solid",{"_index":1630,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["something",{"_index":1270,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sort",{"_index":513,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["sorted",{"_index":474,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairsexact",{"_index":391,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["sortedwordpairssoft",{"_index":392,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouter.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"modules/HomeModule.html":{},"modules/HomeRoutes.html":{},"components/InitComponent.html":{},"modules/InitModule.html":{},"modules/InitRoutes.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"modules/MaterialModule.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"index.html":{}}}],["space",{"_index":272,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["spaces",{"_index":757,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["spacing",{"_index":973,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["span",{"_index":640,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{}}}],["special",{"_index":1008,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["specific",{"_index":232,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["specified",{"_index":227,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"classes/DefaultColors.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["specifies",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["specifying",{"_index":484,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["spinner",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"modules/MaterialModule.html":{}}}],["split",{"_index":943,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["split.pipe",{"_index":926,"title":{},"body":{"components/DocumentContentComponent.html":{},"modules/PipesModule.html":{}}}],["split.pipe.ts",{"_index":1343,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["split.pipe.ts:16",{"_index":1347,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{}}}],["split.pipe.ts:33",{"_index":1363,"title":{},"body":{"pipes/PairSplitSecondPipe.html":{}}}],["split.pipe.ts:51",{"_index":1364,"title":{},"body":{"pipes/PairUpPipe.html":{}}}],["split.pipe.ts:68",{"_index":1554,"title":{},"body":{"pipes/SplitUpPipe.html":{}}}],["splits",{"_index":1344,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splitting",{"_index":887,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["splitup",{"_index":1360,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["splituppipe",{"_index":877,"title":{"pipes/SplitUpPipe.html":{}},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"modules/PipesModule.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../comparison.component.ts",{"_index":1722,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.utils.ts",{"_index":1725,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../json",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.ts",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../query.utils.ts",{"_index":1723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../various.utils.ts",{"_index":1724,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routes.ts",{"_index":189,"title":{},"body":{"modules/AppRouter.html":{}}}],["src/app/guards/document",{"_index":981,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"coverage.html":{}}}],["src/app/home/graph/graph.component.ts",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["src/app/home/home.module.ts",{"_index":1027,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routes.ts",{"_index":1051,"title":{},"body":{"modules/HomeRoutes.html":{}}}],["src/app/home/sidenav/comparison/comparison",{"_index":591,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts",{"_index":378,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:105",{"_index":438,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:117",{"_index":432,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:132",{"_index":436,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:148",{"_index":425,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:158",{"_index":448,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:192",{"_index":430,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:202",{"_index":442,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:31",{"_index":413,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:36",{"_index":422,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:40",{"_index":417,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:45",{"_index":476,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:49",{"_index":473,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:53",{"_index":475,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:57",{"_index":470,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:61",{"_index":466,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:65",{"_index":465,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:69",{"_index":458,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:74",{"_index":409,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:81",{"_index":457,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/comparison/comparison.component.ts:91",{"_index":456,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["src/app/home/sidenav/document/document",{"_index":867,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts",{"_index":851,"title":{},"body":{"components/DocumentComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/document/document.component.ts:18",{"_index":858,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:22",{"_index":859,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:26",{"_index":860,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:30",{"_index":861,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/document/document.component.ts:34",{"_index":863,"title":{},"body":{"components/DocumentComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts",{"_index":1472,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:109",{"_index":1533,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:26",{"_index":1527,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:30",{"_index":1526,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:35",{"_index":1529,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:39",{"_index":1528,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:44",{"_index":1535,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:48",{"_index":1536,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:52",{"_index":1537,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:56",{"_index":1538,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:62",{"_index":1532,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:72",{"_index":1531,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:82",{"_index":1534,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/sidenav/sidenav.component.ts:99",{"_index":1530,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/home/user",{"_index":206,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{}}}],["src/app/init/init.component.ts",{"_index":1053,"title":{},"body":{"components/InitComponent.html":{},"coverage.html":{}}}],["src/app/init/init.component.ts:112",{"_index":1110,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:121",{"_index":1112,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:138",{"_index":1104,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:162",{"_index":1099,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:172",{"_index":1095,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:21",{"_index":1114,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:25",{"_index":1113,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:29",{"_index":1118,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:33",{"_index":1125,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:38",{"_index":1077,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:56",{"_index":1094,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:71",{"_index":1091,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.component.ts:94",{"_index":1086,"title":{},"body":{"components/InitComponent.html":{}}}],["src/app/init/init.module.ts",{"_index":1226,"title":{},"body":{"modules/InitModule.html":{}}}],["src/app/init/init.routes.ts",{"_index":1229,"title":{},"body":{"modules/InitRoutes.html":{}}}],["src/app/material.module.ts",{"_index":1282,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pipes/escape",{"_index":1005,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pair",{"_index":1342,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1368,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/json",{"_index":1231,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/loading.service.ts",{"_index":1249,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:16",{"_index":1267,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:20",{"_index":1264,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:26",{"_index":1274,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:30",{"_index":1272,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:36",{"_index":1278,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:40",{"_index":1276,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:46",{"_index":1257,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:54",{"_index":1260,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:62",{"_index":1262,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/query.service.ts",{"_index":1369,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/app/services/query.service.ts:107",{"_index":1400,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:117",{"_index":1412,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:126",{"_index":1413,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:136",{"_index":1416,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:146",{"_index":1402,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:155",{"_index":1394,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:165",{"_index":1397,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:173",{"_index":1406,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:19",{"_index":1423,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:23",{"_index":1425,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:28",{"_index":1426,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:34",{"_index":1390,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:55",{"_index":1415,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:64",{"_index":1418,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:78",{"_index":1404,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:87",{"_index":1403,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/services/query.service.ts:97",{"_index":1399,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/app/utils/graph.utils.ts",{"_index":240,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/graph.utils.ts:102",{"_index":259,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:114",{"_index":282,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:128",{"_index":849,"title":{},"body":{"classes/DefaultColors.html":{}}}],["src/app/utils/graph.utils.ts:129",{"_index":848,"title":{},"body":{"classes/DefaultColors.html":{}}}],["src/app/utils/graph.utils.ts:130",{"_index":850,"title":{},"body":{"classes/DefaultColors.html":{}}}],["src/app/utils/graph.utils.ts:30",{"_index":255,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:33",{"_index":266,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:53",{"_index":274,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:64",{"_index":268,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/graph.utils.ts:82",{"_index":280,"title":{},"body":{"classes/Color.html":{}}}],["src/app/utils/query.utils.ts",{"_index":649,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/various.utils.ts",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":262,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["srgbcompounding",{"_index":250,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["stage",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["start",{"_index":1469,"title":{},"body":{"injectables/QueryService.html":{},"components/UserInterfaceComponent.html":{}}}],["started",{"_index":554,"title":{"index.html":{}},"body":{"components/ComparisonComponent.html":{},"injectables/QueryService.html":{}}}],["statements",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":245,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["step",{"_index":1574,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["stiffness",{"_index":286,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["store",{"_index":521,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["stored",{"_index":1428,"title":{},"body":{"injectables/QueryService.html":{},"index.html":{}}}],["stores",{"_index":1269,"title":{},"body":{"injectables/LoadingService.html":{}}}],["storing",{"_index":831,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["str1",{"_index":1354,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str1}${separator}${str2",{"_index":1359,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["str2",{"_index":1356,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["straight",{"_index":825,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["stretch",{"_index":632,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":319,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["stroke",{"_index":1211,"title":{},"body":{"components/InitComponent.html":{}}}],["structure",{"_index":472,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["style",{"_index":971,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["subject",{"_index":1268,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/QueryService.html":{}}}],["subscriber.complete",{"_index":845,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscriber.next({progress",{"_index":835,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["subscription",{"_index":1411,"title":{},"body":{"injectables/QueryService.html":{}}}],["subtitle",{"_index":1473,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["successful",{"_index":1108,"title":{},"body":{"components/InitComponent.html":{}}}],["support",{"_index":1773,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1774,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":277,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["taller",{"_index":529,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["tap",{"_index":1430,"title":{},"body":{"injectables/QueryService.html":{}}}],["tap(progress",{"_index":1460,"title":{},"body":{"injectables/QueryService.html":{}}}],["target",{"_index":691,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["tell",{"_index":1452,"title":{},"body":{"injectables/QueryService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["temporarily",{"_index":550,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["tertiary",{"_index":967,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["test",{"_index":1763,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1762,"title":{},"body":{"index.html":{}}}],["text",{"_index":578,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["text.join",{"_index":758,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["textarea",{"_index":1123,"title":{},"body":{"components/InitComponent.html":{}}}],["texts",{"_index":651,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["texts_bow",{"_index":652,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["that's",{"_index":911,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["theres",{"_index":1457,"title":{},"body":{"injectables/QueryService.html":{}}}],["they're",{"_index":715,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["this.b",{"_index":335,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.clearhighlightedwords",{"_index":1493,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.clearwordselection",{"_index":504,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.compareclick.emit(e",{"_index":1496,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.convertedcontent",{"_index":927,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.corpussource.asobservable",{"_index":1424,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.getvalue",{"_index":1440,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.corpussource.next(corpus",{"_index":1439,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.displayerror('couldn\\'t",{"_index":1137,"title":{},"body":{"components/InitComponent.html":{}}}],["this.documentsimilarities",{"_index":498,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.documentsimilarity",{"_index":623,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.escapehtml.transform(this.content",{"_index":957,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.escapehtml.transform(word",{"_index":961,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.g",{"_index":333,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.generateexactpairs",{"_index":509,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatesoftpairs",{"_index":510,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.generatewordpairs",{"_index":493,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.getformattedcontent",{"_index":928,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.getreversedwordmap",{"_index":958,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.highlightedexactmatches",{"_index":953,"title":{},"body":{"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedexactmatches.has(a",{"_index":1506,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedsoftmatches",{"_index":1507,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap",{"_index":1509,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.highlightedwordmap.entries",{"_index":932,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.hoveredword",{"_index":553,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.inversesrgbcompounding",{"_index":355,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.isloading",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloadingsource.asobservable",{"_index":1263,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.isloadingsource.next(value",{"_index":1279,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.jsonfile",{"_index":1143,"title":{},"body":{"components/InitComponent.html":{}}}],["this.jsonvalidateservice.validatecorpus(parsed",{"_index":1164,"title":{},"body":{"components/InitComponent.html":{}}}],["this.loadingprogress",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingprogresssource.asobservable",{"_index":1271,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingprogresssource.next(value",{"_index":1280,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.isloading.subscribe(value",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingprogress.subscribe(value",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.loadingstage.subscribe(value",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.setisloading(false",{"_index":1468,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setisloading(true",{"_index":1453,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingprogress(progress.value",{"_index":1462,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingservice.setloadingstage(progress.stage",{"_index":1461,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.loadingstage",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingstagesource.asobservable",{"_index":1275,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingstagesource.next(value",{"_index":1281,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.queryservice.currentcorpus",{"_index":1000,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["this.queryservice.getnormalizedwordimportancepairs(this.selecteddocuments[0].id",{"_index":507,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.getsoftcosinemeasure(id1",{"_index":499,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.queryservice.setcorpus(corpus",{"_index":1168,"title":{},"body":{"components/InitComponent.html":{}}}],["this.r",{"_index":331,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["this.router.navigate",{"_index":1003,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["this.router.navigate(['/map",{"_index":1171,"title":{},"body":{"components/InitComponent.html":{}}}],["this.scrollable[element.id",{"_index":535,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedchange.emit",{"_index":624,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.selecteddocuments?.length",{"_index":492,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[0].id",{"_index":495,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selecteddocuments[1].id",{"_index":497,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.clear",{"_index":549,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.selectedwords.delete(e.word",{"_index":546,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.setquery((exampledocument",{"_index":1172,"title":{},"body":{"components/InitComponent.html":{}}}],["this.setquery(res",{"_index":1135,"title":{},"body":{"components/InitComponent.html":{}}}],["this.settings[setting",{"_index":236,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.settingschange.emit(this.settings",{"_index":237,"title":{},"body":{"interfaces/AppSettings.html":{},"components/SettingsComponent.html":{}}}],["this.sidebarclose.emit(e",{"_index":1492,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["this.snackbar.open",{"_index":1147,"title":{},"body":{"components/InitComponent.html":{}}}],["this.softmatch",{"_index":627,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.sortedwordpairsexact",{"_index":522,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.sortedwordpairssoft",{"_index":527,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.splituppipe.transform(hoveredword",{"_index":944,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["this.usedcorpus(corpus",{"_index":1442,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.validateandparse(filereader.result",{"_index":1159,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateandparse(this.insertedtext",{"_index":1153,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validatetext().then(res",{"_index":1134,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validateuploadedfile().then(res",{"_index":1145,"title":{},"body":{"components/InitComponent.html":{}}}],["this.validating",{"_index":1132,"title":{},"body":{"components/InitComponent.html":{}}}],["this.weight",{"_index":622,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.word",{"_index":625,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["this.wordhovered.emit(this.hoveredword",{"_index":557,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordpairs",{"_index":506,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.wordschanged.emit(this.selectedwords",{"_index":548,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["this.worker",{"_index":1433,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.onmessage",{"_index":1437,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.worker.postmessage({query",{"_index":1471,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.asobservable",{"_index":1458,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.workerdata.next(data",{"_index":1438,"title":{},"body":{"injectables/QueryService.html":{}}}],["those",{"_index":839,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["through",{"_index":797,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["time",{"_index":1456,"title":{},"body":{"injectables/QueryService.html":{}}}],["title",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["toggle",{"_index":1308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tohex",{"_index":251,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["tool",{"_index":1175,"title":{},"body":{"components/InitComponent.html":{},"index.html":{}}}],["top",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["total",{"_index":604,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["transform",{"_index":1009,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(str1",{"_index":1358,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transform(text",{"_index":1010,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["transform(value",{"_index":1346,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["transformed",{"_index":1012,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["transition",{"_index":1612,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["transparent",{"_index":1631,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["true",{"_index":1002,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1160,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["ts",{"_index":1239,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["tslib",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["tuples",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":260,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"pipes/SplitUpPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1780,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1432,"title":{},"body":{"injectables/QueryService.html":{}}}],["ui",{"_index":594,"title":{},"body":{"components/ComparisonEntryComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["undefined",{"_index":315,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"classes/DefaultColors.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{}}}],["unit",{"_index":1761,"title":{},"body":{"index.html":{}}}],["unless",{"_index":986,"title":{},"body":{"guards/DocumentLoadedGuard.html":{}}}],["unsafe",{"_index":959,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["unsuccessful",{"_index":1109,"title":{},"body":{"components/InitComponent.html":{}}}],["up",{"_index":755,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{}}}],["updated",{"_index":451,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["updates",{"_index":1497,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["upon",{"_index":1410,"title":{},"body":{"injectables/QueryService.html":{}}}],["url(\"../../../src/assets/background.jpg",{"_index":1199,"title":{},"body":{"components/InitComponent.html":{}}}],["use",{"_index":463,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"index.html":{}}}],["used",{"_index":992,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["usedcorpus",{"_index":1389,"title":{},"body":{"injectables/QueryService.html":{}}}],["usedcorpus(corpus",{"_index":1417,"title":{},"body":{"injectables/QueryService.html":{}}}],["user",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["userinterfacecomponent",{"_index":147,"title":{"components/UserInterfaceComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"modules/HomeModule.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":1590,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["using",{"_index":229,"title":{},"body":{"interfaces/AppSettings.html":{},"classes/Color.html":{},"classes/DefaultColors.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"components/SettingsComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["utility",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/query.utils",{"_index":483,"title":{},"body":{"components/ComparisonComponent.html":{},"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"injectables/QueryService.html":{}}}],["utils/various.utils",{"_index":924,"title":{},"body":{"components/DocumentContentComponent.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valid",{"_index":1139,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validate",{"_index":1080,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["validate(corpus",{"_index":1248,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validate.service",{"_index":1128,"title":{},"body":{"components/InitComponent.html":{}}}],["validate.service.ts",{"_index":1232,"title":{},"body":{"injectables/JsonValidateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate.service.ts:87",{"_index":1235,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validateandparse",{"_index":1071,"title":{},"body":{"components/InitComponent.html":{}}}],["validateandparse(text",{"_index":1101,"title":{},"body":{"components/InitComponent.html":{}}}],["validatecorpus",{"_index":1233,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validatecorpus(corpus",{"_index":1234,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["validated",{"_index":1106,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validates",{"_index":301,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["validatetext",{"_index":1072,"title":{},"body":{"components/InitComponent.html":{}}}],["validateuploadedfile",{"_index":1073,"title":{},"body":{"components/InitComponent.html":{}}}],["validating",{"_index":1065,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validation",{"_index":1079,"title":{},"body":{"components/InitComponent.html":{},"injectables/JsonValidateService.html":{}}}],["validator",{"_index":1245,"title":{},"body":{"injectables/JsonValidateService.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"classes/Color.html":{},"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"classes/DefaultColors.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{},"components/UserInterfaceComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value?.includes(separator",{"_index":1348,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator",{"_index":1362,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[0",{"_index":1349,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["value?.split(separator)[1",{"_index":1351,"title":{},"body":{"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"pipes/SplitUpPipe.html":{}}}],["valuechanged",{"_index":923,"title":{},"body":{"components/DocumentContentComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["valuechanged(changes?.highlightedwords",{"_index":931,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["valuechanged(changesvalue",{"_index":1731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["values",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/Color.html":{},"classes/DefaultColors.html":{},"pipes/PairSplitFirstPipe.html":{},"pipes/PairSplitSecondPipe.html":{},"pipes/PairUpPipe.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"pipes/SplitUpPipe.html":{}}}],["var",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["variable",{"_index":434,"title":{},"body":{"components/ComparisonComponent.html":{},"coverage.html":{}}}],["variables",{"_index":630,"title":{"miscellaneous/variables.html":{}},"body":{"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"miscellaneous/variables.html":{}}}],["various.utils",{"_index":668,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["version",{"_index":653,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":1765,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":1126,"title":{},"body":{"components/InitComponent.html":{}}}],["viewchild('jsontextarea",{"_index":1121,"title":{},"body":{"components/InitComponent.html":{}}}],["visible",{"_index":910,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["visualisation",{"_index":1740,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1174,"title":{},"body":{"components/InitComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppSettings.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/DocumentContentComponent.html":{},"components/InitComponent.html":{},"injectables/LoadingService.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["vx",{"_index":682,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["vy",{"_index":683,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1",{"_index":725,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1id",{"_index":740,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w1weight",{"_index":741,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2",{"_index":727,"title":{},"body":{"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2id",{"_index":742,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["w2weight",{"_index":743,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["way",{"_index":276,"title":{},"body":{"classes/Color.html":{},"components/ComparisonComponent.html":{},"classes/DefaultColors.html":{},"miscellaneous/functions.html":{}}}],["we'd",{"_index":1730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["we're",{"_index":843,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{}}}],["web",{"_index":1431,"title":{},"body":{"injectables/QueryService.html":{}}}],["webworker",{"_index":1408,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":479,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["weights",{"_index":739,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{}}}],["welcoming",{"_index":1055,"title":{},"body":{"components/InitComponent.html":{}}}],["what's",{"_index":1182,"title":{},"body":{"components/InitComponent.html":{}}}],["what\\'s",{"_index":1220,"title":{},"body":{"components/InitComponent.html":{}}}],["whether",{"_index":427,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentContentComponent.html":{},"guards/DocumentLoadedGuard.html":{},"components/InitComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["wid1",{"_index":777,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wid2",{"_index":779,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["window",{"_index":1480,"title":{},"body":{"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{}}}],["wish",{"_index":1185,"title":{},"body":{"components/InitComponent.html":{}}}],["within",{"_index":988,"title":{},"body":{"guards/DocumentLoadedGuard.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["word",{"_index":421,"title":{},"body":{"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{}}}],["word1",{"_index":722,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["word1}${pairseparator}${word2",{"_index":792,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word2",{"_index":723,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/QueryService.html":{},"miscellaneous/functions.html":{}}}],["word_similarities",{"_index":654,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"injectables/JsonValidateService.html":{},"miscellaneous/variables.html":{}}}],["wordhovered",{"_index":405,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordimportancepairs",{"_index":798,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"miscellaneous/functions.html":{}}}],["wordimportancepairs[id",{"_index":808,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordmap",{"_index":469,"title":{},"body":{"components/ComparisonComponent.html":{},"components/DocumentComponent.html":{},"components/DocumentContentComponent.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["wordpairs",{"_index":393,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[id",{"_index":774,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairs[wordskey",{"_index":795,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordpairskeys",{"_index":770,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["words",{"_index":381,"title":{},"body":{"components/ComparisonComponent.html":{},"interfaces/Corpus.html":{},"components/DocumentContentComponent.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/InitComponent.html":{},"injectables/QueryService.html":{},"interfaces/SelectedDocument.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["words.has(hoveredword",{"_index":948,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(w1",{"_index":946,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["words.has(w2",{"_index":947,"title":{},"body":{"components/DocumentContentComponent.html":{}}}],["wordschanged",{"_index":406,"title":{},"body":{"components/ComparisonComponent.html":{}}}],["wordsimilarity",{"_index":782,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wordskey",{"_index":791,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["word}}{{softmatch",{"_index":629,"title":{},"body":{"components/ComparisonEntryComponent.html":{}}}],["worker",{"_index":1375,"title":{},"body":{"injectables/QueryService.html":{}}}],["worker('../workers/graph",{"_index":1434,"title":{},"body":{"injectables/QueryService.html":{}}}],["workerdata",{"_index":1376,"title":{},"body":{"injectables/QueryService.html":{}}}],["wrap",{"_index":1635,"title":{},"body":{"components/UserInterfaceComponent.html":{}}}],["wrapper",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ComparisonComponent.html":{},"components/ComparisonEntryComponent.html":{},"components/InitComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["wweight1",{"_index":778,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wweight2",{"_index":780,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["wysiwyginsert",{"_index":1193,"title":{},"body":{"components/InitComponent.html":{}}}],["x",{"_index":680,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{},"components/SidenavComponent.html":{}}}],["y",{"_index":681,"title":{},"body":{"interfaces/Corpus.html":{},"interfaces/GraphData.html":{},"interfaces/GraphLink.html":{},"interfaces/GraphNode.html":{}}}],["yes",{"_index":1395,"title":{},"body":{"injectables/QueryService.html":{}}}],["z",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/InitComponent.html":{},"components/UserInterfaceComponent.html":{}}}],["zeros",{"_index":362,"title":{},"body":{"classes/Color.html":{},"classes/DefaultColors.html":{}}}],["zone.js",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/InitModule.html":{},"modules/PipesModule.html":{},"components/UserInterfaceComponent.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main wrapper component of the application, handles only the loading between routes\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                loadingStage\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe loading service, passing values of loading\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Specifies if the page is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Specifies the progress in percentage value of the current stage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Specifies the current loading stage of the entire loading process\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Document Maps'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoadingService} from './services/loading.service';\n\n\n/**\n * Main wrapper component of the application, handles only the loading between routes\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Document Maps';\n\n  /**\n   * Specifies if the page is loading\n   * @public\n   */\n  isLoading = false;\n  /**\n   * Specifies the progress in percentage value of the current stage\n   * @public\n   */\n  loadingProgress: number;\n  /**\n   * Specifies the current loading stage of the entire loading process\n   * @public\n   */\n  loadingStage: string;\n\n  /**\n   * @param loadingService - The loading service, passing values of loading\n   */\n  constructor(\n    private loadingService: LoadingService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadingService.loadingProgress.subscribe(value => {\n      if (this.loadingProgress !== value){\n        this.loadingProgress = value;\n      }\n    });\n    this.loadingService.loadingStage.subscribe(value => {\n      if (this.loadingStage !== value) {\n        this.loadingStage = value;\n      }\n    });\n    this.loadingService.isLoading.subscribe(value => {\n      if (this.isLoading !== value) {\n        this.isLoading = value;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        {{loadingStage}} {{(loadingProgress / 100) | percent}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .loading-wrapper{\n  position: fixed;\n  z-index: 10;\n  background: #fff;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .loading{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    max-width: 600px;\n    width: 100%;\n    height: 100%;\n    position: relative;\n\n    .loading-phrase{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 1em;\n      width: 100%;\n      font-size: 1.65em;\n    }\n    mat-spinner{\n      margin-right: 0.5em;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{loadingStage}} {{(loadingProgress / 100) | percent}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRouter\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport {MaterialModule} from './material.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ExtendedModule, FlexModule} from '@angular/flex-layout';\nimport {RouterModule} from '@angular/router';\nimport {AppRouter} from './app.routes';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    MaterialModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexModule,\n    ExtendedModule,\n    RouterModule,\n    AppRouter\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRouter.html":{"url":"modules/AppRouter.html","title":"module - AppRouter","body":"\n                   \n\n\n\n\n    Modules\n    AppRouter\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CanActivate, RouterModule, Routes} from '@angular/router';\nimport {DocumentLoadedGuard} from './guards/document-loaded.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./init/init.module').then(m => m.InitModule)\"\n  },\n  {\n    path: 'map',\n    canActivate: ([DocumentLoadedGuard]),\n    loadChildren: () => \"import('./home/home.module').then(m => m.HomeModule)\"\n  },\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRouter {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppSettings.html":{"url":"interfaces/AppSettings.html","title":"interface - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/user-interface/settings/settings.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface containing the app settings\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clumpingModifier\n                                \n                                \n                                        distanceModifier\n                                \n                                \n                                        showDeviations\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clumpingModifier\n                                    \n                                \n                                \n                                    \n                                        clumpingModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceModifier\n                                    \n                                \n                                \n                                    \n                                        distanceModifier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeviations\n                                    \n                                \n                                \n                                    \n                                        showDeviations:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Color.html":{"url":"classes/Color.html","title":"class - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/graph.utils.ts\n        \n\n            \n                Description\n            \n            \n                A helper color class, containing color mixing functions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorSrgbGradient\n                            \n                            \n                                    Static\n                                fromHex\n                            \n                            \n                                    Protected\n                                inverseSrgbCompounding\n                            \n                            \n                                mix\n                            \n                            \n                                    Protected\n                                srgbCompounding\n                            \n                            \n                                toHex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(r: number, g: number, b: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/graph.utils.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        g\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        b\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorSrgbGradient\n                        \n                        \n                    \n                \n            \n            \n                \ncolorSrgbGradient(other: Color, gradient: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:102\n                \n            \n\n\n            \n                \n                    A color mix of two colors using the sRGB method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Color\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other color to be mixed\n\n                                    \n                                \n                                \n                                    gradient\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The gradient percentage between the two colors\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHex(hexCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hexCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            inverseSrgbCompounding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inverseSrgbCompounding()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:64\n                \n            \n\n\n            \n                \n                    A function that converts the color from normal color space to sRGB\n\n\n                    \n                        Returns :         Color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mix\n                        \n                        \n                    \n                \n            \n            \n                \nmix(other: Color, gradient: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:53\n                \n            \n\n\n            \n                \n                    A naive way of color mixing, not taking color compression in mind\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Color\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other color to be mixed with\n\n                                    \n                                \n                                \n                                    gradient\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The gradient percentage between the two colors\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            srgbCompounding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    srgbCompounding()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:82\n                \n            \n\n\n            \n                \n                    A function that converts the sRGB color value back to normal color space\n\n\n                    \n                        Returns :         Color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHex\n                        \n                        \n                    \n                \n            \n            \n                \ntoHex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/graph.utils.ts:114\n                \n            \n\n\n            \n                \n                    Converts a color interface to a hex code string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export function normalizeDeviation(value: number, stiffness: number = 1): number{\n  return ((1 + value / (1 + Math.abs(value * stiffness))) - 1)  * stiffness;\n}\n\n/**\n * Returns the base 2 logarithm of a number\n * @param n The number to return the logarithm of\n */\nexport function log2(n: number): number{\n  return Math.log2(n);\n}\n\n/**\n * Returns the 2 to the power of the specified number\n * @param n The number to return the 2 to the power of\n */\nexport function pow2(n: number): number{\n  return Math.pow(2, n);\n}\n\n/**\n * A helper color class, containing color mixing functions\n */\nexport class Color {\n  constructor(protected r: number, protected g: number, protected b: number) {}\n\n  static fromHex(hexCode: string): Color{\n    // A RegEx that validates the passed in string and separates the R, G and B values\n    const conversionRe = new RegExp(/^#?([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})$/);\n    const matches = hexCode.match(conversionRe);\n    // If the string didn't match the RegEx, deny\n    if (!matches){\n      return undefined;\n    }\n    // Convert the individual components from hexadecimal strings to integers\n    const r = parseInt(matches[1], 16);\n    const g = parseInt(matches[2], 16);\n    const b = parseInt(matches[3], 16);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A naive way of color mixing, not taking color compression in mind\n   * @param other     The other color to be mixed with\n   * @param gradient  The gradient percentage between the two colors\n   */\n  mix(other: Color, gradient: number): Color {\n    // Add each component by adding a part of it, based on the gradient\n    const r = this.r * (1 - gradient) + other.r * (gradient);\n    const g = this.g * (1 - gradient) + other.g * (gradient);\n    const b = this.b * (1 - gradient) + other.b * (gradient);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A function that converts the color from normal color space to sRGB\n   */\n  protected inverseSrgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from the normal color space to the sRGB color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A function that converts the sRGB color value back to normal color space\n   */\n  protected srgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from sRGB color space to normal color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.0031308) ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;\n    g = (g > 0.0031308) ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;\n    b = (b > 0.0031308) ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A color mix of two colors using the sRGB method\n   * @param other     The other color to be mixed\n   * @param gradient  The gradient percentage between the two colors\n   */\n  colorSrgbGradient(other: Color, gradient: number): Color {\n    // First convert to sRGB\n    const c1 = this.inverseSrgbCompounding();\n    const c2 = other.inverseSrgbCompounding();\n\n    // Then mix and convert back to normal color space\n    return c1.mix(c2, gradient).srgbCompounding();\n  }\n\n  /**\n   * Converts a color interface to a hex code string\n   */\n  toHex(): string{\n    // Convert the components to hexadecimal strings\n    const r = (this.r >> 0).toString(16);\n    const g = (this.g >> 0).toString(16);\n    const b = (this.b >> 0).toString(16);\n    // Add leading zeros if the string for each component is just one character long\n    return `#${(r.length === 2 ? r : '0' + r)}${(g.length === 2 ? g : '0' + g)}${(b.length === 2 ? b : '0' + b)}`;\n  }\n}\n\n/**\n * A class of static functions that return some predefined colors\n */\nexport class DefaultColors {\n  static readonly deviationCorrect = () => Color.fromHex('#37b03b');\n  static readonly deviationClose = () => Color.fromHex('#b03737');\n  static readonly deviationFar = () => Color.fromHex('#4537b0');\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonComponent.html":{"url":"components/ComparisonComponent.html","title":"component - ComparisonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/comparison/comparison.component.ts\n\n\n    \n        Description\n    \n    \n        A component responsible for the user interface for the selection of words which are to be highlighted\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison\n            \n\n            \n                styleUrls\n                ./comparison.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarities\n                            \n                            \n                                entryHoverEvent\n                            \n                            \n                                hoveredWord\n                            \n                            \n                                scrollable\n                            \n                            \n                                selectedWords\n                            \n                            \n                                sortedWordPairsExact\n                            \n                            \n                                sortedWordPairsSoft\n                            \n                            \n                                wordPairs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkOverflow\n                            \n                            \n                                clearWordSelection\n                            \n                            \n                                generateExactPairs\n                            \n                            \n                                generateSoftPairs\n                            \n                            \n                                generateWordPairs\n                            \n                            \n                                handleEntryHover\n                            \n                            \n                                handleWordSelection\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                wordHovered\n                            \n                            \n                                wordsChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/sidenav/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService holding the corpus\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        wordHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:40\n                            \n                        \n                \n                    \n                        An event emitter that emits when the user hovers over a word\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wordsChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:36\n                            \n                        \n                \n                    \n                        An event emitter that emits when the word selection has been changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkOverflow\n                        \n                        \n                    \n                \n            \n            \n                \ncheckOverflow(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:148\n                \n            \n\n\n            \n                \n                    Checks whether a given HTML element is overflowing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HTML element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nclearWordSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:192\n                \n            \n\n\n            \n                \n                    Clears the selected words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateExactPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateExactPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:117\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsExact variable with just exact matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateSoftPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateSoftPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:132\n                \n            \n\n\n            \n                \n                    Populates the sortedWordPairsSoft variable with just soft matches\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateWordPairs\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateWordPairs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:105\n                \n            \n\n\n            \n                \n                    Generates the word pairs from the corpus in QueryService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleEntryHover\n                        \n                        \n                    \n                \n            \n            \n                \nhandleEntryHover(word: string, event: EntryHoverEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:202\n                \n            \n\n\n            \n                \n                    Handles when the user hovers over a word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that was hovered on\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                                EntryHoverEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event type, whether it was an entry or leave event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordSelection(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:158\n                \n            \n\n\n            \n                \n                    The event handler of when the word selection changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event holding which word was updated, whether it was checked or not and potentially its soft match\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentSimilarities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:69\n                            \n                        \n\n                \n                    \n                        The similarity between the two selected documents\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryHoverEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EntryHoverEvent\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:74\n                            \n                        \n\n                \n                    \n                        A helper field, making it possible to use enum in the HTML template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:65\n                            \n                        \n\n                \n                    \n                        The currently hovered on word\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:61\n                            \n                        \n\n                \n                    \n                        Holds the information of if an HTML element is scrollable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds the selected words in a hierarchical structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsExact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:49\n                            \n                        \n\n                \n                    \n                        Holds the sorted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedWordPairsSoft\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:53\n                            \n                        \n\n                \n                    \n                        Holds the sorted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wordPairs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison.component.ts:45\n                            \n                        \n\n                \n                    \n                        Holds the all matched word pairs and their associated weight\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges, EventEmitter, Output} from '@angular/core';\nimport {QueryService} from '../../../services/query.service';\nimport {SelectedDocument} from '../sidenav.component';\nimport * as queryUtils from '../../../utils/query.utils';\n\n/**\n * An enum, specifying the hover event type\n */\nexport enum EntryHoverEvent{\n  Enter, Leave\n}\n\n/**\n * A type, specifying the relation of two matched words\n */\nexport type WordMap = Map>;\n\n/**\n * A component responsible for the user interface for the selection of words which are to be highlighted\n */\n@Component({\n  selector: 'app-comparison',\n  templateUrl: './comparison.component.html',\n  styleUrls: ['./comparison.component.scss']\n})\nexport class ComparisonComponent implements OnInit, OnChanges {\n\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[];\n\n  /**\n   * An event emitter that emits when the word selection has been changed\n   */\n  @Output() wordsChanged = new EventEmitter();\n  /**\n   * An event emitter that emits when the user hovers over a word\n   */\n  @Output() wordHovered = new EventEmitter();\n\n  /**\n   * Holds the all matched word pairs and their associated weight\n   */\n  wordPairs: {[key: string]: number};\n  /**\n   * Holds the sorted exact matches\n   */\n  sortedWordPairsExact: any[];\n  /**\n   * Holds the sorted soft matches\n   */\n  sortedWordPairsSoft: any[];\n  /**\n   * Holds the selected words in a hierarchical structure\n   */\n  selectedWords: WordMap = new Map>();\n  /**\n   * Holds the information of if an HTML element is scrollable\n   */\n  scrollable: {[key: string]: boolean} = {};\n  /**\n   * The currently hovered on word\n   */\n  hoveredWord: string;\n  /**\n   * The similarity between the two selected documents\n   */\n  documentSimilarities: number;\n\n  /**\n   * A helper field, making it possible to use enum in the HTML template\n   */\n  entryHoverEvent = EntryHoverEvent;\n\n  /**\n   * @param queryService  The QueryService holding the corpus\n   */\n  constructor(private queryService: QueryService) {}\n\n  ngOnInit(): void {\n    // When the component becomes active and there are exactly two selected documents\n    if (this.selectedDocuments?.length === 2){\n      this.generateWordPairs();\n      const id1 = this.selectedDocuments[0].id;\n      const id2 = this.selectedDocuments[1].id;\n      this.documentSimilarities = this.queryService.getSoftCosineMeasure(id1, id2);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // When the user selects or deselects some documents\n    if (changes.selectedDocuments){\n      // If the new selection has only two documents selected\n      if (changes.selectedDocuments.currentValue.length === 2) {\n        this.generateWordPairs();\n      }\n      this.clearWordSelection();\n    }\n  }\n\n  /**\n   * Generates the word pairs from the corpus in QueryService\n   */\n  generateWordPairs(): void{\n    // Retrieve the word pairs from the corpus\n    this.wordPairs = this.queryService.getNormalizedWordImportancePairs(this.selectedDocuments[0].id, this.selectedDocuments[1].id);\n\n    // Extract the exact and soft pairs from them\n    this.generateExactPairs();\n    this.generateSoftPairs();\n  }\n\n  /**\n   * Populates the sortedWordPairsExact variable with just exact matches\n   */\n  generateExactPairs(): void{\n    // Extract the exact matches from all the word pairs\n    const exactPairs = queryUtils.getMostImportantExactMatches(this.wordPairs);\n    // Sort the array\n    const items = Object.keys(exactPairs).map((key) => {\n      return [key, exactPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    // Store the array\n    this.sortedWordPairsExact = items;\n  }\n\n  /**\n   * Populates the sortedWordPairsSoft variable with just soft matches\n   */\n  generateSoftPairs(): void{\n    // Extract the soft matches from all the word pairs\n    const softPairs = queryUtils.getMostImportantSoftMatches(this.wordPairs);\n    // Sort the array\n    const items = Object.keys(softPairs).map((key) => {\n      return [key, softPairs[key]];\n    });\n    items.sort((first, second) => second[1] - first[1]);\n    // Store the array\n    this.sortedWordPairsSoft = items;\n  }\n\n  /**\n   * Checks whether a given HTML element is overflowing\n   * @param element   The HTML element\n   */\n  checkOverflow(element: HTMLElement): void {\n    // Look, if the element is taller than the actual showed height and isn't scrolled all the way down\n    this.scrollable[element.id] = element.offsetHeight ([matchWord]));\n      }\n    }\n    // If the word was deselected\n    else {\n      // If there are more matched words to the parent word, we only remove the one matched word\n      if (entry?.size > 1){\n        entry.delete(matchWord);\n      }\n      // Otherwise we delete the entire parent from the map\n      else {\n        this.selectedWords.delete(e.word);\n      }\n    }\n    // Notify the parent\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Clears the selected words\n   */\n  clearWordSelection(): void{\n    this.selectedWords.clear();\n    this.wordsChanged.emit(this.selectedWords);\n  }\n\n  /**\n   * Handles when the user hovers over a word\n   * @param word  The word that was hovered on\n   * @param event The event type, whether it was an entry or leave event\n   */\n  handleEntryHover(word: string, event: EntryHoverEvent): void{\n    // Temporarily store the previously hovered word\n    const prevWord = this.hoveredWord;\n    // If the user started hovering a word, we store it\n    if (event === EntryHoverEvent.Enter){\n      this.hoveredWord = word;\n    }\n    // Otherwise, the user has left the word, if the word is the currently hovered word, we reset it.\n    else if (this.hoveredWord === word){\n      this.hoveredWord = undefined;\n    }\n    // If the hovered word has changed, we notify the parent\n    if (prevWord !== this.hoveredWord){\n      this.wordHovered.emit(this.hoveredWord);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Exact matches\n    \n      \n        \n      \n      No hard matches\n    \n    \n  \n  \n    Soft matches\n    \n      \n        \n      \n      No soft matches\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./comparison.component.scss\n                \n                .comparison-wrapper{\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  padding-top: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 100%;\n  .matches-exact, .matches-soft{\n    width: 50%;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    h2{\n      margin: 0 1em 0.5em 1em;\n    }\n  }\n  .comparison-matches {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow: auto;\n    padding: 0 1em;\n    position: relative;\n\n    ::ng-deep {\n      app-comparison-entry {\n        border-radius: 5px;\n        padding: 0 1em;\n        margin-bottom: 1px;\n        &:nth-child(odd){\n          background-color: #fafafa;\n        }\n        &:nth-child(even){\n          background-color: #eeeeee;\n        }\n\n        .mat-checkbox-layout .mat-checkbox-label{\n          overflow: hidden;\n          text-overflow: ellipsis;\n          width: 100px;\n          line-height: 1.4;\n        }\n      }\n    }\n  }\n\n  .matches-fade{\n    position: absolute;\n    bottom: 0;\n    left: 1em;\n    right: 2em;\n    height: 1px;\n    background: #fff;\n    box-shadow: 0 -4px 15px 12px #fff;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Exact matches                              No hard matches                Soft matches                              No soft matches          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComparisonEntryComponent.html":{"url":"components/ComparisonEntryComponent.html","title":"component - ComparisonEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComparisonEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts\n\n\n    \n        Description\n    \n    \n        The individual word entry, containing the UI and logic for one word\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comparison-entry\n            \n\n            \n                styleUrls\n                ./comparison-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comparison-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBarWidth\n                            \n                            \n                                handleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentSimilarity\n                            \n                            \n                                softMatch\n                            \n                            \n                                weight\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentSimilarity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:25\n                            \n                        \n                \n                    \n                        The total cosine similarity of the two compared documents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        softMatch\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:29\n                            \n                        \n                \n                    \n                        The soft match this word has\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:21\n                            \n                        \n                \n                    \n                        The weight of the current word match in the document comparison\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        word\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:17\n                            \n                        \n                \n                    \n                        The word this entry is bound to\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:34\n                            \n                        \n                \n                    \n                        The event emitter, emitting when the user has selected this word\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBarWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetBarWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:39\n                \n            \n\n\n            \n                \n                    Calculates the bar width percentage\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleChange(e: MatCheckboxChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts:47\n                \n            \n\n\n            \n                \n                    An event handler, handling when the checkmark is checked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The checkbox event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\n\n/**\n * The individual word entry, containing the UI and logic for one word\n */\n@Component({\n  selector: 'app-comparison-entry',\n  templateUrl: './comparison-entry.component.html',\n  styleUrls: ['./comparison-entry.component.scss']\n})\nexport class ComparisonEntryComponent {\n\n  /**\n   * The word this entry is bound to\n   */\n  @Input() word: string;\n  /**\n   * The weight of the current word match in the document comparison\n   */\n  @Input() weight: number;\n  /**\n   * The total cosine similarity of the two compared documents\n   */\n  @Input() documentSimilarity: number;\n  /**\n   * The soft match this word has\n   */\n  @Input() softMatch: string;\n\n  /**\n   * The event emitter, emitting when the user has selected this word\n   */\n  @Output() selectedChange = new EventEmitter();\n\n  /**\n   * Calculates the bar width percentage\n   */\n  getBarWidth(): number{\n    return this.weight / this.documentSimilarity;\n  }\n\n  /**\n   * An event handler, handling when the checkmark is checked\n   * @param e The checkbox event\n   */\n  handleChange(e: MatCheckboxChange): void{\n    this.selectedChange.emit({ word: this.word, checked: e.checked, softMatch: this.softMatch});\n  }\n}\n\n    \n\n    \n        \n  {{word}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n\n  {{word}}{{softMatch}}\n  {{getBarWidth() | percent:'.2'}}\n\n\n    \n\n    \n                \n                    ./comparison-entry.component.scss\n                \n                @import \"../../../../../variables\";\n\n.comparison-entry{\n  padding: 0.25em 0;\n  display: flex;\n  align-items: center;\n  justify-content: stretch;\n}\n\n.word-wrapper{\n  flex-shrink: 0;\n  width: 120px;\n  margin-right: 1em;\n}\n\n.bar-wrapper{\n  flex-grow: 1;\n  width: 100%;\n  height: 1em;\n  margin-right: 3em;\n}\n\n.bar{\n  height: 100%;\n  background: map-get($color, primary);\n  border-radius: 2px;\n  position: relative;\n\n  span{\n    color: rgba(0, 0, 0, 0.7);\n    position: absolute;\n    right: -4em;\n    line-height: 1em;\n    font-size: 0.9em;\n    top: calc(50% - 0.4em);\n    display: block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{word}}  {{getBarWidth() | percent:\\'.2\\'}}  {{word}}{{softMatch}}  {{getBarWidth() | percent:\\'.2\\'}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComparisonEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Corpus.html":{"url":"interfaces/Corpus.html","title":"interface - Corpus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Corpus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                The main corpus interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        results\n                                \n                                \n                                        texts\n                                \n                                \n                                        texts_bow\n                                \n                                \n                                        version\n                                \n                                \n                                        word_similarities\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The map, binding word ids to their actual meaning \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing individual queries and their top results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                    \n                                \n                                \n                                    \n                                        texts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The texts of the document, consisting of an array of word ids \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts_bow\n                                    \n                                \n                                \n                                    \n                                        texts_bow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bag of words representation of the document's texts \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of the corpus \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        word_similarities\n                                    \n                                \n                                \n                                    \n                                        word_similarities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The map, containing the cosine similarities between two words \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // If the words are not in each others similarities, then they're not similar\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  // Return the found similarity\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultColors.html":{"url":"classes/DefaultColors.html","title":"class - DefaultColors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultColors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/graph.utils.ts\n        \n\n            \n                Description\n            \n            \n                A class of static functions that return some predefined colors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                deviationClose\n                            \n                            \n                                    Static\n                                    Readonly\n                                deviationCorrect\n                            \n                            \n                                    Static\n                                    Readonly\n                                deviationFar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deviationClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/graph.utils.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deviationCorrect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/graph.utils.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deviationFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/graph.utils.ts:130\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export function normalizeDeviation(value: number, stiffness: number = 1): number{\n  return ((1 + value / (1 + Math.abs(value * stiffness))) - 1)  * stiffness;\n}\n\n/**\n * Returns the base 2 logarithm of a number\n * @param n The number to return the logarithm of\n */\nexport function log2(n: number): number{\n  return Math.log2(n);\n}\n\n/**\n * Returns the 2 to the power of the specified number\n * @param n The number to return the 2 to the power of\n */\nexport function pow2(n: number): number{\n  return Math.pow(2, n);\n}\n\n/**\n * A helper color class, containing color mixing functions\n */\nexport class Color {\n  constructor(protected r: number, protected g: number, protected b: number) {}\n\n  static fromHex(hexCode: string): Color{\n    // A RegEx that validates the passed in string and separates the R, G and B values\n    const conversionRe = new RegExp(/^#?([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})([0-9a-fA-F]{1,2})$/);\n    const matches = hexCode.match(conversionRe);\n    // If the string didn't match the RegEx, deny\n    if (!matches){\n      return undefined;\n    }\n    // Convert the individual components from hexadecimal strings to integers\n    const r = parseInt(matches[1], 16);\n    const g = parseInt(matches[2], 16);\n    const b = parseInt(matches[3], 16);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A naive way of color mixing, not taking color compression in mind\n   * @param other     The other color to be mixed with\n   * @param gradient  The gradient percentage between the two colors\n   */\n  mix(other: Color, gradient: number): Color {\n    // Add each component by adding a part of it, based on the gradient\n    const r = this.r * (1 - gradient) + other.r * (gradient);\n    const g = this.g * (1 - gradient) + other.g * (gradient);\n    const b = this.b * (1 - gradient) + other.b * (gradient);\n    return new Color(r, g, b);\n  }\n\n  /**\n   * A function that converts the color from normal color space to sRGB\n   */\n  protected inverseSrgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from the normal color space to the sRGB color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A function that converts the sRGB color value back to normal color space\n   */\n  protected srgbCompounding(): Color {\n    // Convert the individual components from range [0, 255] to [0, 1]\n    let r = this.r / 255;\n    let g = this.g / 255;\n    let b = this.b / 255;\n\n    // Convert the individual components from sRGB color space to normal color space\n    // According to https://entropymine.com/imageworsener/srgbformula/\n    r = (r > 0.0031308) ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;\n    g = (g > 0.0031308) ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;\n    b = (b > 0.0031308) ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;\n\n    return new Color(r * 255, g * 255, b * 255);\n  }\n\n  /**\n   * A color mix of two colors using the sRGB method\n   * @param other     The other color to be mixed\n   * @param gradient  The gradient percentage between the two colors\n   */\n  colorSrgbGradient(other: Color, gradient: number): Color {\n    // First convert to sRGB\n    const c1 = this.inverseSrgbCompounding();\n    const c2 = other.inverseSrgbCompounding();\n\n    // Then mix and convert back to normal color space\n    return c1.mix(c2, gradient).srgbCompounding();\n  }\n\n  /**\n   * Converts a color interface to a hex code string\n   */\n  toHex(): string{\n    // Convert the components to hexadecimal strings\n    const r = (this.r >> 0).toString(16);\n    const g = (this.g >> 0).toString(16);\n    const b = (this.b >> 0).toString(16);\n    // Add leading zeros if the string for each component is just one character long\n    return `#${(r.length === 2 ? r : '0' + r)}${(g.length === 2 ? g : '0' + g)}${(b.length === 2 ? b : '0' + b)}`;\n  }\n}\n\n/**\n * A class of static functions that return some predefined colors\n */\nexport class DefaultColors {\n  static readonly deviationCorrect = () => Color.fromHex('#37b03b');\n  static readonly deviationClose = () => Color.fromHex('#b03737');\n  static readonly deviationFar = () => Color.fromHex('#4537b0');\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentComponent.html":{"url":"components/DocumentComponent.html","title":"component - DocumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document.component.ts\n\n\n    \n        Description\n    \n    \n        The displayed document component, showing the documents text\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document\n            \n\n            \n                styleUrls\n                ./document.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        document\n                    \n                \n                \n                    \n                        Type :         SelectedDocument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:18\n                            \n                        \n                \n                    \n                        The bound displayed document to this component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:22\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:30\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document.component.ts:34\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {SelectedDocument} from '../sidenav.component';\nimport {WordMap} from '../comparison/comparison.component';\n\n/**\n * The displayed document component, showing the documents text\n */\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent {\n\n  /**\n   * The bound displayed document to this component\n   */\n  @Input() document: SelectedDocument;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: Set;\n  /**\n   * The current WordMap containing the relations of matches\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n\n}\n\n    \n\n    \n        \n  \n    {{document.title}}\n    {{document.subtitle}}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./document.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{document.title}}    {{document.subtitle}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentContentComponent.html":{"url":"components/DocumentContentComponent.html","title":"component - DocumentContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/document/document-content/document-content.component.ts\n\n\n    \n        Description\n    \n    \n        The content of a document, showing the actual text of the document and the highlights\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-content\n            \n\n            \n                styleUrls\n                ./document-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                convertedContent\n                            \n                            \n                                    Public\n                                escapeHtml\n                            \n                            \n                                    Public\n                                splitUpPipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedContent\n                            \n                            \n                                getReversedWordMap\n                            \n                            \n                                isWordLowlighted\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(escapeHtml: EscapeHtmlPipe, splitUpPipe: SplitUpPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        escapeHtml\n                                                  \n                                                        \n                                                                    EscapeHtmlPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pipe, responsible for converting text to HTML safe text\n\n                                                        \n                                                \n                                                \n                                                        splitUpPipe\n                                                  \n                                                        \n                                                                    SplitUpPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A pipe, splitting up the pairs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:22\n                            \n                        \n                \n                    \n                        The text of the document\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedExactMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:26\n                            \n                        \n                \n                    \n                        The currently highlighted exact matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedSoftMatches\n                    \n                \n                \n                    \n                        Type :     Set\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:30\n                            \n                        \n                \n                    \n                        The currently highlighted soft matches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedWordMap\n                    \n                \n                \n                    \n                        Type :         WordMap\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:34\n                            \n                        \n                \n                    \n                        The current WordMap containing the relations of matched words\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoveredWord\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:38\n                            \n                        \n                \n                    \n                        The currently hovered on word\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:113\n                \n            \n\n\n            \n                \n                    Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReversedWordMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetReversedWordMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:68\n                \n            \n\n\n            \n                \n                    Gets the reversed WordMap, mapping child words to their parent words\n\n\n                    \n                        Returns :         WordMap\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isWordLowlighted\n                        \n                        \n                    \n                \n            \n            \n                \nisWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:94\n                \n            \n\n\n            \n                \n                    Determines whether a word should be marked as lowlighted, making it less visible in the document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word that's being evaluated\n\n                                    \n                                \n                                \n                                    hoveredWord\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The currently hovered on word\n\n                                    \n                                \n                                \n                                    words\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The set, containing all the matched words\n\n                                    \n                                \n                                \n                                    reversedWordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reversed WordMap\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertedContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:43\n                            \n                        \n\n                \n                    \n                        The HTML safe content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            escapeHtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EscapeHtmlPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:50\n                            \n                        \n\n                \n                    \n                        The pipe, responsible for converting text to HTML safe text\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splitUpPipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SplitUpPipe\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/document/document-content/document-content.component.ts:51\n                            \n                        \n\n                \n                    \n                        A pipe, splitting up the pairs\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {EscapeHtmlPipe} from '../../../../pipes/escape-html.pipe';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport {WordMap} from '../../comparison/comparison.component';\nimport {pairSeparator, valueChanged} from '../../../../utils/various.utils';\nimport {SplitUpPipe} from '../../../../pipes/pair-split.pipe';\n\n/**\n * The content of a document, showing the actual text of the document and the highlights\n */\n@Component({\n  selector: 'app-document-content',\n  templateUrl: './document-content.component.html',\n  styleUrls: ['./document-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocumentContentComponent implements OnInit, OnChanges {\n\n  /**\n   * The text of the document\n   */\n  @Input() content: string;\n  /**\n   * The currently highlighted exact matches\n   */\n  @Input() highlightedExactMatches: Set;\n  /**\n   * The currently highlighted soft matches\n   */\n  @Input() highlightedSoftMatches: Set;\n  /**\n   * The current WordMap containing the relations of matched words\n   */\n  @Input() highlightedWordMap: WordMap;\n  /**\n   * The currently hovered on word\n   */\n  @Input() hoveredWord: string;\n\n  /**\n   * The HTML safe content\n   */\n  convertedContent: string;\n\n  /**\n   * @param escapeHtml  The pipe, responsible for converting text to HTML safe text\n   * @param splitUpPipe A pipe, splitting up the pairs\n   */\n  constructor(\n    public escapeHtml: EscapeHtmlPipe,\n    public splitUpPipe: SplitUpPipe\n  ) { }\n\n  ngOnInit(): void {\n    this.convertedContent = this.getFormattedContent();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // If the highlighted word changes, format the content again\n    if (valueChanged(changes?.highlightedWords)){\n      this.convertedContent = this.getFormattedContent();\n    }\n  }\n\n  /**\n   * Gets the reversed WordMap, mapping child words to their parent words\n   */\n  getReversedWordMap(): WordMap{\n    const entries = this.highlightedWordMap.entries();\n    const out = new Map>();\n    // Go over the parent and all children\n    for (const [parent, set] of entries){\n      for (const match of set){\n        // If the reverse map already has the child as a key\n        if (out.has(match)){\n          // Add the parent to the set\n          out.get(match).add(parent);\n        } else {\n          // Create an entry for the child and parent\n          out.set(match, new Set([parent]));\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * Determines whether a word should be marked as lowlighted, making it less visible in the document\n   * @param word              The word that's being evaluated\n   * @param hoveredWord       The currently hovered on word\n   * @param words             The set, containing all the matched words\n   * @param reversedWordMap   The reversed WordMap\n   */\n  isWordLowlighted(word: string, hoveredWord: string, words: Set, reversedWordMap: WordMap): boolean {\n    // If there is no hovered word, then no words should be low-lighted\n    if (!hoveredWord){\n      return false;\n    }\n    // If the hovered word is a soft match (contains a pair separator)\n    if (hoveredWord.includes(pairSeparator)){\n      // Split the pair up\n      const [w1, w2] = this.splitUpPipe.transform(hoveredWord);\n      // See if one of the words in the pair is selected and neither of the words is the one being evaluated\n      return (words.has(w1) || words.has(w2)) && !(word === w1 || word === w2);\n    }\n    // If the hovered word is an exact match, see if the hovered word is selected and is not the one being evaluated\n    return words.has(hoveredWord) && !(hoveredWord === word || reversedWordMap.get(word)?.has(hoveredWord));\n  }\n\n  /**\n   * Sets the content of this document, highlighting and lowlighting the appropriate words in the process\n   */\n  getFormattedContent(): string{\n    // Merge the exact and soft matches sets\n    const allWords = new Set([...this.highlightedSoftMatches, ...this.highlightedExactMatches]);\n    // Escape the potential intrusive HTML characters\n    let content = this.escapeHtml.transform(this.content);\n    const reversedWordMap = this.getReversedWordMap();\n    // Go over all the selected words\n    for (const word of allWords){\n      // Escape the evaluated word for more unsafe HTML characters\n      const escapedWord = this.escapeHtml.transform(word);\n      // Create a new RegEx, that matches all the looked for words, that have no characters before and after\n      const re = new RegExp(`(?${escapedWord}`);\n    }\n    return content;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./document-content.component.scss\n                \n                @import '../../../../../variables';\n\n$highlight: map-get($color, secondary);\n$soft-highlight: map-get($color, tertiary);\n$lowlight: map-get($color, lowlight);\n\np{\n  $hovered-word: attr(data-hovered);\n  font-style: italic;\n  word-spacing: 2px;\n  line-height: 1.65;\n\n  ::ng-deep .highlight{\n    background-color: $highlight;\n    box-shadow: -2px 0px 2px 0px $highlight, 2px 0px 2px 0px $highlight;\n  }\n\n  ::ng-deep .lowlight{\n    background-color: $lowlight;\n    box-shadow: -2px 0px 2px 0px $lowlight, 2px 0px 2px 0px $lowlight;\n  }\n\n  ::ng-deep .highlight.soft{\n    background-color: $soft-highlight;\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n\n  ::ng-deep .highlight.both{\n    background-color: linear-gradient(45deg, $soft-highlight 0%, $soft-highlight 50%, $highlight 50%, $highlight 50%);\n    box-shadow: -2px 0px 2px 0px $soft-highlight, 2px 0px 2px 0px $soft-highlight;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DocumentLoadedGuard.html":{"url":"guards/DocumentLoadedGuard.html","title":"guard - DocumentLoadedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    DocumentLoadedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/document-loaded.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents a route from happening unless a corpus is loaded within the QueryService\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/document-loaded.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The query service where the corpus is located\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router used for navigating to homepage if document is not loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/document-loaded.guard.ts:26\n                \n            \n\n\n            \n                \n                    Returns an observable that returns a boolean whether a corpus is present in the QueryService\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {QueryService} from '../services/query.service';\nimport {map} from 'rxjs/operators';\n\n/**\n * Prevents a route from happening unless a corpus is loaded within the QueryService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentLoadedGuard implements CanActivate {\n  /**\n   * @param queryService  The query service where the corpus is located\n   * @param router        The router used for navigating to homepage if document is not loaded\n   */\n  constructor(\n    private queryService: QueryService,\n    private router: Router\n  ) {}\n\n  /**\n   * Returns an observable that returns a boolean whether a corpus is present in the QueryService\n   */\n  canActivate(): Observable {\n    return this.queryService.currentCorpus\n      .pipe(map((corpus) => {\n        if (corpus !== undefined){\n          return true;\n        }\n        this.router.navigate(['']);\n        return false;\n      }));\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/escape-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe that escapes the HTML special characters\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        escapeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/escape-html.pipe.ts:14\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be transformed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * A pipe that escapes the HTML special characters\n */\n@Pipe({\n  name: 'escapeHtml'\n})\nexport class EscapeHtmlPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param text  The text to be transformed\n   */\n  transform(text: string): string {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(//g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        links\n                                \n                                \n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         GraphLink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphLink[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The links of the nodes, holding info about the similarities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         GraphNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphNode[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The nodes to be displayed on the graph \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // If the words are not in each others similarities, then they're not similar\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  // Return the found similarity\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphLink.html":{"url":"interfaces/GraphLink.html","title":"interface - GraphLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first node's id in the relationship \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The second node's id in the relationship \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cosine measure between the two documents \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // If the words are not in each others similarities, then they're not similar\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  // Return the found similarity\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphNode.html":{"url":"interfaces/GraphNode.html","title":"interface - GraphNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query.utils.ts\n        \n\n            \n                Description\n            \n            \n                An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fx\n                                \n                                \n                                            Optional\n                                        fy\n                                \n                                \n                                        group\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                            Optional\n                                        vx\n                                \n                                \n                                            Optional\n                                        vy\n                                \n                                \n                                            Optional\n                                        x\n                                \n                                \n                                            Optional\n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fx\n                                    \n                                \n                                \n                                    \n                                        fx:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fy\n                                    \n                                \n                                \n                                    \n                                        fy:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The group this node belongs to (document, query, ...) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the document, bound to this node \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vx\n                                    \n                                \n                                \n                                    \n                                        vx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vy\n                                    \n                                \n                                \n                                    \n                                        vy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {pairSeparator} from './various.utils';\n\n/**\n * The main corpus interface\n */\nexport interface Corpus {\n  /** The map, binding word ids to their actual meaning */\n  dictionary: {[key: string]: string};\n  /** The object containing individual queries and their top results */\n  results: {[key: string]: string[]};\n  /** The texts of the document, consisting of an array of word ids */\n  texts: {[key: string]: string[]};\n  /** The bag of words representation of the document's texts */\n  texts_bow: {[key: string]: {[key: string]: number}};\n  /** The version of the corpus */\n  version: string;\n  /** The map, containing the cosine similarities between two words */\n  word_similarities: {[key: string]: {[key: string]: number}};\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationNodeDatum\n */\nexport interface GraphNode {\n  /** The id of the document, bound to this node */\n  id: string;\n  /** The group this node belongs to (document, query, ...) */\n  group: number;\n\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n}\n\n/**\n * An interface, specifying information about a node in the D3 graph, indirectly inherits from SimulationLinkDatum\n */\nexport interface GraphLink {\n  /** The first node's id in the relationship */\n  source: string;\n  /** The second node's id in the relationship */\n  target: string;\n  /** The cosine measure between the two documents */\n  value: number;\n  index?: number;\n}\n\n/**\n * An interface, containing the arrays of GraphNodes and GraphLinks passed to the D3 simulation\n */\nexport interface GraphData{\n  /** The nodes to be displayed on the graph */\n  nodes: GraphNode[];\n  /** The links of the nodes, holding info about the similarities */\n  links: GraphLink[];\n}\n\n/**\n * Returns the ID of a given word\n * @param word    The word to retrieve the id of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWordId(word: string, corpus: Corpus): string {\n  // Return the id, that matches the looked for word\n  return Object.keys(corpus.dictionary).find(key => corpus.dictionary[key] === word);\n}\n\n/**\n * Returns the word from dictionary of a given id\n * @param id      The id to retrieve the word of\n * @param corpus  The corpus to perform the query on\n */\nexport function getWord(id: string, corpus: Corpus): string {\n  return corpus.dictionary[id];\n}\n\n/**\n * Returns the cosine similarity of two word ids\n * @param id1     The first id to compare\n * @param id2     The second id to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarity(id1: string, id2: string, corpus: Corpus): number {\n  // If the ids are the same, then the words are the same\n  if (id1 === id2) {\n    return 1.0;\n  }\n  // Sort the ids, so that id1 holds the lower id\n  if (+id1 > +id2) {\n    id2 = [id1, id1 = id2][0];\n  }\n  // If the words are not in each others similarities, then they're not similar\n  if (!(id1 in corpus.word_similarities) || !(id2 in corpus.word_similarities[id1])) {\n    return 0.0;\n  }\n  // Return the found similarity\n  return corpus.word_similarities[id1][id2];\n}\n\n/**\n * Returns the cosine similarity of two words\n * @param word1   The first word to compare\n * @param word2   The second word to compare\n * @param corpus  The corpus to perform the query on\n */\nexport function getSimilarityWord(word1: string, word2: string, corpus: Corpus): number{\n  // Convert the words to ids\n  const w1 = getWordId(word1, corpus);\n  const w2 = getWordId(word2, corpus);\n  // Return their similarity\n  return getSimilarity(w1, w2, corpus);\n}\n\n/**\n * Calculates the inner product of the cosine similarities of two document ids\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProduct(id1, id2, corpus: Corpus): number{\n  const entries1 = Object.entries(corpus.texts_bow[id1]);\n  const entries2 = Object.entries(corpus.texts_bow[id2]);\n  let similarity = 0.0;\n  // Cumulatively add on the similarities of words, and their contributed weights\n  for (const [w1ID, w1Weight] of entries1){\n    for (const [w2ID, w2Weight] of entries2){\n      similarity += getSimilarity(w1ID, w2ID, corpus) * w1Weight * w2Weight;\n    }\n  }\n  return similarity;\n}\n\n/**\n * Calculates the inner product of the cosine similarity of one document id\n * @param id      The text id\n * @param corpus  The corpus to perform the query on\n */\nexport function innerProductSingle(id, corpus: Corpus): number {\n  const entries = Object.entries(corpus.texts_bow[id]);\n  let similarity = 0.0;\n  // Go over all the pairs of words in the document, skipping, if the pair has been done already\n  for (let i = 0; i  getWord(word, corpus));\n  // Join up the array and separate the words by spaces\n  return text.join(' ');\n}\n\n/**\n * Returns the normalized word importance pairs\n * @param id1     The first text id\n * @param id2     The second text id\n * @param corpus  The corpus to perform the query on\n */\nexport function getNormalizedWordImportancePairs(id1: string, id2: string, corpus: Corpus): {[key: string]: number}{\n  const bowEntries1 = Object.entries(corpus.texts_bow[id1]);\n  const bowEntries2 = Object.entries(corpus.texts_bow[id2]);\n\n  // Retrieve the most important matched pairs from the documents\n  const wordPairs = getWordImportancePairs(bowEntries1, bowEntries2, corpus);\n  // Get the normalization number\n  const norm = softCosineMeasureNorm(id1, id2, corpus);\n  const normWordPairs: {[key: string]: number} = {};\n  const wordPairsKeys = Object.keys(wordPairs);\n  // Go over all the word pairs and normalize them\n  for (const id of wordPairsKeys){\n    normWordPairs[id] = wordPairs[id] / norm;\n  }\n  return normWordPairs;\n}\n\n/**\n * Returns the non-normalized word importance pairs\n * @param bowEntries1 The key-value pairs of the bag of word of the first document\n * @param bowEntries2 The key-value pairs of the bag of word of the second document\n * @param corpus      The corpus to perform the query on\n */\nfunction getWordImportancePairs(bowEntries1: [string, number][], bowEntries2: [string, number][], corpus: Corpus): {[key: string]: number}{\n  const wordPairs: {[key: string]: number} = {};\n  // Iterate over the entries of each bag of words with each other\n  for (const [wID1, wWeight1] of bowEntries1) {\n    for (const [wID2, wWeight2] of bowEntries2) {\n      // Calculate their similarity and importance\n      const wordSimilarity = getSimilarity(wID1, wID2, corpus);\n      const importance = wWeight1 * wordSimilarity * wWeight2;\n      if (importance === 0) {\n        // Skip if the words aren't similar at all\n        continue;\n      }\n      // Convert to words\n      const word1 = getWord(wID1, corpus);\n      const word2 = getWord(wID2, corpus);\n      // Pair up the matched words with a default pair separator, defaults to \\0\n      const wordsKey = `${word1}${pairSeparator}${word2}`;\n      // If the current word pair is not in the output dictionary, create a new entry\n      if (!Object.keys(wordPairs).includes(wordsKey)){\n        wordPairs[wordsKey] = 0.0;\n      }\n      wordPairs[wordsKey] += importance;\n    }\n  }\n  return wordPairs;\n}\n\n/**\n * Filters through the word importance pairs and returns only exact matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantExactMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const exactMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words in pairs are the same, add them to the output dictionary\n    if (ids[0] === ids[1]){\n      exactMatches[ids[0]] = wordImportancePairs[id];\n    }\n  }\n  return exactMatches;\n}\n\n/**\n * Filters through the word importance pairs and returns only soft matches\n * @param wordImportancePairs The pairs to filter through\n */\nexport function getMostImportantSoftMatches(wordImportancePairs: any): any{\n  const keys = Object.keys(wordImportancePairs);\n  const softMatches = {};\n  // Iterate over the word pairs\n  for (const id of keys){\n    // Separate them by their pair separator\n    const ids = id.split(pairSeparator);\n    // Only if the words are not the same, they're soft matches, add them to the output dictionary\n    if (ids[0] !== ids[1]){\n      softMatches[id] = wordImportancePairs[id];\n    }\n  }\n  return softMatches;\n}\n\n/**\n * Cosine distance calculation formula with modifiers\n * @param weight      The cosine similarity of two documents\n * @param multiplier  The linear multiplier of the formula\n * @param clumping    The exponent of the formula\n */\nexport function calculateCosineDistance(weight: number, multiplier: number = 1, clumping: number = 1): number{\n  return Math.pow(1 - weight, clumping) * multiplier;\n}\n\n/**\n * An observable, responsible for creating the GraphNode elements\n * @param corpus  The corpus to create the nodes from\n */\nexport function createNodes(corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const entries = Object.entries(corpus.results);\n    const nodes: GraphNode[] = [];\n    // Iterate over the queries in the corpus, storing the index\n    let i = 0;\n    for (const [id, docs] of entries){\n      // Send out the current progress percentage, based on the current index and the length of the array\n      subscriber.next({progress: (i / entries.length) * 100});\n      // Create a new node, with the id and the group 1, indicating that this node is a query\n      const node = {id, group: 1};\n      nodes.push(node);\n      // Go over the matched top documents to this query, and create new nodes based on those.\n      for (const d of docs) {\n        const doc = {id: d, group: 2};\n        nodes.push(doc);\n      }\n      i++;\n    }\n    // When we're done, emit the data and that the progress is done\n    subscriber.next({progress: 100, data: nodes});\n    subscriber.complete();\n  });\n}\n\n/**\n * An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n * @param nodes   The GraphNodes to create the links between\n * @param corpus  The corpus to create the nodes from\n */\nexport function createLinks(nodes: GraphNode[], corpus: Corpus): Observable{\n  // Return a new observable straight away that returns the progress percentage and eventually the data\n  return new Observable(subscriber => {\n    const links: GraphLink[] = [];\n    // Iterate over all the nodes\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nUserInterfaceComponent\n\nUserInterfaceComponent\n\nHomeModule -->\n\nUserInterfaceComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ComparisonComponent\n                        \n                        \n                            ComparisonEntryComponent\n                        \n                        \n                            DocumentComponent\n                        \n                        \n                            DocumentContentComponent\n                        \n                        \n                            GraphComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            UserInterfaceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HomeRoutes } from './home.routes';\nimport { GraphComponent } from './graph/graph.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { ComparisonComponent } from './sidenav/comparison/comparison.component';\nimport { ComparisonEntryComponent } from './sidenav/comparison/comparison-entry/comparison-entry.component';\nimport { SettingsComponent } from './user-interface/settings/settings.component';\nimport {AngularResizedEventModule} from 'angular-resize-event';\nimport { DocumentComponent } from './sidenav/document/document.component';\nimport { DocumentContentComponent } from './sidenav/document/document-content/document-content.component';\nimport {PipesModule} from '../pipes/pipes.module';\nimport { UserInterfaceComponent } from './user-interface/user-interface.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    GraphComponent,\n    SidenavComponent,\n    ComparisonComponent,\n    ComparisonEntryComponent,\n    SettingsComponent,\n    DocumentComponent,\n    DocumentContentComponent,\n    UserInterfaceComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularResizedEventModule,\n    PipesModule,\n    HomeRoutes\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutes.html":{"url":"modules/HomeRoutes.html","title":"module - HomeRoutes","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class HomeRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InitComponent.html":{"url":"components/InitComponent.html","title":"component - InitComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InitComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/init/init.component.ts\n\n\n    \n        Description\n    \n    \n        The initial welcoming component of the application, asking for the corpus to be inserted\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-init\n            \n\n            \n                styleUrls\n                ./init.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./init.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                insertedText\n                            \n                            \n                                insertingText\n                            \n                            \n                                jsonFile\n                            \n                            \n                                jsonTextarea\n                            \n                            \n                                validating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                            \n                                handleFileUpload\n                            \n                            \n                                handleTextUpload\n                            \n                            \n                                loadExample\n                            \n                            \n                                setQuery\n                            \n                            \n                                validateAndParse\n                            \n                            \n                                validateText\n                            \n                            \n                                validateUploadedFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, jsonValidateService: JsonValidateService, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The QueryService used to store the corpus once loaded\n\n                                                        \n                                                \n                                                \n                                                        jsonValidateService\n                                                  \n                                                        \n                                                                        JsonValidateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The validation service used to validate the inserted file/text\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The snackbar, showing error messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router responsible for the navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayError\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayError(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:94\n                \n            \n\n\n            \n                \n                    A function displaying an error message in the snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFileUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFileUpload(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:71\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating the inserted file and sending it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTextUpload\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTextUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:56\n                \n            \n\n\n            \n                \n                    The event handler function responsible for validating and setting the inserted text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadExample\n                        \n                        \n                    \n                \n            \n            \n                \nloadExample()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:172\n                \n            \n\n\n            \n                \n                    Loads the example document\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsetQuery(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:162\n                \n            \n\n\n            \n                \n                    Sets the processed corpus to QueryService\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus that will be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAndParse\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAndParse(text: string, resolve: any, reject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:138\n                \n            \n\n\n            \n                \n                    The validation and parsing wrapper of a given text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be validated\n\n                                    \n                                \n                                \n                                    resolve\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if successful\n\n                                    \n                                \n                                \n                                    reject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The function to be called if unsuccessful\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateText\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:112\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted text\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateUploadedFile\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateUploadedFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/init/init.component.ts:121\n                \n            \n\n\n            \n                \n                    A promise responsible for validating the inserted file\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertedText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:25\n                            \n                        \n\n                \n                    \n                        A value, holding the inserted text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertingText\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:21\n                            \n                        \n\n                \n                    \n                        A flag, saying whether has selected to enter JSON as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:29\n                            \n                        \n\n                \n                    \n                        The file inserted in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonTextarea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTextAreaElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('jsonTextarea')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:38\n                            \n                        \n\n                \n                    \n                        The reference to the textarea when inserting the corpus as text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/init/init.component.ts:33\n                            \n                        \n\n                \n                    \n                        A flag, specifying whether the validation service is currently validating the file/text\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {JsonValidateService} from '../services/json-validate.service';\nimport {QueryService} from '../services/query.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as exampleDocument from '../../assets/example.json';\nimport {Router} from '@angular/router';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The initial welcoming component of the application, asking for the corpus to be inserted\n */\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.component.html',\n  styleUrls: ['./init.component.scss']\n})\nexport class InitComponent {\n  /**\n   * A flag, saying whether has selected to enter JSON as text\n   */\n  insertingText = false;\n  /**\n   * A value, holding the inserted text\n   */\n  insertedText: string;\n  /**\n   * The file inserted in\n   */\n  jsonFile: File;\n  /**\n   * A flag, specifying whether the validation service is currently validating the file/text\n   */\n  validating: boolean;\n\n  /**\n   * The reference to the textarea when inserting the corpus as text\n   */\n  @ViewChild('jsonTextarea') jsonTextarea: HTMLTextAreaElement;\n\n  /**\n   * @param queryService          The QueryService used to store the corpus once loaded\n   * @param jsonValidateService   The validation service used to validate the inserted file/text\n   * @param snackBar              The snackbar, showing error messages\n   * @param router                The router responsible for the navigation\n   */\n  constructor(\n    private queryService: QueryService,\n    private jsonValidateService: JsonValidateService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * The event handler function responsible for validating and setting the inserted text\n   */\n  handleTextUpload(): void{\n    this.validating = true;\n    // Validate the text and then set outputted corpus to the query service\n    this.validateText().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * The event handler function responsible for validating the inserted file and sending it\n   * @param e The input change event\n   */\n  handleFileUpload(e: any): void{\n    this.validating = true;\n\n    // If there is one valid file\n    const files = e?.target?.files;\n    if (files?.length !== 1) {\n      return;\n    }\n    this.jsonFile = files[0];\n\n    // Validate the file and then set the outputted corpus to the query service\n    this.validateUploadedFile().then(res => {\n      this.validating = false;\n      this.setQuery(res);\n    }).catch(err => {\n      this.displayError('Couldn\\'t parse the file!');\n    });\n  }\n\n  /**\n   * A function displaying an error message in the snackbar\n   * @param msg The message to be displayed\n   */\n  displayError(msg: string): void{\n    // Remove the file\n    this.jsonFile = undefined;\n    this.validating = false;\n    // Show the snackbar message\n    this.snackBar.open(\n      msg,\n      '',\n      {\n        panelClass: ['red-snackbar'],\n        duration: 5000\n      }\n    );\n  }\n\n  /**\n   * A promise responsible for validating the inserted text\n   */\n  validateText(): Promise{\n    return new Promise((resolve, reject) => {\n      this.validateAndParse(this.insertedText, resolve, reject);\n    });\n  }\n\n  /**\n   * A promise responsible for validating the inserted file\n   */\n  validateUploadedFile(): Promise{\n   return new Promise((resolve, reject) => {\n      // Read the passed in file and validate it when ready\n      const fileReader = new FileReader();\n      fileReader.readAsBinaryString(this.jsonFile);\n      fileReader.onloadend = () => {\n        this.validateAndParse(fileReader.result as string, resolve, reject);\n      };\n    });\n  }\n\n  /**\n   * The validation and parsing wrapper of a given text\n   * @param text    The text to be validated\n   * @param resolve The function to be called if successful\n   * @param reject  The function to be called if unsuccessful\n   */\n  validateAndParse(text: string, resolve: any, reject: any): void{\n    // If any text was passed in\n    if (text) {\n      try{\n        // Parse the text to JSON\n        const parsed = JSON.parse(text);\n        // Validate the parsed JSON according to a scheme\n        if (this.jsonValidateService.validateCorpus(parsed)){\n          resolve(parsed);\n        } else {\n          reject();\n        }\n      } catch (e) {\n        reject(e);\n      }\n    } else {\n      reject();\n    }\n  }\n\n  /**\n   * Sets the processed corpus to QueryService\n   * @param corpus  The corpus that will be set\n   */\n  setQuery(corpus: Corpus): void{\n    // Set the corpus to the query service\n    this.queryService.setCorpus(corpus);\n    // Reroute to the map screen\n    this.router.navigate(['/map']);\n  }\n\n  /**\n   * Loads the example document\n   */\n  loadExample(): void{\n    this.setQuery((exampleDocument as any).default);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Document maps\n      visualization tool for semantic document representations\n      \n        This tool will allow you to explore the similarities of a data set of documents/texts,\n        showing you why documents are similar, what words they have in common and what's their respective weights\n      \n      \n        You can either import a valid JSON file containing the corpus data or enter the JSON by hand.\n        If you just wish to explore the tool, you can use the attached example corpus.\n      \n      \n        This tool is open-source and the source code is available on GitHub.\n        If you wish to read the documentation of this tool it is available here.\n      \n    \n    \n      file_uploadInsert corpus as file\n      wysiwygInsert corpus as JSON text\n    \n    \n      OR\n      description&nbsp;Use the example corpus\n    \n    \n      \n        arrow_backBack\n      \n      \n        Insert JSON\n        \n      \n      \n        file_uploadUpload\n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./init.component.scss\n                \n                .init-wrapper{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"../../../src/assets/background.jpg\");\n  background-position: center center;\n  background-size: cover;\n  width: 100%;\n  height: 100%;\n\n  .init-content{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 600px;\n    background: #fff;\n    border-radius: 5px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n    padding: 2em;\n    position: relative;\n    overflow: hidden;\n\n    .init-preface{\n      h1{\n        margin-bottom: 0;\n      }\n      padding-bottom: 1em;\n    }\n\n    .init-buttons{\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n      align-items: center;\n\n      button{\n        width: calc(50% - 0.5em);\n        height: 10em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        ::ng-deep .mat-button-wrapper {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n\n          >span{\n            display: block;\n          }\n        }\n\n        mat-icon{\n          $size: 96px;\n          font-size: $size;\n          height: $size;\n          width: $size;\n          line-height: $size;\n        }\n      }\n    }\n\n    .init-example{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n\n      .separator{\n        margin: 1em 0;\n      }\n    }\n\n    .loading{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      z-index: 1;\n      background-color: rgba(0, 0, 0, 0.25);\n      width: 100%;\n      height: 100%;\n\n      ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {\n        stroke: #fff;\n      }\n    }\n\n    .init-insert-text{\n      position: relative;\n      width: 100%;\n      min-height: 140px;\n\n      .navigate-back{\n        position: absolute;\n        top: -1em;\n        left: -1em;\n      }\n\n      .json-form{\n        width: 100%;\n        min-height: 140px;\n        margin-top: 24px;\n\n        textarea{\n          height: 393px;\n          max-height: calc(100vh - 12em);\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document maps      visualization tool for semantic document representations              This tool will allow you to explore the similarities of a data set of documents/texts,        showing you why documents are similar, what words they have in common and what\\'s their respective weights                    You can either import a valid JSON file containing the corpus data or enter the JSON by hand.        If you just wish to explore the tool, you can use the attached example corpus.                    This tool is open-source and the source code is available on GitHub.        If you wish to read the documentation of this tool it is available here.                    file_uploadInsert corpus as file      wysiwygInsert corpus as JSON text              OR      description Use the example corpus                      arrow_backBack                    Insert JSON                            file_uploadUpload                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InitComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitModule.html":{"url":"modules/InitModule.html","title":"module - InitModule","body":"\n                   \n\n\n\n\n    Modules\n    InitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\n\nInitComponent\n\nInitComponent\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InitComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InitRoutes\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InitComponent } from './init.component';\nimport {InitRoutes} from './init.routes';\nimport {MaterialModule} from '../material.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    InitComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    InitRoutes,\n    FormsModule,\n  ]\n})\nexport class InitModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitRoutes.html":{"url":"modules/InitRoutes.html","title":"module - InitRoutes","body":"\n                   \n\n\n\n\n    Modules\n    InitRoutes\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/init/init.routes.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {InitComponent} from './init.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InitComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class InitRoutes {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonValidateService.html":{"url":"injectables/JsonValidateService.html","title":"injectable - JsonValidateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonValidateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-validate.service.ts\n        \n\n            \n                Description\n            \n            \n                The validation service, validating a parsed JSON file\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCorpus(corpus: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/json-validate.service.ts:87\n                \n            \n\n\n            \n                \n                    The validation function of a corpus\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Ajv, {JSONSchemaType} from 'ajv';\nimport {Corpus} from '../utils/query.utils';\n\n/**\n * The schema used to validate the parsed JSON\n */\n// @ts-ignore\nconst searchQuerySchema: JSONSchemaType = {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n};\n\n/**\n * The validation service, validating a parsed JSON file\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonValidateService {\n  /**\n   * The validation function of a corpus\n   * @param corpus  The corpus to be validated\n   */\n  validateCorpus(corpus: {}): boolean {\n    // Create a validator instance\n    const ajv = new Ajv();\n    const validate = ajv.compile(searchQuerySchema);\n    try{\n      // See if the passed in object is a valid corpus\n      return validate(corpus);\n    } catch (e) {\n      return false;\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n            \n                Description\n            \n            \n                The service, responsible for passing the progress of long function to other components\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                isLoadingSource\n                            \n                            \n                                loadingProgress\n                            \n                            \n                                    Private\n                                loadingProgressSource\n                            \n                            \n                                loadingStage\n                            \n                            \n                                    Private\n                                loadingStageSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsLoading\n                            \n                            \n                                setLoadingProgress\n                            \n                            \n                                setLoadingStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:46\n                \n            \n\n\n            \n                \n                    A setter for the isLoading value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingProgress\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingProgress(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:54\n                \n            \n\n\n            \n                \n                    A setter for the loadingProgress value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoadingStage\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoadingStage(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:62\n                \n            \n\n\n            \n                \n                    A setter for the loadingStage value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.isLoadingSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:20\n                            \n                        \n\n                \n                    \n                        The observable generated from isLoadingSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isLoadingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:16\n                            \n                        \n\n                \n                    \n                        The subject which stores the value, if something is currently loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingProgressSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:30\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingProgressSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingProgressSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:26\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current progress percentage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingStageSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:40\n                            \n                        \n\n                \n                    \n                        The observable generated from loadingStageSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingStageSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading.service.ts:36\n                            \n                        \n\n                \n                    \n                        The subject which stores the value of the current loading stage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * The service, responsible for passing the progress of long function to other components\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  /**\n   * The subject which stores the value, if something is currently loading\n   * @private\n   */\n  private isLoadingSource = new BehaviorSubject(false);\n  /**\n   * The observable generated from isLoadingSource\n   */\n  isLoading = this.isLoadingSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current progress percentage\n   * @private\n   */\n  private loadingProgressSource = new BehaviorSubject(0);\n  /**\n   * The observable generated from loadingProgressSource\n   */\n  loadingProgress = this.loadingProgressSource.asObservable();\n\n  /**\n   * The subject which stores the value of the current loading stage\n   * @private\n   */\n  private loadingStageSource = new BehaviorSubject('');\n  /**\n   * The observable generated from loadingStageSource\n   */\n  loadingStage = this.loadingStageSource.asObservable();\n\n  /**\n   * A setter for the isLoading value\n   * @param value The value to be set\n   */\n  setIsLoading(value: boolean): void{\n    this.isLoadingSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingProgress value\n   * @param value The value to be set\n   */\n  setLoadingProgress(value: number): void{\n    this.loadingProgressSource.next(value);\n  }\n\n  /**\n   * A setter for the loadingStage value\n   * @param value The value to be set\n   */\n  setLoadingStage(value: string): void{\n    this.loadingStageSource.next(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipsModule} from '@angular/material/chips';\n\nconst modules = [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [...modules],\n  exports: [...modules]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitFirstPipe.html":{"url":"pipes/PairSplitFirstPipe.html","title":"pipe - PairSplitFirstPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitFirstPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the first one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        first\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:16\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairSplitSecondPipe.html":{"url":"pipes/PairSplitSecondPipe.html","title":"pipe - PairSplitSecondPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairSplitSecondPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits the string using a separator and only retrieves the second one\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        second\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:33\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PairUpPipe.html":{"url":"pipes/PairUpPipe.html","title":"pipe - PairUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PairUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that pairs up two values using a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pairUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(str1: string, str2: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:51\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    str1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The first string to be paired up\n\n                                    \n                                \n                                \n                                    str2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The second string to be paired up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator put between the two strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            PairSplitFirstPipe\n                        \n                        \n                            PairSplitSecondPipe\n                        \n                        \n                            PairUpPipe\n                        \n                        \n                            SplitUpPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EscapeHtmlPipe } from './escape-html.pipe';\nimport {PairSplitFirstPipe, PairSplitSecondPipe, PairUpPipe, SplitUpPipe} from './pair-split.pipe';\n\n\n@NgModule({\n  declarations: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  exports: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  providers: [\n    EscapeHtmlPipe,\n    PairSplitFirstPipe,\n    PairSplitSecondPipe,\n    PairUpPipe,\n    SplitUpPipe\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/query.service.ts\n        \n\n            \n                Description\n            \n            \n                The query service, responsible for querying on and operating with the corpus while also the corpus itself\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                corpusSource\n                            \n                            \n                                currentCorpus\n                            \n                            \n                                    Readonly\n                                worker\n                            \n                            \n                                    Private\n                                workerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDocumentText\n                            \n                            \n                                getNormalizedWordImportancePairs\n                            \n                            \n                                getSimilarity\n                            \n                            \n                                getSimilarityWord\n                            \n                            \n                                getSoftCosineMeasure\n                            \n                            \n                                getWord\n                            \n                            \n                                getWordId\n                            \n                            \n                                initGraphData\n                            \n                            \n                                innerProduct\n                            \n                            \n                                innerProductSingle\n                            \n                            \n                                setCorpus\n                            \n                            \n                                softCosineMeasureNorm\n                            \n                            \n                                    Private\n                                usedCorpus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                            A constructor, initializing the worker\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The loading service, handling the progress reports\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocumentText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocumentText(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:155\n                \n            \n\n\n            \n                \n                    Returns the document text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNormalizedWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:165\n                \n            \n\n\n            \n                \n                    Returns the normalized pairs of word importances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarity\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarity(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:97\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first id to compare\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second id to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarityWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarityWord(word1: string, word2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:107\n                \n            \n\n\n            \n                \n                    Returns the cosine similarity of two words\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first word to compare\n\n                                    \n                                \n                                \n                                    word2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second word to compare\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSoftCosineMeasure\n                        \n                        \n                    \n                \n            \n            \n                \ngetSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:146\n                \n            \n\n\n            \n                \n                    Returns the soft cosine measure of two texts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetWord(id: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:87\n                \n            \n\n\n            \n                \n                    Returns the word from dictionary of a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to retrieve the word of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordId\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordId(word: string, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:78\n                \n            \n\n\n            \n                \n                    Returns the ID of a given word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word to retrieve the id of\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initGraphData\n                        \n                        \n                    \n                \n            \n            \n                \ninitGraphData(corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:173\n                \n            \n\n\n            \n                \n                    Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProduct\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProduct(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:117\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarities of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProductSingle\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProductSingle(id, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:126\n                \n            \n\n\n            \n                \n                    Calculates the inner product of the cosine similarity of one word id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCorpus\n                        \n                        \n                    \n                \n            \n            \n                \nsetCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:55\n                \n            \n\n\n            \n                \n                    A setter for the corpus value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softCosineMeasureNorm\n                        \n                        \n                    \n                \n            \n            \n                \nsoftCosineMeasureNorm(id1, id2, corpus?: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:136\n                \n            \n\n\n            \n                \n                    Returns the soft cosine normalization of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional corpus, defaults to the global one\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            usedCorpus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    usedCorpus(corpus: Corpus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/query.service.ts:64\n                \n            \n\n\n            \n                \n                    A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n                                    \n                                                Corpus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Corpus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            corpusSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:19\n                            \n                        \n\n                \n                    \n                        The subject storing the corpus itself\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCorpus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.corpusSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:23\n                            \n                        \n\n                \n                    \n                        The observable generated from corpusSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            worker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Worker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:28\n                            \n                        \n\n                \n                    \n                        The worker, eventually responsible for generating the initial GraphData\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workerData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/query.service.ts:34\n                            \n                        \n\n                \n                    \n                        The stored data from passed from the worker\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {LoadingService} from './loading.service';\nimport * as queryUtils from '../utils/query.utils';\nimport {GraphData, Corpus} from '../utils/query.utils';\nimport {filter, map, tap} from 'rxjs/operators';\n\n/**\n * The query service, responsible for querying on and operating with the corpus while also the corpus itself\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n  /**\n   * The subject storing the corpus itself\n   * @private\n   */\n  private corpusSource = new BehaviorSubject(undefined);\n  /**\n   * The observable generated from corpusSource\n   */\n  currentCorpus = this.corpusSource.asObservable();\n\n  /**\n   * The worker, eventually responsible for generating the initial GraphData\n   */\n  readonly worker: Worker;\n\n  /**\n   * The stored data from passed from the worker\n   * @private\n   */\n  private workerData = new Subject();\n\n  /**\n   * A constructor, initializing the worker\n   * @param loadingService  The loading service, handling the progress reports\n   */\n  constructor(private loadingService: LoadingService) {\n    // Create the web worker\n    if (typeof Worker !== 'undefined'){\n      this.worker = new Worker('../workers/graph-data.worker', { type: 'module' });\n      // If the web worker receives any data, store it in this service\n      this.worker.onmessage = ({ data }) => {\n        this.workerData.next(data);\n      };\n    }\n  }\n\n  /**\n   * A setter for the corpus value\n   * @param corpus  The corpus to be set\n   */\n  setCorpus(corpus: Corpus): void{\n    this.corpusSource.next(corpus);\n  }\n\n  /**\n   * A helper function, checking if the passed in corpus exists, otherwise defaulting to the global one\n   * @param corpus  The corpus to be checked\n   * @private\n   */\n  private usedCorpus(corpus: Corpus): Corpus{\n    // If there is no passed in corpus or a default one set return undefined\n    if (!corpus && !this.corpusSource.getValue()){\n      return undefined;\n    }\n    // Otherwise if there is a passed in corpus, use that one, otherwise use the default one\n    return corpus ? corpus : this.corpusSource.getValue();\n  }\n\n  /**\n   * Returns the ID of a given word\n   * @param word    The word to retrieve the id of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWordId(word: string, corpus?: Corpus): string {\n    return queryUtils.getWordId(word, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the word from dictionary of a given id\n   * @param id      The id to retrieve the word of\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getWord(id: string, corpus?: Corpus): string {\n   return queryUtils.getWord(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two word ids\n   * @param id1     The first id to compare\n   * @param id2     The second id to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarity(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSimilarity(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the cosine similarity of two words\n   * @param word1   The first word to compare\n   * @param word2   The second word to compare\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSimilarityWord(word1: string, word2: string, corpus?: Corpus): number{\n    return queryUtils.getSimilarityWord(word1, word2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarities of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProduct(id1, id2, corpus?: Corpus): number{\n    return queryUtils.innerProduct(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Calculates the inner product of the cosine similarity of one word id\n   * @param id      The text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  innerProductSingle(id, corpus?: Corpus): number {\n    return queryUtils.innerProductSingle(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine normalization of two word ids\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  softCosineMeasureNorm(id1, id2, corpus?: Corpus): number{\n    return queryUtils.softCosineMeasureNorm(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the soft cosine measure of two texts\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getSoftCosineMeasure(id1: string, id2: string, corpus?: Corpus): number {\n    return queryUtils.getSoftCosineMeasure(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the document text\n   * @param id      The first text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getDocumentText(id: string, corpus?: Corpus): string{\n    return queryUtils.getDocumentText(id, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns the normalized pairs of word importances\n   * @param id1     The first text id\n   * @param id2     The second text id\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  getNormalizedWordImportancePairs(id1: string, id2: string, corpus?: Corpus): {[key: string]: number}{\n    return queryUtils.getNormalizedWordImportancePairs(id1, id2, this.usedCorpus(corpus));\n  }\n\n  /**\n   * Returns an observable kickstarting the WebWorker to generate GraphData upon subscription\n   * @param corpus  Optional corpus, defaults to the global one\n   */\n  initGraphData(corpus?: Corpus): Observable{\n    // Tell the loading service that we started loading\n    this.loadingService.setIsLoading(true);\n    // Create an observable that observes the worker data, firing every time theres a change\n    const observable = this.workerData.asObservable()\n      .pipe(\n        // Look at the data the worker passed in and give the loading service the loading stage and progress\n        tap(progress => {\n          this.loadingService.setLoadingStage(progress.stage);\n          this.loadingService.setLoadingProgress(progress.value);\n        }),\n        // If the web worker data has the final processed data\n        filter(data => data.data),\n        // We finally tell the loading service we're done loading and return the output data\n        map(data => {\n          this.loadingService.setIsLoading(false);\n          return data.data;\n        })\n      );\n    // Tell the web worker to start processing\n    this.worker.postMessage({query: this.usedCorpus(corpus)});\n    return observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedDocument.html":{"url":"interfaces/SelectedDocument.html","title":"interface - SelectedDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/sidenav/sidenav.component.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a displayed document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        subtitle\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from './comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches = new Set();\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    // Notify the parent\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    // Notify the parent\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    // Store the keys of the word map, containing the exact matches\n    this.highlightedExactMatches = new Set(wordMap.keys());\n\n    // Merge all the sets, contained in the values of the word map, which contain the soft matches\n    const softMatches = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), [])\n      .filter(a => !this.highlightedExactMatches.has(a));\n\n    // Store the soft matches as a set\n    this.highlightedSoftMatches = new Set(softMatches);\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = new Set();\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/user-interface/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        The component containing the user interface for the settings menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSetting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                settingsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         AppSettings\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/settings/settings.component.ts:26\n                            \n                        \n                \n                    \n                        The current app settings\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        settingsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/settings/settings.component.ts:30\n                            \n                        \n                \n                    \n                        An event, that emits when settings are changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSetting\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSetting(setting: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/user-interface/settings/settings.component.ts:37\n                \n            \n\n\n            \n                \n                    Changes the specified setting, using a string key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string key, corresponding to a specific key in AppSettings\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value being set to the setting key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * The interface containing the app settings\n */\nexport interface AppSettings{\n  showLabels: boolean;\n  showDeviations: boolean;\n  distanceModifier: number;\n  clumpingModifier: number;\n}\n\n/**\n * The component containing the user interface for the settings menu\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * An event, that emits when settings are changed\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Changes the specified setting, using a string key\n   * @param setting   The string key, corresponding to a specific key in AppSettings\n   * @param value     The value being set to the setting key\n   */\n  changeSetting(setting: string, value: any): void{\n    this.settings[setting] = value;\n    this.settingsChange.emit(this.settings);\n  }\n}\n\n    \n\n    \n        \n  Show labels\n  Draw deviations\n  \n    Distance modifier:{{settings.distanceModifier}}\n    \n    \n  \n\n  \n    Clumping modifier:{{settings.clumpingModifier}}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                .settings-menu-wrapper{\n  display: flex;\n  flex-direction: column;\n  >*{\n    margin: 0.5em 0;\n\n    &:first-child{\n      margin-top: 0;\n    }\n    &:last-child{\n      margin-bottom: 0;\n    }\n  }\n}\n\nmat-label{\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Show labels  Draw deviations      Distance modifier:{{settings.distanceModifier}}                Clumping modifier:{{settings.clumpingModifier}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/sidenav/sidenav.component.ts\n\n\n    \n        Description\n    \n    \n        The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                highlightedExactMatches\n                            \n                            \n                                highlightedSoftMatches\n                            \n                            \n                                highlightedWordMap\n                            \n                            \n                                hoveredWord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearHighlightedWords\n                            \n                            \n                                clickedCompare\n                            \n                            \n                                closeSidenav\n                            \n                            \n                                handleWordHovered\n                            \n                            \n                                handleWordsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparingWindowOpen\n                            \n                            \n                                selectedDocuments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareClick\n                            \n                            \n                                sidebarClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparingWindowOpen\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:30\n                            \n                        \n                \n                    \n                        A value, specifying whether the comparing window should be open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDocuments\n                    \n                \n                \n                    \n                        Type :         SelectedDocument[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:26\n                            \n                        \n                \n                    \n                        The currently selected documents\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        compareClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:39\n                            \n                        \n                \n                    \n                        An event, that emits when the user clicks on the comparison button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sidebarClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:35\n                            \n                        \n                \n                    \n                        An event, that emits when the sidebar closes\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearHighlightedWords\n                        \n                        \n                    \n                \n            \n            \n                \nclearHighlightedWords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:99\n                \n            \n\n\n            \n                \n                    Clears the highlighted words\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickedCompare\n                        \n                        \n                    \n                \n            \n            \n                \nclickedCompare(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:72\n                \n            \n\n\n            \n                \n                    An event handler, that handles when user clicks on the comparison button\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event of clicking on the comparison button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSidenav(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:62\n                \n            \n\n\n            \n                \n                    An event handler, that handles when the sidenav is closed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event that closed the sidenav\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordHovered\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordHovered(word: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:109\n                \n            \n\n\n            \n                \n                    An event handler, handling the change of the hovered on word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new hovered word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleWordsChanged\n                        \n                        \n                    \n                \n            \n            \n                \nhandleWordsChanged(wordMap: WordMap)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/sidenav/sidenav.component.ts:82\n                \n            \n\n\n            \n                \n                    An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordMap\n                                    \n                                                WordMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The WordMap containing the relationships of matches\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedExactMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:44\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted exact matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedSoftMatches\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:48\n                            \n                        \n\n                \n                    \n                        A set containing the currently highlighted soft matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highlightedWordMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WordMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:52\n                            \n                        \n\n                \n                    \n                        A map, that contains the relationships of matches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/sidenav/sidenav.component.ts:56\n                            \n                        \n\n                \n                    \n                        The currently hovered on word within the comparison screen\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {WordMap} from './comparison/comparison.component';\n\n/**\n * The interface of a displayed document\n */\nexport interface SelectedDocument{\n  id: string;\n  title: string;\n  subtitle: string;\n  content: string;\n}\n\n/**\n * The component, contained within the Angular Material sidenav, displaying the documents and comparison components\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  /**\n   * The currently selected documents\n   */\n  @Input() selectedDocuments: SelectedDocument[] = [];\n  /**\n   * A value, specifying whether the comparing window should be open\n   */\n  @Input() comparingWindowOpen = false;\n\n  /**\n   * An event, that emits when the sidebar closes\n   */\n  @Output() sidebarClose = new EventEmitter();\n  /**\n   * An event, that emits when the user clicks on the comparison button\n   */\n  @Output() compareClick = new EventEmitter();\n\n  /**\n   * A set containing the currently highlighted exact matches\n   */\n  highlightedExactMatches = new Set();\n  /**\n   * A set containing the currently highlighted soft matches\n   */\n  highlightedSoftMatches = new Set();\n  /**\n   * A map, that contains the relationships of matches\n   */\n  highlightedWordMap: WordMap = new Map>();\n  /**\n   * The currently hovered on word within the comparison screen\n   */\n  hoveredWord: string;\n\n  /**\n   * An event handler, that handles when the sidenav is closed\n   * @param e The mouse event that closed the sidenav\n   */\n  closeSidenav(e: MouseEvent): void {\n    // Notify the parent\n    this.sidebarClose.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that handles when user clicks on the comparison button\n   * @param e The mouse event of clicking on the comparison button\n   */\n  clickedCompare(e: MouseEvent): void {\n    // Notify the parent\n    this.compareClick.emit(e);\n    this.clearHighlightedWords();\n  }\n\n  /**\n   * An event handler, that updates the highlighted matches when the user has changed what words should be highlighted\n   * @param wordMap The WordMap containing the relationships of matches\n   */\n  handleWordsChanged(wordMap: WordMap): void{\n    // Store the keys of the word map, containing the exact matches\n    this.highlightedExactMatches = new Set(wordMap.keys());\n\n    // Merge all the sets, contained in the values of the word map, which contain the soft matches\n    const softMatches = Array.from(wordMap.values())\n      .reduce((a, c) => a.concat([...c]), [])\n      .filter(a => !this.highlightedExactMatches.has(a));\n\n    // Store the soft matches as a set\n    this.highlightedSoftMatches = new Set(softMatches);\n    this.highlightedWordMap = wordMap;\n  }\n\n  /**\n   * Clears the highlighted words\n   */\n  clearHighlightedWords(): void{\n    this.highlightedExactMatches = new Set();\n    this.highlightedSoftMatches = new Set();\n    this.highlightedWordMap = new Map>();\n  }\n\n  /**\n   * An event handler, handling the change of the hovered on word\n   * @param word  The new hovered word\n   */\n  handleWordHovered(word: string): void{\n    this.hoveredWord = word;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      Comparekeyboard_arrow_right\n    \n  \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                ::ng-deep{\n  .mat-drawer-inner-container{\n    overflow-x: hidden;\n  }\n}\n\n.sidenav-wrapper{\n  width: 400px;\n  height: 100%;\n  padding: 1em;\n  display: grid;\n  position: relative;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  grid-auto-rows: minmax(200px, 1fr);\n  grid-gap: 1em;\n  flex-shrink: 0;\n\n  &.comparing{\n    width: 100%;\n    height: 50%;\n    grid-template-columns: 1fr 1fr;\n\n    .sidenav-nav{\n      grid-column: 1/3;\n    }\n  }\n}\n\napp-document {\n  padding-bottom: 1em;\n  ::ng-deep {\n    .mat-card{\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    }\n    .mat-card-content {\n      overflow: auto;\n      max-height: 100%;\n      padding-right: 0.5em;\n    }\n  }\n}\n\n.sidenav-nav{\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.sidenav-comparison{\n  width: 100%;\n  height: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close              Comparekeyboard_arrow_right          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SplitUpPipe.html":{"url":"pipes/SplitUpPipe.html","title":"pipe - SplitUpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SplitUpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pair-split.pipe.ts\n        \n\n            \n                Description\n            \n            \n                A pipe, that splits up two values at a separator\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        splitUp\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, separator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/pair-split.pipe.ts:68\n                \n            \n\n\n            \n                \n                    The transform function of the pipe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The string to be split up\n\n                                    \n                                \n                                \n                                    separator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pairSeparator\n                                    \n\n                                    \n                                        The separator at which the split will happen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {pairSeparator} from '../utils/various.utils';\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the first one\n */\n@Pipe({\n  name: 'first'\n})\nexport class PairSplitFirstPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[0];\n  }\n}\n\n/**\n * A pipe, that splits the string using a separator and only retrieves the second one\n */\n@Pipe({\n  name: 'second'\n})\nexport class PairSplitSecondPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split\n   * @param separator The separator\n   */\n  transform(value: string, separator = pairSeparator): string {\n    return value?.includes(separator) && value?.split(separator)[1];\n  }\n}\n\n/**\n * A pipe, that pairs up two values using a separator\n */\n@Pipe({\n  name: 'pairUp'\n})\nexport class PairUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param str1      The first string to be paired up\n   * @param str2      The second string to be paired up\n   * @param separator The separator put between the two strings\n   */\n  transform(str1: string, str2: string, separator = pairSeparator): string {\n    return `${str1}${separator}${str2}`;\n  }\n}\n\n/**\n * A pipe, that splits up two values at a separator\n */\n@Pipe({\n  name: 'splitUp'\n})\nexport class SplitUpPipe implements PipeTransform {\n  /**\n   * The transform function of the pipe\n   * @param value     The string to be split up\n   * @param separator The separator at which the split will happen\n   */\n  transform(value: string, separator = pairSeparator): string[] {\n    return value?.includes(separator) && value?.split(separator);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInterfaceComponent.html":{"url":"components/UserInterfaceComponent.html","title":"component - UserInterfaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInterfaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/user-interface/user-interface.component.ts\n\n\n    \n        Description\n    \n    \n        The component responsible for showing the user interface\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-interface\n            \n\n            \n                styleUrls\n                ./user-interface.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-interface.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                settingsOpen\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentZoom\n                            \n                            \n                                defaultStepZoom\n                            \n                            \n                                errorIndicatorOffset\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                selectedNodes\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                centerCamera\n                            \n                            \n                                changeCameraZoom\n                            \n                            \n                                decreaseCamera\n                            \n                            \n                                increaseCamera\n                            \n                            \n                                settingsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:41\n                            \n                        \n                \n                    \n                        The current value of the zoom in/out level\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultStepZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:37\n                            \n                        \n                \n                    \n                        The default camera zoom in/out step on button press\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorIndicatorOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:25\n                            \n                        \n                \n                    \n                        The offset in pixels of the deviance indicator\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:33\n                            \n                        \n                \n                    \n                        Specifies the closest the camera can zoom in\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:29\n                            \n                        \n                \n                    \n                        Specifies the furthest the camera can zoom out\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedNodes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:21\n                            \n                        \n                \n                    \n                        The ids of the selected nodes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         AppSettings\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:17\n                            \n                        \n                \n                    \n                        The current app settings\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        centerCamera\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:46\n                            \n                        \n                \n                    \n                        An event, emitting when the user requests to center the camera\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        changeCameraZoom\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:58\n                            \n                        \n                \n                    \n                        An event, emitting when the user uses the slider to change the camera zoom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        decreaseCamera\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:54\n                            \n                        \n                \n                    \n                        An event, emitting when the user requests to zoom out the camera\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseCamera\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:50\n                            \n                        \n                \n                    \n                        An event, emitting when the user requests to zoom in the camera\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settingsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:62\n                            \n                        \n                \n                    \n                        An event, emitting when the settings change\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settingsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/user-interface/user-interface.component.ts:67\n                            \n                        \n\n                \n                    \n                        Specifies whether the settings menu is opened\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {AppSettings} from './settings/settings.component';\n\n/**\n * The component responsible for showing the user interface\n */\n@Component({\n  selector: 'app-user-interface',\n  templateUrl: './user-interface.component.html',\n  styleUrls: ['./user-interface.component.scss']\n})\nexport class UserInterfaceComponent {\n\n  /**\n   * The current app settings\n   */\n  @Input() settings: AppSettings;\n  /**\n   * The ids of the selected nodes\n   */\n  @Input() selectedNodes: string[];\n  /**\n   * The offset in pixels of the deviance indicator\n   */\n  @Input() errorIndicatorOffset = 0;\n  /**\n   * Specifies the furthest the camera can zoom out\n   */\n  @Input() minZoom: number;\n  /**\n   * Specifies the closest the camera can zoom in\n   */\n  @Input() maxZoom: number;\n  /**\n   * The default camera zoom in/out step on button press\n   */\n  @Input() defaultStepZoom: number;\n  /**\n   * The current value of the zoom in/out level\n   */\n  @Input() currentZoom: number;\n\n  /**\n   * An event, emitting when the user requests to center the camera\n   */\n  @Output() centerCamera = new EventEmitter();\n  /**\n   * An event, emitting when the user requests to zoom in the camera\n   */\n  @Output() increaseCamera = new EventEmitter();\n  /**\n   * An event, emitting when the user requests to zoom out the camera\n   */\n  @Output() decreaseCamera = new EventEmitter();\n  /**\n   * An event, emitting when the user uses the slider to change the camera zoom\n   */\n  @Output() changeCameraZoom = new EventEmitter();\n  /**\n   * An event, emitting when the settings change\n   */\n  @Output() settingsChange = new EventEmitter();\n\n  /**\n   * Specifies whether the settings menu is opened\n   */\n  settingsOpen: boolean;\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{settingsOpen ? 'close' : 'settings'}}\n      \n      \n    \n  \n  \n    \n      \n      Too far\n      Perfect\n      Too close\n      \n    \n  \n  \n    \n      \n        adjust\n      \n    \n    \n      \n        add_circle_outline\n      \n      \n      \n        remove_circle_outline\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-interface.component.scss\n                \n                .ui-wrapper{\n  position: fixed;\n  padding: 2em;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  z-index: 1;\n\n  .map-controls{\n    display: flex;\n    flex-direction: column;\n    justify-self: flex-end;\n    margin-top: auto;\n\n    .center-control, .zoom-controls{\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: rgba(0, 0, 0, 0.1) 2px 2px 8px;\n      overflow: hidden;\n    }\n\n    .center-control{\n      margin-bottom: 1em;\n    }\n\n    .zoom-controls{\n      display: flex;\n      flex-direction: column;\n\n      mat-slider{\n        width: 40px;\n        padding: 0;\n        height: 128px;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 0;\n          bottom: 0;\n          left: 19px;\n        }\n      }\n    }\n  }\n\n  .settings-wrapper{\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1em;\n\n    .settings{\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: rgba(0, 0, 0, 0.1) 2px 2px 8px;\n      overflow: hidden;\n      transition: 0.1s;\n      display: flex;\n      flex-direction: column;\n\n      &.opened {\n        min-width: 170px;\n      }\n\n      app-settings{\n        padding: 0.25em 1em 1em;\n      }\n    }\n  }\n\n  .error-legend{\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    >.inner {\n      position: relative;\n      background: #fff;\n      border-radius: 6px;\n      box-shadow: rgba(0, 0, 0, 0.1) 2px 2px 8px;\n      overflow: hidden;\n      width: 120px;\n      padding: 1em 1em 1em 2em;\n      height: calc(2em + 128px);\n\n      .bar {\n        height: 128px;\n        width: 8px;\n        background: linear-gradient(to top, rgb(176, 55, 55) 0%, rgb(55, 176, 59) 50%, rgb(69, 55, 176) 100%);\n      }\n\n      .up {\n        position: absolute;\n        top: 1em;\n        height: 1em;\n        left: calc(8px + 2.5em);\n      }\n      .middle {\n        position: absolute;\n        top: calc(50% - 0.5em);\n        height: 1em;\n        left: calc(8px + 2.5em);\n\n        &::before{\n          display: block;\n          content: \"\";\n          height: 1px;\n          width: 12px;\n          background-color: rgba(0, 0, 0, 0.95);\n          position: absolute;\n          top: 50%;\n          left: calc(-8px - 0.5em - 2px);\n        }\n      }\n      .bottom {\n        position: absolute;\n        bottom: 1em;\n        height: 1em;\n        left: calc(8px + 2.5em);\n      }\n\n      .indicator{\n        position: absolute;\n\n        top: 0;\n        left: calc(1em + 5px);\n\n        width: 0;\n        height: 0;\n        border-top: 7px solid transparent;\n        border-bottom: 7px solid transparent;\n        border-left: 7px solid black;\n        margin-top: calc(1em - 7px);\n      }\n    }\n  }\n}\n\n@media all and (max-height: 540px){\n  .ui-wrapper{\n    flex-wrap: wrap;\n    .map-controls{\n      order: 2;\n    }\n    .error-legend{\n      order: 3;\n      margin-bottom: 1em;\n      margin-left: 1em;\n    }\n  }\n}\n\n@media all and (max-height: 372px) {\n  .ui-wrapper{\n    .map-controls .zoom-controls mat-slider{\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{settingsOpen ? \\'close\\' : \\'settings\\'}}                                    Too far      Perfect      Too close                                adjust                            add_circle_outline                          remove_circle_outline            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ComparisonComponent', 'selector': 'app-comparison'},{'name': 'ComparisonEntryComponent', 'selector': 'app-comparison-entry'},{'name': 'DocumentComponent', 'selector': 'app-document'},{'name': 'DocumentContentComponent', 'selector': 'app-document-content'},{'name': 'GraphComponent', 'selector': 'app-graph'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InitComponent', 'selector': 'app-init'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'UserInterfaceComponent', 'selector': 'app-user-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInterfaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/guards/document-loaded.guard.ts\n            \n            guard\n            DocumentLoadedGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/home/graph/graph.component.ts\n            \n            component\n            GraphComponent\n            \n                90 %\n                (39/43)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                94 %\n                (37/39)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/comparison/comparison-entry/comparison-entry.component.ts\n            \n            component\n            ComparisonEntryComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/comparison/comparison.component.ts\n            \n            component\n            ComparisonComponent\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document-content/document-content.component.ts\n            \n            component\n            DocumentContentComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/document/document.component.ts\n            \n            component\n            DocumentComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/home/sidenav/sidenav.component.ts\n            \n            interface\n            SelectedDocument\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/home/user-interface/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/home/user-interface/settings/settings.component.ts\n            \n            interface\n            AppSettings\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/home/user-interface/user-interface.component.ts\n            \n            component\n            UserInterfaceComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/init/init.component.ts\n            \n            component\n            InitComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/material.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/escape-html.pipe.ts\n            \n            pipe\n            EscapeHtmlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitFirstPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairSplitSecondPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            PairUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/pair-split.pipe.ts\n            \n            pipe\n            SplitUpPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            injectable\n            JsonValidateService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/json-validate.service.ts\n            \n            variable\n            searchQuerySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/query.service.ts\n            \n            injectable\n            QueryService\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            class\n            Color\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            class\n            DefaultColors\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            log2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            normalizeDeviation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/graph.utils.ts\n            \n            function\n            pow2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            Corpus\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphLink\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            interface\n            GraphNode\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            calculateCosineDistance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createLinks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            createNodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getDocumentText\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantExactMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getMostImportantSoftMatches\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getNormalizedWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSimilarityWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getSoftCosineMeasure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWord\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            getWordImportancePairs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProduct\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            innerProductSingle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/query.utils.ts\n            \n            function\n            softCosineMeasureNorm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            function\n            getNodeDocumentId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            function\n            valueChanged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/various.utils.ts\n            \n            variable\n            pairSeparator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.12\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ^11.2.12\n        \n            @angular/compiler : ^11.2.12\n        \n            @angular/core : ^11.2.12\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.2.12\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ^11.2.12\n        \n            @angular/platform-browser-dynamic : ^11.2.12\n        \n            @angular/router : ^11.2.12\n        \n            ajv : ^8.2.0\n        \n            angular-resize-event : ^2.1.0\n        \n            d3 : ^6.7.0\n        \n            d3-force : ^2.1.1\n        \n            escape-string-regexp : ^5.0.0\n        \n            hammerjs : ^2.0.8\n        \n            material-icons : ^0.5.5\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EntryHoverEvent   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/sidenav/comparison/comparison.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EntryHoverEvent\n                    \n                \n                    \n                        \n                            An enum, specifying the hover event type\n\n                        \n                    \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            calculateCosineDistance   (src/.../query.utils.ts)\n                        \n                        \n                            createLinks   (src/.../query.utils.ts)\n                        \n                        \n                            createNodes   (src/.../query.utils.ts)\n                        \n                        \n                            getDocumentText   (src/.../query.utils.ts)\n                        \n                        \n                            getMostImportantExactMatches   (src/.../query.utils.ts)\n                        \n                        \n                            getMostImportantSoftMatches   (src/.../query.utils.ts)\n                        \n                        \n                            getNodeDocumentId   (src/.../various.utils.ts)\n                        \n                        \n                            getNormalizedWordImportancePairs   (src/.../query.utils.ts)\n                        \n                        \n                            getSimilarity   (src/.../query.utils.ts)\n                        \n                        \n                            getSimilarityWord   (src/.../query.utils.ts)\n                        \n                        \n                            getSoftCosineMeasure   (src/.../query.utils.ts)\n                        \n                        \n                            getWord   (src/.../query.utils.ts)\n                        \n                        \n                            getWordId   (src/.../query.utils.ts)\n                        \n                        \n                            getWordImportancePairs   (src/.../query.utils.ts)\n                        \n                        \n                            innerProduct   (src/.../query.utils.ts)\n                        \n                        \n                            innerProductSingle   (src/.../query.utils.ts)\n                        \n                        \n                            log2   (src/.../graph.utils.ts)\n                        \n                        \n                            normalizeDeviation   (src/.../graph.utils.ts)\n                        \n                        \n                            pow2   (src/.../graph.utils.ts)\n                        \n                        \n                            softCosineMeasureNorm   (src/.../query.utils.ts)\n                        \n                        \n                            valueChanged   (src/.../various.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/query.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateCosineDistance\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateCosineDistance(weight, multiplier, clumping)\n                \n            \n\n\n\n\n            \n                \n                    Cosine distance calculation formula with modifiers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weight\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The cosine similarity of two documents\n\n                                    \n                                \n                                \n                                    multiplier\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The linear multiplier of the formula\n\n                                    \n                                \n                                \n                                    clumping\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The exponent of the formula\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLinks\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLinks(nodes, corpus)\n                \n            \n\n\n\n\n            \n                \n                    An observable, responsible for creating the GraphLinks and calculating the cosine similarity of it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The GraphNodes to create the links between\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to create the nodes from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNodes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNodes(corpus)\n                \n            \n\n\n\n\n            \n                \n                    An observable, responsible for creating the GraphNode elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to create the nodes from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDocumentText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDocumentText(id, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the document text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMostImportantExactMatches\n                        \n                        \n                    \n                \n            \n            \n                \ngetMostImportantExactMatches(wordImportancePairs: any)\n                \n            \n\n\n\n\n            \n                \n                    Filters through the word importance pairs and returns only exact matches\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordImportancePairs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The pairs to filter through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMostImportantSoftMatches\n                        \n                        \n                    \n                \n            \n            \n                \ngetMostImportantSoftMatches(wordImportancePairs: any)\n                \n            \n\n\n\n\n            \n                \n                    Filters through the word importance pairs and returns only soft matches\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wordImportancePairs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The pairs to filter through\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNormalizedWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetNormalizedWordImportancePairs(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the normalized word importance pairs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarity\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarity(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the cosine similarity of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first id to compare\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second id to compare\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSimilarityWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetSimilarityWord(word1, word2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the cosine similarity of two words\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first word to compare\n\n                                    \n                                \n                                \n                                    word2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second word to compare\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSoftCosineMeasure\n                        \n                        \n                    \n                \n            \n            \n                \ngetSoftCosineMeasure(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the soft cosine measure of two texts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWord\n                        \n                        \n                    \n                \n            \n            \n                \ngetWord(id, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the word from dictionary of a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to retrieve the word of\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordId\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordId(word, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the ID of a given word\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    word\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The word to retrieve the id of\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWordImportancePairs\n                        \n                        \n                    \n                \n            \n            \n                \ngetWordImportancePairs(bowEntries1, bowEntries2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the non-normalized word importance pairs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bowEntries1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key-value pairs of the bag of word of the first document\n\n                                    \n                                \n                                \n                                    bowEntries2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key-value pairs of the bag of word of the second document\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProduct\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProduct(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Calculates the inner product of the cosine similarities of two document ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            innerProductSingle\n                        \n                        \n                    \n                \n            \n            \n                \ninnerProductSingle(id, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Calculates the inner product of the cosine similarity of one document id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softCosineMeasureNorm\n                        \n                        \n                    \n                \n            \n            \n                \nsoftCosineMeasureNorm(id1, id2, corpus)\n                \n            \n\n\n\n\n            \n                \n                    Returns the soft cosine normalization of two word ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first text id\n\n                                    \n                                \n                                \n                                    id2\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The second text id\n\n                                    \n                                \n                                \n                                    corpus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The corpus to perform the query on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utils/various.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getNodeDocumentId\n                        \n                        \n                    \n                \n            \n            \n                \ngetNodeDocumentId(nodeId)\n                \n            \n\n\n\n\n            \n                \n                    A quick regex way of retrieving the document ID from the node ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodeId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node ID we'd like to get the document ID from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChanged(changesValue: any)\n                \n            \n\n\n\n\n            \n                \n                    A helper function that determines if the value has changed from a SimpleChange object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changesValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to check for changes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utils/graph.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            log2\n                        \n                        \n                    \n                \n            \n            \n                \nlog2(n)\n                \n            \n\n\n\n\n            \n                \n                    Returns the base 2 logarithm of a number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number to return the logarithm of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            normalizeDeviation\n                        \n                        \n                    \n                \n            \n            \n                \nnormalizeDeviation(value, stiffness)\n                \n            \n\n\n\n\n            \n                \n                    A simple and quick normalization function, normalizing the inputted value between -1 and 1\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be normalized\n\n                                    \n                                \n                                \n                                    stiffness\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The incline of the function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pow2\n                        \n                        \n                    \n                \n            \n            \n                \npow2(n)\n                \n            \n\n\n\n\n            \n                \n                    Returns the 2 to the power of the specified number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number to return the 2 to the power of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nA visualisation tool of document maps\nThis project was generated with Angular CLI version 11.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRouter\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitRoutes\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_InitModule\n\n\n\ncluster_InitModule_declarations\n\n\n\ncluster_InitModule_imports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouter\n\nAppRouter\n\nAppModule -->\n\nAppRouter->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nMaterialModule->HomeModule\n\n\n\n\n\nInitModule\n\nInitModule\n\nInitModule -->\n\nMaterialModule->InitModule\n\n\n\n\n\nComparisonComponent\n\nComparisonComponent\n\nHomeModule -->\n\nComparisonComponent->HomeModule\n\n\n\n\n\nComparisonEntryComponent\n\nComparisonEntryComponent\n\nHomeModule -->\n\nComparisonEntryComponent->HomeModule\n\n\n\n\n\nDocumentComponent\n\nDocumentComponent\n\nHomeModule -->\n\nDocumentComponent->HomeModule\n\n\n\n\n\nDocumentContentComponent\n\nDocumentContentComponent\n\nHomeModule -->\n\nDocumentContentComponent->HomeModule\n\n\n\n\n\nGraphComponent\n\nGraphComponent\n\nHomeModule -->\n\nGraphComponent->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nHomeModule -->\n\nSettingsComponent->HomeModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nHomeModule -->\n\nSidenavComponent->HomeModule\n\n\n\n\n\nUserInterfaceComponent\n\nUserInterfaceComponent\n\nHomeModule -->\n\nUserInterfaceComponent->HomeModule\n\n\n\n\n\nHomeRoutes\n\nHomeRoutes\n\nHomeModule -->\n\nHomeRoutes->HomeModule\n\n\n\n\n\nInitComponent\n\nInitComponent\n\nInitModule -->\n\nInitComponent->InitModule\n\n\n\n\n\nInitRoutes\n\nInitRoutes\n\nInitModule -->\n\nInitRoutes->InitModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nPairSplitFirstPipe\n\nPairSplitFirstPipe\n\nPipesModule -->\n\nPairSplitFirstPipe->PipesModule\n\n\n\n\n\nPairSplitSecondPipe\n\nPairSplitSecondPipe\n\nPipesModule -->\n\nPairSplitSecondPipe->PipesModule\n\n\n\n\n\nPairUpPipe\n\nPairUpPipe\n\nPipesModule -->\n\nPairUpPipe->PipesModule\n\n\n\n\n\nSplitUpPipe\n\nSplitUpPipe\n\nPipesModule -->\n\nSplitUpPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nPairSplitFirstPipe \n\nPairSplitFirstPipe \n\nPairSplitFirstPipe  -->\n\nPipesModule->PairSplitFirstPipe \n\n\n\n\n\nPairSplitSecondPipe \n\nPairSplitSecondPipe \n\nPairSplitSecondPipe  -->\n\nPipesModule->PairSplitSecondPipe \n\n\n\n\n\nPairUpPipe \n\nPairUpPipe \n\nPairUpPipe  -->\n\nPipesModule->PairUpPipe \n\n\n\n\n\nSplitUpPipe \n\nSplitUpPipe \n\nSplitUpPipe  -->\n\nPipesModule->SplitUpPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WordMap   (src/.../comparison.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/sidenav/comparison/comparison.component.ts\n    \n    \n        \n            \n                \n                    \n                    WordMap\n                \n            \n            \n                \n                    A type, specifying the relation of two matched words\n\n                \n            \n            \n                \n                        Map>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            modules   (src/.../material.module.ts)\n                        \n                        \n                            pairSeparator   (src/.../various.utils.ts)\n                        \n                        \n                            searchQuerySchema   (src/.../json-validate.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/various.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairSeparator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\0'\n                        \n                    \n\n                \n                    \n                        The default pair separator, used for simulating string tuples within the app.\nNeeds to be placed in a utility file because of the WebWorker\n\n                    \n                \n\n            \n        \n\n    src/app/services/json-validate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            searchQuerySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JSONSchemaType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'object',\n  properties: {\n    dictionary: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'string'\n        }\n      }\n    },\n    results: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        }\n      }\n    },\n    texts_bow: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    },\n    version: {\n      type: 'string'\n    },\n    word_similarities: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          patternProperties: {\n            '^.+$': {\n              type: 'number'\n            }\n          }\n        }\n      }\n    }\n  },\n  required: ['dictionary', 'results', 'texts', 'texts_bow', 'version', 'word_similarities'],\n  additionalProperties: false\n}\n                        \n                    \n\n                \n                    \n                        The schema used to validate the parsed JSON\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
